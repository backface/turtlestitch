<blocks app="TurtleStitch 3.0, http://www.turtlestitch.org" version="2"><palette><category name="Geometry" color="0,127,15,1"/></palette><block-definition s="get svg command from svg string %&apos;svgstr&apos;" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%txt"></input></inputs><script><block s="doReport"><block s="evaluate"><block s="reportJSFunction"><list><l>svgstr</l></list><l>const regex = /([a-zA-Z])([^a-zA-Z]*)/g;&#xD;let cmdList = new List([]);&#xD;let match;&#xD;while ((match = regex.exec(svgstr)) !== null) {&#xD;    cmdList.add(new List([match[1],new List(match[2].trim().split(/[ ,]+/))]));&#xD;}&#xD;return cmdList;</l></block><list><block var="svgstr"/></list></block></block></script></block-definition><block-definition s="get char %&apos;char&apos;" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%txt"></input></inputs><script><block s="doDeclareVariables"><list><l>result</l></list></block><block s="doSetVar"><l>result</l><block s="reportKeep"><block s="reifyPredicate"><autolambda><block s="reportVariadicEquals"><list><block s="reportUnicode"><block s="reportListItem"><l>1</l><l/></block></block><block s="reportUnicode"><block var="char"/></block></list></block></autolambda><list></list></block><custom-block s="var %s"><l>chars_geometry_1</l></custom-block></block></block><block s="doIf"><block s="reportVariadicGreaterThan"><list><block s="reportListAttribute"><l><option>length</option></l><block var="result"/></block><l>0</l></list></block><script><block s="doReport"><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="result"/></block></block></block></script><list></list></block><block s="doReport"><l></l></block></script><scripts><script x="368.6666666666667" y="180.66666666666666"><block var="chars"/></script></scripts></block-definition><block-definition s="write text %&apos;text&apos; size %&apos;size&apos; by %&apos;stepLength&apos; gap %&apos;gap&apos; move %&apos;move&apos; style %&apos;styleScript&apos;" type="command" category="Geometry"><header></header><code></code><translations></translations><inputs><input type="%txt">Hello Turtle!</input><input type="%n">50</input><input type="%n">3</input><input type="%n">5</input><input type="%b">true</input><input type="%cmdRing"></input></inputs><script><block s="doDeclareVariables"><list><l>pointsChar</l><l>points</l><l>origin</l><l>dir</l><l>width</l><l>charVector</l><l>l</l><l>a</l></list></block><block s="doWarp"><script><block s="doIf"><block s="reportNot"><custom-block s="does var %s exist?"><l>unit_size</l></custom-block></block><script><custom-block s="create %s var %mult%txt"><l>global</l><list><l>unit_size</l></list></custom-block><custom-block s="set var %s to %s"><l>unit_size</l><l>2048</l></custom-block></script><list></list></block><block s="doIf"><block s="reportNot"><custom-block s="does var %s exist?"><l>chars_geometry_1</l></custom-block></block><script><custom-block s="create %s var %mult%txt"><l>global</l><list><l>chars_geometry_1</l></list></custom-block><custom-block s="set var %s to %s"><l>chars_geometry_1</l><custom-block s="create charsLib"></custom-block></custom-block></script><list></list></block><block s="doSetVar"><l>origin</l><block s="reportNewList"><list><block s="xPosition"></block><block s="yPosition"></block></list></block></block><block s="doSetVar"><l>dir</l><block s="direction"></block></block><block s="doForEach"><l>char</l><block s="reportTextSplit"><block var="text"/><l><option>letter</option></l></block><script><block s="doIfElse"><block s="reportVariadicNotEquals"><list><block var="char"/><l> </l></list></block><script><block s="doSetVar"><l>pointsChar</l><block s="reportNewList"><list></list></block></block><block s="doForEach"><l>项</l><custom-block s="get svg command from svg string %txt"><custom-block s="get char %txt"><block var="char"/></custom-block></custom-block><script><block s="doSetVar"><l>points</l><custom-block s="run svg command %txt params %l lastPoint %l and return points"><block s="reportListItem"><l>1</l><block var="项"/></block><block s="reportListItem"><l>2</l><block var="项"/></block><block s="reportListItem"><l><option>last</option></l><block var="pointsChar"/></block></custom-block></block><block s="doIfElse"><block s="reportVariadicOr"><list><block s="reportListIsEmpty"><block var="pointsChar"/></block><block s="reportVariadicNotEquals"><list><block s="reportListItem"><l><option>last</option></l><block var="pointsChar"/></block><block s="reportListItem"><l>1</l><block var="points"/></block></list></block></list></block><script><block s="doSetVar"><l>pointsChar</l><block s="reportConcatenatedLists"><list><block var="pointsChar"/><block var="points"/></list></block></block></script><script><block s="doSetVar"><l>pointsChar</l><block s="reportConcatenatedLists"><list><block var="pointsChar"/><block s="reportCDR"><block var="points"/></block></list></block></block></script></block></script></block><block s="doSetVar"><l>width</l><block s="reportVariadicProduct"><list><custom-block s="max x of points %l"><block var="pointsChar"/></custom-block><block s="reportQuotient"><block var="size"/><block var="unit_size"/></block></list></block></block><block s="doSetVar"><l>charVector</l><custom-block s="pointsToVector %l"><block var="pointsChar"/></custom-block></block><block s="doIfElse"><block s="reportVariadicEquals"><list><block s="reportListItem"><l>1</l><block var="charVector"/></block><l>!</l></list></block><script><block s="doSetVar"><l>l</l><block s="reportVariadicProduct"><list><block s="reportQuotient"><block var="size"/><block var="unit_size"/></block><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block var="charVector"/></block></block></list></block></block><block s="doSetVar"><l>a</l><block s="reportDifference"><custom-block s="translate angle %n"><block var="dir"/></custom-block><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block var="charVector"/></block></block></block></block><block s="up"></block><block s="doGotoObject"><block s="reportVariadicSum"><list><block var="origin"/><block s="reportNewList"><list><block s="reportVariadicProduct"><list><block var="l"/><block s="reportMonadic"><l><option>cos</option></l><block var="a"/></block></list></block><block s="reportVariadicProduct"><list><block var="l"/><block s="reportMonadic"><l><option>sin</option></l><block var="a"/></block></list></block></list></block></list></block></block><block s="setHeading"><block s="reportVariadicSum"><list><block var="dir"/><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block var="charVector"/></block></block></list></block></block><block s="down"></block></script><script><block s="up"></block><block s="doGotoObject"><block var="origin"/></block><block s="down"></block></script></block><custom-block s="drawVector %l size %n style %cmdRing mirrored %b stitch length %n"><block s="reportListItem"><block s="reportNumbers"><l>3</l><block s="reportListAttribute"><l><option>length</option></l><block var="charVector"/></block></block><block var="charVector"/></block><block s="reportQuotient"><block var="size"/><block var="unit_size"/></block><block var="styleScript"/><l><bool>false</bool></l><block var="stepLength"/></custom-block><block s="doSetVar"><l>origin</l><block s="reportVariadicSum"><list><block var="origin"/><block s="reportNewList"><list><block s="reportVariadicProduct"><list><block s="reportVariadicSum"><list><block var="width"/><block var="gap"/></list></block><block s="reportMonadic"><l><option>cos</option></l><custom-block s="translate angle %n"><block var="dir"/></custom-block></block></list></block><block s="reportVariadicProduct"><list><block s="reportVariadicSum"><list><block var="width"/><block var="gap"/></list></block><block s="reportMonadic"><l><option>sin</option></l><custom-block s="translate angle %n"><block var="dir"/></custom-block></block></list></block></list></block></list></block></block><block s="setHeading"><block var="dir"/></block></script><script><block s="doSetVar"><l>width</l><block s="reportQuotient"><block var="size"/><l>4</l></block></block><block s="doSetVar"><l>origin</l><block s="reportVariadicSum"><list><block var="origin"/><block s="reportNewList"><list><block s="reportVariadicProduct"><list><block s="reportVariadicSum"><list><block var="width"/><block var="gap"/></list></block><block s="reportMonadic"><l><option>cos</option></l><custom-block s="translate angle %n"><block var="dir"/></custom-block></block></list></block><block s="reportVariadicProduct"><list><block s="reportVariadicSum"><list><block var="width"/><block var="gap"/></list></block><block s="reportMonadic"><l><option>sin</option></l><custom-block s="translate angle %n"><block var="dir"/></custom-block></block></list></block></list></block></list></block></block><block s="setHeading"><block var="dir"/></block></script></block></script></block><block s="doIf"><block var="move"/><script><block s="jumpStitch"><l><bool>true</bool></l></block><block s="doGotoObject"><block var="origin"/></block><block s="setHeading"><block var="dir"/></block></script><list></list></block></script></block></script></block-definition><block-definition s="bezier curve points P1 %&apos;p1&apos; P2 %&apos;p2&apos; P3 %&apos;p3&apos; points number %&apos;nb&apos;" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%l"></input><input type="%l"></input><input type="%l"></input><input type="%n">50</input></inputs><script><block s="doDeclareVariables"><list><l>t</l><l>gap</l><l>points</l></list></block><block s="doWarp"><script><block s="doIf"><block s="reportVariadicLessThan"><list><block var="nb"/><l>5</l></list></block><script><block s="doSetVar"><l>nb</l><l>5</l></block></script><list></list></block><block s="doIf"><block s="reportVariadicGreaterThan"><list><block var="nb"/><l>50</l></list></block><script><block s="doSetVar"><l>nb</l><l>50</l></block></script><list></list></block><block s="doSetVar"><l>gap</l><block s="reportQuotient"><l>1</l><block s="reportDifference"><block var="nb"/><l>1</l></block></block></block><block s="doSetVar"><l>t</l><block var="gap"/></block><block s="doSetVar"><l>points</l><block s="reportNewList"><list><block var="p1"/></list></block></block><block s="doUntil"><block s="reportVariadicGreaterThan"><list><block var="t"/><block s="reportVariadicSum"><list><l>1</l><block s="reportQuotient"><block var="gap"/><l>2</l></block></list></block></list></block><script><block s="doAddToList"><block s="reportQuotient"><block s="reportRound"><block s="reportVariadicProduct"><list><block s="reportVariadicSum"><list><block s="reportVariadicProduct"><list><block var="p1"/><block s="reportPower"><block s="reportDifference"><l>1</l><block var="t"/></block><l>2</l></block></list></block><block s="reportVariadicSum"><list><block s="reportVariadicProduct"><list><block s="reportVariadicProduct"><list><block s="reportVariadicProduct"><list><l>2</l><block var="t"/></list></block><block s="reportDifference"><l>1</l><block var="t"/></block></list></block><block var="p2"/></list></block><block s="reportVariadicProduct"><list><block var="p3"/><block s="reportPower"><block var="t"/><l>2</l></block></list></block></list></block></list></block><l>1000</l></list></block></block><l>1000</l></block><block var="points"/></block><block s="doChangeVar"><l>t</l><block var="gap"/></block></script></block><block s="doReport"><block var="points"/></block></script></block></script></block-definition><block-definition s="run svg command %&apos;cmd&apos; params %&apos;params&apos; lastPoint %&apos;lastPoint&apos; and return points" type="reporter" category="sensing"><variables><list struct="atomic" id="607">reference,start</list></variables><header></header><code></code><translations></translations><inputs><input type="%txt"></input><input type="%l"></input><input type="%l"></input></inputs><script><block s="doWarp"><script><block s="doIfElse"><block s="reportVariadicEquals"><list><block var="cmd"/><l>M</l></list></block><script><block s="doIf"><block s="reportVariadicEquals"><list><block s="reportListAttribute"><l><option>length</option></l><block var="params"/></block><l>2</l></list></block><script><block s="doSetVar"><l>start</l><block var="params"/></block><block s="doReport"><block s="reportNewList"><list><l>!</l><block var="start"/></list></block></block></script><list></list></block></script><script><block s="doIfElse"><block s="reportVariadicEquals"><list><block var="cmd"/><l>l</l></list></block><script><block s="doIf"><block s="reportVariadicEquals"><list><block s="reportListAttribute"><l><option>length</option></l><block var="params"/></block><l>2</l></list></block><script><block s="doReport"><block s="reportNewList"><list><block s="reportVariadicSum"><list><block var="lastPoint"/><block var="params"/></list></block></list></block></block></script><list></list></block></script><script><block s="doIfElse"><block s="reportVariadicEquals"><list><block var="cmd"/><l>q</l></list></block><script><block s="doIf"><block s="reportVariadicEquals"><list><block s="reportListAttribute"><l><option>length</option></l><block var="params"/></block><l>4</l></list></block><script><block s="doSetVar"><l>reference</l><block s="reportVariadicSum"><list><block var="lastPoint"/><block s="reportListItem"><block s="reportNumbers"><l>1</l><l>2</l></block><block var="params"/></block></list></block></block><block s="doReport"><custom-block s="bezier curve points P1 %l P2 %l P3 %l points number %n"><block var="lastPoint"/><block var="reference"/><block s="reportVariadicSum"><list><block var="lastPoint"/><block s="reportListItem"><block s="reportNumbers"><l>3</l><l>4</l></block><block var="params"/></block></list></block><block s="reportRound"><block s="reportQuotient"><block s="reportMonadic"><l><option>sqrt</option></l><block s="reportVariadicSum"><list><block s="reportPower"><block s="reportListItem"><l>3</l><block var="params"/></block><l>2</l></block><block s="reportPower"><block s="reportListItem"><l>4</l><block var="params"/></block><l>2</l></block></list></block></block><l>1.35</l></block></block></custom-block></block></script><list></list></block></script><script><block s="doIfElse"><block s="reportVariadicEquals"><list><block var="cmd"/><l>t</l></list></block><script><block s="doIf"><block s="reportVariadicEquals"><list><block s="reportListAttribute"><l><option>length</option></l><block var="params"/></block><l>2</l></list></block><script><block s="doSetVar"><l>reference</l><block s="reportVariadicSum"><list><block var="lastPoint"/><block s="reportMonadic"><l><option>neg</option></l><block s="reportDifference"><block var="reference"/><block var="lastPoint"/></block></block></list></block></block><block s="doReport"><custom-block s="bezier curve points P1 %l P2 %l P3 %l points number %n"><block var="lastPoint"/><block var="reference"/><block s="reportVariadicSum"><list><block var="lastPoint"/><block s="reportListItem"><block s="reportNumbers"><l>1</l><l>2</l></block><block var="params"/></block></list></block><block s="reportRound"><block s="reportQuotient"><block s="reportMonadic"><l><option>sqrt</option></l><block s="reportVariadicSum"><list><block s="reportPower"><block s="reportListItem"><l>1</l><block var="params"/></block><l>2</l></block><block s="reportPower"><block s="reportListItem"><l>2</l><block var="params"/></block><l>2</l></block></list></block></block><l>1.35</l></block></block></custom-block></block></script><list></list></block></script><script><block s="doIfElse"><block s="reportVariadicEquals"><list><block var="cmd"/><l>v</l></list></block><script><block s="doIf"><block s="reportVariadicEquals"><list><block s="reportListAttribute"><l><option>length</option></l><block var="params"/></block><l>1</l></list></block><script><block s="doReport"><block s="reportNewList"><list><block s="reportVariadicSum"><list><block var="lastPoint"/><block s="reportNewList"><list><l>0</l><block s="reportListItem"><l>1</l><block var="params"/></block></list></block></list></block></list></block></block></script><list></list></block></script><script><block s="doIfElse"><block s="reportVariadicEquals"><list><block var="cmd"/><l>h</l></list></block><script><block s="doIf"><block s="reportVariadicEquals"><list><block s="reportListAttribute"><l><option>length</option></l><block var="params"/></block><l>1</l></list></block><script><block s="doReport"><block s="reportNewList"><list><block s="reportVariadicSum"><list><block var="lastPoint"/><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block var="params"/></block><l>0</l></list></block></list></block></list></block></block></script><list></list></block></script><script><block s="doIf"><block s="reportVariadicEquals"><list><block var="cmd"/><l>z</l></list></block><script><block s="doReport"><block s="reportNewList"><list><block var="start"/></list></block></block></script><list></list></block></script></block></script></block></script></block></script></block></script></block></script></block></script></block></script></block-definition><block-definition s="max x of points %&apos;points&apos;" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%l"></input></inputs><script><block s="doDeclareVariables"><list><l>realpoints</l><l>result</l></list></block><block s="doWarp"><script><block s="doSetVar"><l>realpoints</l><block s="reportKeep"><block s="reifyPredicate"><autolambda><block s="reportIsA"><l></l><l><option>list</option></l></block></autolambda><list></list></block><block var="points"/></block></block><block s="doSetVar"><l>result</l><custom-block s="$flash sort %l ordering with %predRing"><block var="realpoints"/><block s="reifyPredicate"><autolambda><block s="reportVariadicGreaterThan"><list><block s="reportListItem"><l>1</l><l/></block><block s="reportListItem"><l>1</l><l/></block></list></block></autolambda><list></list></block></custom-block></block><block s="doReport"><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block var="result"/></block></block></block></script></block></script></block-definition><block-definition s="move %&apos;distance&apos; style %&apos;styleScript&apos; by %&apos;stepLength&apos;" type="command" category="Geometry"><header></header><code></code><translations>zh_CN:移动 _ 步 方式 _ 步长 _&#xD;</translations><inputs><input type="%n">50</input><input type="%cmdRing"></input><input type="%txt">0</input></inputs><script><block s="doDeclareVariables"><list><l>dist</l><l>dir</l></list></block><block s="doWarp"><script><block s="doIf"><block s="reportNot"><block s="reportIsA"><block var="stepLength"/><l><option>number</option></l></block></block><script><block s="doIfElse"><block s="reportVariadicEquals"><list><block var="stepLength"/><l></l></list></block><script><block s="doSetVar"><l>stepLength</l><block var="distance"/></block></script><script><block s="doSetVar"><l>stepLength</l><l>0</l></block></script></block></script><list></list></block><block s="doSetVar"><l>stepLength</l><block s="reportIfElse"><block s="reportVariadicGreaterThan"><list><block var="stepLength"/><l>0</l></list></block><block var="stepLength"/><block s="reportIfElse"><block s="reportVariadicGreaterThan"><list><custom-block s="default stitch length"></custom-block><l>0</l></list></block><custom-block s="default stitch length"></custom-block><l>10</l></block></block></block><block s="doSetVar"><l>dir</l><l>1</l></block><block s="doIf"><block s="reportVariadicLessThan"><list><block var="distance"/><l>0</l></list></block><script><block s="doSetVar"><l>dir</l><l>-1</l></block></script><list></list></block><block s="doIf"><custom-block s="Is %cmdRing empty?"><block var="styleScript"/></custom-block><script><block s="doSetVar"><l>styleScript</l><custom-block s="stitch style"></custom-block></block></script><list></list></block><block s="doSetVar"><l>dist</l><block s="reportMonadic"><l><option>abs</option></l><block var="distance"/></block></block><block s="doUntil"><block s="reportVariadicLessThan"><list><block var="dist"/><block s="reportVariadicProduct"><list><block var="stepLength"/><l>2</l></list></block></list></block><script><block s="doRun"><block var="styleScript"/><list><block s="reportVariadicProduct"><list><block var="dir"/><block var="stepLength"/></list></block></list></block><block s="doChangeVar"><l>dist</l><block s="reportVariadicProduct"><list><l>-1</l><block var="stepLength"/></list></block></block></script></block><block s="doIfElse"><block s="reportVariadicGreaterThan"><list><block var="dist"/><block s="reportVariadicProduct"><list><block var="stepLength"/><l>1.5</l></list></block></list></block><script><block s="doRun"><block var="styleScript"/><list><block s="reportVariadicProduct"><list><block var="dir"/><block var="stepLength"/></list></block></list></block><block s="doRun"><block var="styleScript"/><list><block s="reportVariadicProduct"><list><block var="dir"/><block s="reportDifference"><block var="dist"/><block var="stepLength"/></block></list></block></list></block></script><script><block s="doRun"><block var="styleScript"/><list><block s="reportVariadicProduct"><list><block var="dir"/><block var="dist"/></list></block></list></block></script></block></script></block></script></block-definition><block-definition s="diamond stitch length %&apos;length&apos; width %&apos;width&apos;" type="command" category="embroidery"><header></header><code></code><translations>zh_CN:钻石针 齿距 _ 宽度 _&#xD;</translations><inputs><input type="%n">10</input><input type="%n">12</input></inputs><script><block s="doDeclareVariables"><list><l>a</l><l>l</l></list></block><block s="doWarp"><script><block s="doSetVar"><l>a</l><block s="reportMonadic"><l><option>atan</option></l><block s="reportQuotient"><block var="width"/><block var="length"/></block></block></block><block s="doSetVar"><l>l</l><block s="reportQuotient"><block s="reportQuotient"><block var="length"/><l>2</l></block><block s="reportMonadic"><l><option>cos</option></l><block var="a"/></block></block></block><block s="turnLeft"><block var="a"/></block><block s="doRepeat"><l>2</l><script><block s="forward"><block var="l"/></block><block s="turn"><block s="reportVariadicProduct"><list><l>2</l><block var="a"/></list></block></block><block s="forward"><block var="l"/></block><block s="turn"><block s="reportDifference"><l>180</l><block s="reportVariadicProduct"><list><l>2</l><block var="a"/></list></block></block></block></script></block><block s="turn"><block var="a"/></block><block s="forward"><block var="length"/></block></script></block></script></block-definition><block-definition s="go to %&apos;dest&apos; style %&apos;styleScript&apos; by %&apos;stepLength&apos;" type="command" category="Geometry"><header></header><code></code><translations>zh_CN:移到 _ 方式 _ 步长 _&#xD;</translations><inputs><input type="%l"></input><input type="%cmdRing">no&#xD;        &#xD;        <options>no&#xD;foldLine&#xD;randomFoldLine&#xD;curveLine</options></input><input type="%txt">0</input></inputs><script><block s="doDeclareVariables"><list><l>distance</l><l>orgDir</l></list></block><block s="doWarp"><script><block s="doSetVar"><l>orgDir</l><block s="direction"></block></block><block s="doIf"><block s="reportNot"><block s="reportIsA"><block var="stepLength"/><l><option>number</option></l></block></block><script><block s="doIfElse"><block s="reportVariadicEquals"><list><block var="stepLength"/><l></l></list></block><script><block s="doSetVar"><l>stepLength</l><custom-block s="lineLength %l"><block var="dest"/></custom-block></block></script><script><block s="doSetVar"><l>stepLength</l><l>0</l></block></script></block></script><list></list></block><block s="doSetVar"><l>stepLength</l><block s="reportIfElse"><block s="reportVariadicGreaterThan"><list><block var="stepLength"/><l>0</l></list></block><block var="stepLength"/><block s="reportIfElse"><block s="reportVariadicGreaterThan"><list><custom-block s="default stitch length"></custom-block><l>0</l></list></block><custom-block s="default stitch length"></custom-block><l>10</l></block></block></block><block s="doIf"><custom-block s="Is %cmdRing empty?"><block var="styleScript"/></custom-block><script><block s="doSetVar"><l>styleScript</l><custom-block s="stitch style"></custom-block></block></script><list></list></block><block s="doSetVar"><l>distance</l><custom-block s="lineLength %l"><block var="dest"/></custom-block></block><block s="doFaceTowards"><block var="dest"/></block><block s="doUntil"><block s="reportVariadicLessThan"><list><block var="distance"/><block s="reportVariadicSum"><list><block var="stepLength"/><l>0.5</l></list></block></list></block><script><block s="doRun"><block var="styleScript"/><list><block var="stepLength"/></list></block><block s="doSetVar"><l>distance</l><custom-block s="lineLength %l"><block var="dest"/></custom-block></block></script></block><block s="doRun"><block var="styleScript"/><list><block var="distance"/></list></block><block s="setHeading"><block var="orgDir"/></block></script></block></script></block-definition><block-definition s="arc $turnLeft radius %&apos;radius&apos; degrees %&apos;degrees&apos; style %&apos;styleScript&apos; by %&apos;segLength&apos;" type="command" category="Geometry"><header></header><code></code><translations>zh_CN:左旋圆弧 半径 _ 弧度 _ 方式 _&#xD;</translations><inputs><input type="%n">50</input><input type="%n">30</input><input type="%cmdRing"></input><input type="%n"></input></inputs><script><block s="doDeclareVariables"><list><l>n</l><l>angle</l></list></block><block s="doWarp"><script><block s="doSetVar"><l>n</l><block s="reportMonadic"><l><option>ceiling</option></l><block s="reportVariadicProduct"><list><block s="reportVariadicProduct"><list><block var="radius"/><block s="reportQuotient"><block var="degrees"/><l>360</l></block></list></block><block s="reportQuotient"><l>6.283</l><block s="reportIfElse"><block s="reportVariadicGreaterThan"><list><block var="segLength"/><l>0</l></list></block><block var="segLength"/><block s="reportIfElse"><block s="reportVariadicGreaterThan"><list><custom-block s="default stitch length"></custom-block><l>0</l></list></block><custom-block s="default stitch length"></custom-block><l>10</l></block></block></block></list></block></block></block><block s="doSetVar"><l>angle</l><block s="reportQuotient"><block var="degrees"/><block var="n"/></block></block><block s="doIf"><custom-block s="Is %cmdRing empty?"><block var="styleScript"/></custom-block><script><block s="doSetVar"><l>styleScript</l><custom-block s="stitch style"></custom-block></block></script><list></list></block><block s="doRepeat"><block var="n"/><script><block s="turnLeft"><block s="reportQuotient"><block var="angle"/><l>2</l></block></block><block s="doRun"><block var="styleScript"/><list><block s="reportVariadicProduct"><list><l>2</l><block s="reportVariadicProduct"><list><block var="radius"/><block s="reportMonadic"><l><option>sin</option></l><block s="reportQuotient"><block var="angle"/><l>2</l></block></block></list></block></list></block></list></block><block s="turnLeft"><block s="reportQuotient"><block var="angle"/><l>2</l></block></block></script></block></script></block></script></block-definition><block-definition s="arc $turnRight radius %&apos;radius&apos; degrees %&apos;degrees&apos; style %&apos;styleScript&apos; by %&apos;segLength&apos;" type="command" category="Geometry"><header></header><code></code><translations>zh_CN:右旋圆弧 半径 _ 弧度 _ 方式 _&#xD;</translations><inputs><input type="%n">50</input><input type="%n">30</input><input type="%cmdRing"></input><input type="%n"></input></inputs><script><block s="doDeclareVariables"><list><l>n</l><l>angle</l></list></block><block s="doWarp"><script><block s="doSetVar"><l>n</l><block s="reportMonadic"><l><option>ceiling</option></l><block s="reportVariadicProduct"><list><block s="reportVariadicProduct"><list><block var="radius"/><block s="reportQuotient"><block var="degrees"/><l>360</l></block></list></block><block s="reportQuotient"><l>6.283</l><block s="reportIfElse"><block s="reportVariadicGreaterThan"><list><block var="segLength"/><l>0</l></list></block><block var="segLength"/><block s="reportIfElse"><block s="reportVariadicGreaterThan"><list><custom-block s="default stitch length"></custom-block><l>0</l></list></block><custom-block s="default stitch length"></custom-block><l>10</l></block></block></block></list></block></block></block><block s="doSetVar"><l>angle</l><block s="reportQuotient"><block var="degrees"/><block var="n"/></block></block><block s="doIf"><custom-block s="Is %cmdRing empty?"><block var="styleScript"/></custom-block><script><block s="doSetVar"><l>styleScript</l><custom-block s="stitch style"></custom-block></block></script><list></list></block><block s="doRepeat"><block var="n"/><script><block s="turn"><block s="reportQuotient"><block var="angle"/><l>2</l></block></block><block s="doRun"><block var="styleScript"/><list><block s="reportVariadicProduct"><list><l>2</l><block s="reportVariadicProduct"><list><block var="radius"/><block s="reportMonadic"><l><option>sin</option></l><block s="reportQuotient"><block var="angle"/><l>2</l></block></block></list></block></list></block></list></block><block s="turn"><block s="reportQuotient"><block var="angle"/><l>2</l></block></block></script></block></script></block></script></block-definition><block-definition s="arc %&apos;distance&apos; angle %&apos;angle&apos; turn %&apos;direction&apos; style %&apos;styleScript&apos; by %&apos;segmentLength&apos;" type="command" category="Geometry"><header></header><code></code><translations>zh_CN:圆弧 _ 步 角度 _ 方向 _ 方式 _ 步长 _&#xD;</translations><inputs><input type="%n">50</input><input type="%n">30</input><input type="%txt">right<options>right&#xD;left</options></input><input type="%cmdRing"></input><input type="%n">0</input></inputs><script><block s="doDeclareVariables"><list><l>r</l><l>segLength</l><l>dir</l><l>sections</l></list></block><block s="doWarp"><script><block s="doIf"><block s="reportVariadicLessThan"><list><block var="angle"/><l>360</l></list></block><script><block s="doIf"><custom-block s="Is %cmdRing empty?"><block var="styleScript"/></custom-block><script><block s="doSetVar"><l>styleScript</l><custom-block s="stitch style"></custom-block></block></script><list></list></block><block s="doSetVar"><l>dir</l><block s="direction"></block></block><block s="doSetVar"><l>r</l><block s="reportQuotient"><block s="reportQuotient"><block var="distance"/><l>2</l></block><block s="reportMonadic"><l><option>sin</option></l><block s="reportQuotient"><block var="angle"/><l>2</l></block></block></block></block><block s="doSetVar"><l>sections</l><block s="reportMonadic"><l><option>ceiling</option></l><block s="reportVariadicProduct"><list><block s="reportVariadicProduct"><list><block var="r"/><block s="reportQuotient"><block var="angle"/><l>360</l></block></list></block><block s="reportQuotient"><l>6.283</l><block s="reportIfElse"><block s="reportVariadicGreaterThan"><list><block var="segmentLength"/><l>0</l></list></block><block var="segmentLength"/><block s="reportIfElse"><block s="reportVariadicGreaterThan"><list><custom-block s="default stitch length"></custom-block><l>0</l></list></block><custom-block s="default stitch length"></custom-block><l>10</l></block></block></block></list></block></block></block><block s="doSetVar"><l>segLength</l><block s="reportMonadic"><l><option>sqrt</option></l><block s="reportVariadicProduct"><list><block s="reportVariadicProduct"><list><block s="reportVariadicProduct"><list><block var="r"/><block var="r"/></list></block><l>2</l></list></block><block s="reportDifference"><l>1</l><block s="reportMonadic"><l><option>cos</option></l><block s="reportQuotient"><block var="angle"/><block var="sections"/></block></block></block></list></block></block></block><block s="doIfElse"><block s="reportVariadicEquals"><list><block var="direction"/><l>right</l></list></block><script><block s="turnLeft"><block s="reportQuotient"><block s="reportDifference"><block var="angle"/><block s="reportQuotient"><block var="angle"/><block var="sections"/></block></block><l>2</l></block></block><block s="doRepeat"><block var="sections"/><script><block s="doRun"><block var="styleScript"/><list><block var="segLength"/></list></block><block s="turn"><block s="reportQuotient"><block var="angle"/><block var="sections"/></block></block></script></block></script><script><block s="turn"><block s="reportQuotient"><block s="reportDifference"><block var="angle"/><block s="reportQuotient"><block var="angle"/><block var="sections"/></block></block><l>2</l></block></block><block s="doRepeat"><block var="sections"/><script><block s="doRun"><block var="styleScript"/><list><block var="segLength"/></list></block><block s="turnLeft"><block s="reportQuotient"><block var="angle"/><block var="sections"/></block></block></script></block></script></block><block s="setHeading"><block var="dir"/></block></script><list></list></block></script></block></script></block-definition><block-definition s="arc %&apos;distance&apos; angle %&apos;angle&apos; in %&apos;sections&apos; turn %&apos;direction&apos; style %&apos;styleScript&apos;" type="command" category="Geometry"><header></header><code></code><translations>zh_CN:圆弧 _ 步 角度 _ 分段数 _ 方向 _ 方式 _&#xD;</translations><inputs><input type="%n">50</input><input type="%n">30</input><input type="%n">10</input><input type="%txt">right<options>right&#xD;left</options></input><input type="%cmdRing"></input></inputs><script><block s="doDeclareVariables"><list><l>r</l><l>segLength</l><l>dir</l></list></block><block s="doWarp"><script><block s="doIf"><block s="reportVariadicLessThan"><list><block var="angle"/><l>360</l></list></block><script><block s="doIf"><custom-block s="Is %cmdRing empty?"><block var="styleScript"/></custom-block><script><block s="doSetVar"><l>styleScript</l><custom-block s="stitch style"></custom-block></block></script><list></list></block><block s="doSetVar"><l>dir</l><block s="direction"></block></block><block s="doSetVar"><l>r</l><block s="reportQuotient"><block s="reportQuotient"><block var="distance"/><l>2</l></block><block s="reportMonadic"><l><option>sin</option></l><block s="reportQuotient"><block var="angle"/><l>2</l></block></block></block></block><block s="doSetVar"><l>segLength</l><block s="reportMonadic"><l><option>sqrt</option></l><block s="reportVariadicProduct"><list><block s="reportVariadicProduct"><list><block s="reportVariadicProduct"><list><block var="r"/><block var="r"/></list></block><l>2</l></list></block><block s="reportDifference"><l>1</l><block s="reportMonadic"><l><option>cos</option></l><block s="reportQuotient"><block var="angle"/><block var="sections"/></block></block></block></list></block></block></block><block s="doIfElse"><block s="reportVariadicEquals"><list><block var="direction"/><l>right</l></list></block><script><block s="turnLeft"><block s="reportQuotient"><block s="reportDifference"><block var="angle"/><block s="reportQuotient"><block var="angle"/><block var="sections"/></block></block><l>2</l></block></block><block s="doRepeat"><block var="sections"/><script><block s="doRun"><block var="styleScript"/><list><block var="segLength"/></list></block><block s="turn"><block s="reportQuotient"><block var="angle"/><block var="sections"/></block></block></script></block></script><script><block s="turn"><block s="reportQuotient"><block s="reportDifference"><block var="angle"/><block s="reportQuotient"><block var="angle"/><block var="sections"/></block></block><l>2</l></block></block><block s="doRepeat"><block var="sections"/><script><block s="doRun"><block var="styleScript"/><list><block var="segLength"/></list></block><block s="turnLeft"><block s="reportQuotient"><block var="angle"/><block var="sections"/></block></block></script></block></script></block><block s="setHeading"><block var="dir"/></block></script><list></list></block></script></block></script></block-definition><block-definition s="circle diam %&apos;diam&apos; in %&apos;sections&apos; turn %&apos;direction&apos; style %&apos;styleScript&apos;" type="command" category="Geometry"><variables><list struct="atomic" id="1908">part1,part2</list></variables><header></header><code></code><translations>zh_CN:圆形 直径 _ 分段数 _ 方向 _ 方式 _&#xD;</translations><inputs><input type="%n">100</input><input type="%n">20</input><input type="%txt">right<options>right&#xD;left</options></input><input type="%cmdRing"></input></inputs><script><block s="doDeclareVariables"><list><l>r</l><l>segLength</l><l>dir</l><l>angle</l></list></block><block s="doWarp"><script><block s="doSetVar"><l>angle</l><l>360</l></block><block s="doIf"><custom-block s="Is %cmdRing empty?"><block var="styleScript"/></custom-block><script><block s="doSetVar"><l>styleScript</l><custom-block s="stitch style"></custom-block></block></script><list></list></block><block s="doSetVar"><l>dir</l><block s="direction"></block></block><block s="doSetVar"><l>r</l><block s="reportQuotient"><block var="diam"/><l>2</l></block></block><block s="doSetVar"><l>segLength</l><block s="reportMonadic"><l><option>sqrt</option></l><block s="reportVariadicProduct"><list><block s="reportVariadicProduct"><list><block s="reportVariadicProduct"><list><block var="r"/><block var="r"/></list></block><l>2</l></list></block><block s="reportDifference"><l>1</l><block s="reportMonadic"><l><option>cos</option></l><block s="reportQuotient"><block var="angle"/><block var="sections"/></block></block></block></list></block></block></block><block s="doIfElse"><block s="reportVariadicEquals"><list><block var="direction"/><l>right</l></list></block><script><block s="turnLeft"><block s="reportQuotient"><block s="reportDifference"><l>180</l><block s="reportQuotient"><block var="angle"/><block var="sections"/></block></block><l>2</l></block></block><block s="doRepeat"><block var="sections"/><script><block s="doRun"><block var="styleScript"/><list><block var="segLength"/></list></block><block s="turn"><block s="reportQuotient"><block var="angle"/><block var="sections"/></block></block></script></block></script><script><block s="turn"><block s="reportQuotient"><block s="reportDifference"><l>180</l><block s="reportQuotient"><block var="angle"/><block var="sections"/></block></block><l>2</l></block></block><block s="doRepeat"><block var="sections"/><script><block s="doRun"><block var="styleScript"/><list><block var="segLength"/></list></block><block s="turnLeft"><block s="reportQuotient"><block var="angle"/><block var="sections"/></block></block></script></block></script></block><block s="setHeading"><block var="dir"/></block></script></block></script></block-definition><block-definition s="circle centre %&apos;centre&apos; diam %&apos;diam&apos; style %&apos;styleScript&apos;" type="command" category="Geometry"><header></header><code></code><translations>zh_CN:圆形 圆心 _ 直径 _ 方式 _&#xD;</translations><inputs><input type="%l"></input><input type="%n">20</input><input type="%cmdRing"></input></inputs><script><block s="doWarp"><script><block s="doIf"><custom-block s="Is %cmdRing empty?"><block var="styleScript"/></custom-block><script><block s="doSetVar"><l>styleScript</l><custom-block s="stitch style"></custom-block></block></script><list></list></block><block s="up"></block><block s="doGotoObject"><block var="centre"/></block><block s="turn"><l>180</l></block><block s="forward"><block s="reportQuotient"><block var="diam"/><l>2</l></block></block><block s="turn"><l>180</l></block><block s="down"></block><block s="doIfElse"><block s="reportVariadicLessThan"><list><block var="diam"/><l>20</l></list></block><script><custom-block s="circle diam %n in %n turn %txt style %cmdRing"><block var="diam"/><l>12</l><l>right</l><block var="styleScript"/></custom-block></script><script><block s="doRepeat"><l>2</l><script><custom-block s="arc %n angle %n turn %txt style %cmdRing by %n"><block var="diam"/><l>180</l><l>right</l><block var="styleScript"/><l>0</l></custom-block><block s="turn"><l>180</l></block></script></block></script></block><block s="up"></block><block s="forward"><block s="reportQuotient"><block var="diam"/><l>2</l></block></block><block s="down"></block></script></block></script></block-definition><block-definition s="%&apos;#&apos; move %&apos;distance&apos; style %&apos;styleScript&apos; by %&apos;stepLength&apos;" type="command" category="Geometry"><header></header><code></code><translations>zh_CN:_ 移动 _ 步 方式 _ 步长 _&#xD;</translations><inputs><input type="%upvar"></input><input type="%n">50</input><input type="%cmdRing"></input><input type="%txt">0</input></inputs><script><block s="doDeclareVariables"><list><l>dist</l><l>dir</l></list></block><block s="doWarp"><script><block s="doIf"><block s="reportNot"><block s="reportIsA"><block var="stepLength"/><l><option>number</option></l></block></block><script><block s="doIfElse"><block s="reportVariadicEquals"><list><block var="stepLength"/><l></l></list></block><script><block s="doSetVar"><l>stepLength</l><block var="distance"/></block></script><script><block s="doSetVar"><l>stepLength</l><l>0</l></block></script></block></script><list></list></block><block s="doSetVar"><l>stepLength</l><block s="reportIfElse"><block s="reportVariadicGreaterThan"><list><block var="stepLength"/><l>0</l></list></block><block var="stepLength"/><block s="reportIfElse"><block s="reportVariadicGreaterThan"><list><custom-block s="default stitch length"></custom-block><l>0</l></list></block><custom-block s="default stitch length"></custom-block><l>10</l></block></block></block><block s="doSetVar"><l>dir</l><l>1</l></block><block s="doIf"><block s="reportVariadicLessThan"><list><block var="distance"/><l>0</l></list></block><script><block s="doSetVar"><l>dir</l><l>-1</l></block></script><list></list></block><block s="doIf"><custom-block s="Is %cmdRing empty?"><block var="styleScript"/></custom-block><script><block s="doSetVar"><l>styleScript</l><custom-block s="stitch style"></custom-block></block></script><list></list></block><block s="doSetVar"><l>dist</l><block s="reportMonadic"><l><option>abs</option></l><block var="distance"/></block></block><block s="doSetVar"><l>#</l><l>1</l></block><block s="doUntil"><block s="reportVariadicLessThan"><list><block var="dist"/><block s="reportVariadicProduct"><list><block var="stepLength"/><l>2</l></list></block></list></block><script><block s="doRun"><block var="styleScript"/><list><block s="reportVariadicProduct"><list><block var="dir"/><block var="stepLength"/></list></block></list></block><block s="doChangeVar"><l>dist</l><block s="reportVariadicProduct"><list><l>-1</l><block var="stepLength"/></list></block></block><block s="doChangeVar"><l>#</l><l>1</l></block></script></block><block s="doIfElse"><block s="reportVariadicGreaterThan"><list><block var="dist"/><block s="reportVariadicProduct"><list><block var="stepLength"/><l>1.5</l></list></block></list></block><script><block s="doRun"><block var="styleScript"/><list><block s="reportVariadicProduct"><list><block var="dir"/><block var="stepLength"/></list></block></list></block><block s="doChangeVar"><l>#</l><l>1</l></block><block s="doRun"><block var="styleScript"/><list><block s="reportVariadicProduct"><list><block var="dir"/><block s="reportDifference"><block var="dist"/><block var="stepLength"/></block></list></block></list></block></script><script><block s="doRun"><block var="styleScript"/><list><block s="reportVariadicProduct"><list><block var="dir"/><block var="dist"/></list></block></list></block></script></block></script></block></script></block-definition><block-definition s="%&apos;#&apos; arc %&apos;distance&apos; angle %&apos;angle&apos; in %&apos;sections&apos; turn %&apos;direction&apos; style %&apos;styleScript&apos;" type="command" category="Geometry"><header></header><code></code><translations>zh_CN:_ 圆弧 _ 步 角度 _ 分段数 _ 方向 _ 方式 _&#xD;</translations><inputs><input type="%upvar"></input><input type="%n">50</input><input type="%n">30</input><input type="%n">10</input><input type="%txt">right<options>right&#xD;left</options></input><input type="%cmdRing"></input></inputs><script><block s="doDeclareVariables"><list><l>r</l><l>segLength</l><l>dir</l></list></block><block s="doIf"><custom-block s="Is %cmdRing empty?"><block var="styleScript"/></custom-block><script><block s="doSetVar"><l>styleScript</l><custom-block s="stitch style"></custom-block></block></script><list></list></block><block s="doSetVar"><l>dir</l><block s="direction"></block></block><block s="doSetVar"><l>r</l><block s="reportQuotient"><block s="reportQuotient"><block var="distance"/><l>2</l></block><block s="reportMonadic"><l><option>sin</option></l><block s="reportQuotient"><block var="angle"/><l>2</l></block></block></block></block><block s="doSetVar"><l>segLength</l><block s="reportMonadic"><l><option>sqrt</option></l><block s="reportVariadicProduct"><list><block s="reportVariadicProduct"><list><block s="reportVariadicProduct"><list><block var="r"/><block var="r"/></list></block><l>2</l></list></block><block s="reportDifference"><l>1</l><block s="reportMonadic"><l><option>cos</option></l><block s="reportQuotient"><block var="angle"/><block var="sections"/></block></block></block></list></block></block></block><block s="doSetVar"><l>#</l><l>1</l></block><block s="doIfElse"><block s="reportVariadicEquals"><list><block var="direction"/><l>right</l></list></block><script><block s="turnLeft"><block s="reportQuotient"><block s="reportDifference"><block var="angle"/><block s="reportQuotient"><block var="angle"/><block var="sections"/></block></block><l>2</l></block></block><block s="doRepeat"><block var="sections"/><script><block s="doRun"><block var="styleScript"/><list><block var="segLength"/></list></block><block s="turn"><block s="reportQuotient"><block var="angle"/><block var="sections"/></block></block><block s="doChangeVar"><l>#</l><l>1</l></block></script></block></script><script><block s="turn"><block s="reportQuotient"><block s="reportDifference"><block var="angle"/><block s="reportQuotient"><block var="angle"/><block var="sections"/></block></block><l>2</l></block></block><block s="doRepeat"><block var="sections"/><script><block s="doRun"><block var="styleScript"/><list><block var="segLength"/></list></block><block s="turnLeft"><block s="reportQuotient"><block var="angle"/><block var="sections"/></block></block><block s="doChangeVar"><l>#</l><l>1</l></block></script></block></script></block><block s="setHeading"><block var="dir"/></block></script></block-definition><block-definition s="%&apos;#&apos; circle diam %&apos;diam&apos; in %&apos;sections&apos; turn %&apos;direction&apos; style %&apos;styleScript&apos;" type="command" category="Geometry"><variables><list struct="atomic" id="2431">part1,part2</list></variables><header></header><code></code><translations>zh_CN:_ 圆形 直径 _ 分段数 _ 方向 _ 方式 _&#xD;</translations><inputs><input type="%upvar"></input><input type="%n">100</input><input type="%n">20</input><input type="%txt">right<options>right&#xD;left</options></input><input type="%cmdRing"></input></inputs><script><block s="doDeclareVariables"><list><l>r</l><l>segLength</l><l>dir</l><l>angle</l></list></block><block s="doWarp"><script><block s="doSetVar"><l>angle</l><l>360</l></block><block s="doIf"><custom-block s="Is %cmdRing empty?"><block var="styleScript"/></custom-block><script><block s="doSetVar"><l>styleScript</l><block s="reifyScript"><script><block s="forward"><l></l></block></script><list></list></block></block></script><list></list></block><block s="doSetVar"><l>dir</l><block s="direction"></block></block><block s="doSetVar"><l>r</l><block s="reportQuotient"><block var="diam"/><l>2</l></block></block><block s="doSetVar"><l>segLength</l><block s="reportMonadic"><l><option>sqrt</option></l><block s="reportVariadicProduct"><list><block s="reportVariadicProduct"><list><block s="reportVariadicProduct"><list><block var="r"/><block var="r"/></list></block><l>2</l></list></block><block s="reportDifference"><l>1</l><block s="reportMonadic"><l><option>cos</option></l><block s="reportQuotient"><block var="angle"/><block var="sections"/></block></block></block></list></block></block></block><block s="doSetVar"><l>#</l><l>1</l></block><block s="doIfElse"><block s="reportVariadicEquals"><list><block var="direction"/><l>right</l></list></block><script><block s="turnLeft"><block s="reportQuotient"><block s="reportDifference"><l>180</l><block s="reportQuotient"><block var="angle"/><block var="sections"/></block></block><l>2</l></block></block><block s="doRepeat"><block var="sections"/><script><block s="doRun"><block var="styleScript"/><list><block var="segLength"/></list></block><block s="turn"><block s="reportQuotient"><block var="angle"/><block var="sections"/></block></block><block s="doChangeVar"><l>#</l><l>1</l></block></script></block></script><script><block s="turn"><block s="reportQuotient"><block s="reportDifference"><l>180</l><block s="reportQuotient"><block var="angle"/><block var="sections"/></block></block><l>2</l></block></block><block s="doRepeat"><block var="sections"/><script><block s="doRun"><block var="styleScript"/><list><block var="segLength"/></list></block><block s="turnLeft"><block s="reportQuotient"><block var="angle"/><block var="sections"/></block></block><block s="doChangeVar"><l>#</l><l>1</l></block></script></block></script></block><block s="setHeading"><block var="dir"/></block></script></block></script></block-definition><block-definition s="fold line %&apos;distance&apos; width %&apos;range&apos; direction %&apos;direction&apos; style %&apos;styleScript&apos;" type="command" category="Geometry"><variables><list struct="atomic" id="2577">line1,line2,dir</list></variables><header></header><code></code><translations>zh_CN:折线 _ 步 宽度 _ 方向 _ 方式 _&#xD;</translations><inputs><input type="%n"></input><input type="%n">10</input><input type="%txt">left<options>left&#xD;right&#xD;middle</options></input><input type="%cmdRing"></input></inputs><script><block s="doDeclareVariables"><list><l>angle</l><l>chord</l></list></block><block s="doWarp"><script><block s="doIf"><block s="reportVariadicEquals"><list><block var="distance"/><l>0</l></list></block><script><block s="doSetVar"><l>distance</l><block s="reportIfElse"><block s="reportVariadicGreaterThan"><list><custom-block s="default stitch length"></custom-block><l>0</l></list></block><custom-block s="default stitch length"></custom-block><l>10</l></block></block></script><list></list></block><block s="doIf"><custom-block s="Is %cmdRing empty?"><block var="styleScript"/></custom-block><script><block s="doSetVar"><l>styleScript</l><custom-block s="stitch style"></custom-block></block></script><list></list></block><block s="doSetVar"><l>angle</l><block s="reportMonadic"><l><option>atan</option></l><block s="reportQuotient"><block var="range"/><block s="reportQuotient"><block var="distance"/><l>2</l></block></block></block></block><block s="doSetVar"><l>chord</l><block s="reportQuotient"><block var="range"/><block s="reportMonadic"><l><option>sin</option></l><block var="angle"/></block></block></block><block s="doIfElse"><block s="reportVariadicEquals"><list><block var="direction"/><l>middle</l></list></block><script><custom-block s="fold line %n width %n direction %txt style %cmdRing"><block s="reportQuotient"><block var="distance"/><l>2</l></block><block s="reportQuotient"><block var="range"/><l>2</l></block><l>left</l><block var="styleScript"/></custom-block><custom-block s="fold line %n width %n direction %txt style %cmdRing"><block s="reportQuotient"><block var="distance"/><l>2</l></block><block s="reportQuotient"><block var="range"/><l>2</l></block><l>right</l><block var="styleScript"/></custom-block></script><script><block s="doIfElse"><block s="reportVariadicEquals"><list><block var="direction"/><l>left</l></list></block><script><block s="turnLeft"><block var="angle"/></block><block s="doRun"><block var="styleScript"/><list><block var="chord"/></list></block><block s="turn"><block s="reportVariadicProduct"><list><l>2</l><block var="angle"/></list></block></block><block s="doRun"><block var="styleScript"/><list><block var="chord"/></list></block><block s="turnLeft"><block var="angle"/></block></script><script><block s="turn"><block var="angle"/></block><block s="doRun"><block var="styleScript"/><list><block var="chord"/></list></block><block s="turnLeft"><block s="reportVariadicProduct"><list><l>2</l><block var="angle"/></list></block></block><block s="doRun"><block var="styleScript"/><list><block var="chord"/></list></block><block s="turn"><block var="angle"/></block></script></block></script></block></script></block></script></block-definition><block-definition s="fold line %&apos;distance&apos; width %&apos;range&apos; direction %&apos;direction&apos; first style %&apos;styleScript1&apos; second style %&apos;styleScript2&apos;" type="command" category="Geometry"><variables><list struct="atomic" id="2732">line1,line2,dir</list></variables><header></header><code></code><translations>zh_CN:折线 _ 步 宽度 _ 方向 _ 方式1 _ 方式2 _&#xD;</translations><inputs><input type="%n"></input><input type="%n">10</input><input type="%txt">left<options>left&#xD;right</options></input><input type="%cmdRing"></input><input type="%cmdRing"></input></inputs><script><block s="doDeclareVariables"><list><l>angle</l><l>chord</l></list></block><block s="doWarp"><script><block s="doIf"><block s="reportVariadicEquals"><list><block var="distance"/><l>0</l></list></block><script><block s="doSetVar"><l>distance</l><block s="reportIfElse"><block s="reportVariadicGreaterThan"><list><custom-block s="default stitch length"></custom-block><l>0</l></list></block><custom-block s="default stitch length"></custom-block><l>10</l></block></block></script><list></list></block><block s="doIf"><custom-block s="Is %cmdRing empty?"><block var="styleScript1"/></custom-block><script><block s="doSetVar"><l>styleScript1</l><custom-block s="stitch style"></custom-block></block></script><list></list></block><block s="doIf"><custom-block s="Is %cmdRing empty?"><block var="styleScript2"/></custom-block><script><block s="doSetVar"><l>styleScript2</l><block var="styleScript1"/></block></script><list></list></block><block s="doSetVar"><l>angle</l><block s="reportMonadic"><l><option>atan</option></l><block s="reportQuotient"><block var="range"/><block s="reportQuotient"><block var="distance"/><l>2</l></block></block></block></block><block s="doSetVar"><l>chord</l><block s="reportQuotient"><block var="range"/><block s="reportMonadic"><l><option>sin</option></l><block var="angle"/></block></block></block><block s="doIfElse"><block s="reportVariadicEquals"><list><block var="direction"/><l>left</l></list></block><script><block s="turnLeft"><block var="angle"/></block><block s="doRun"><block var="styleScript1"/><list><block var="chord"/></list></block><block s="turn"><block s="reportVariadicProduct"><list><l>2</l><block var="angle"/></list></block></block><block s="doRun"><block var="styleScript2"/><list><block var="chord"/></list></block><block s="turnLeft"><block var="angle"/></block></script><script><block s="turn"><block var="angle"/></block><block s="doRun"><block var="styleScript1"/><list><block var="chord"/></list></block><block s="turnLeft"><block s="reportVariadicProduct"><list><l>2</l><block var="angle"/></list></block></block><block s="doRun"><block var="styleScript2"/><list><block var="chord"/></list></block><block s="turn"><block var="angle"/></block></script></block></script></block></script></block-definition><block-definition s="wall %&apos;distance&apos; direction %&apos;direction&apos; style %&apos;styleScript&apos;" type="command" category="Geometry"><header></header><code></code><translations>zh_CN:方波 _ 步 方向 _ 方式 _&#xD;</translations><inputs><input type="%n"></input><input type="%txt">left<options>left&#xD;right</options></input><input type="%cmdRing"></input></inputs><script><block s="doDeclareVariables"><list><l>sideLength</l></list></block><block s="doWarp"><script><block s="doIf"><block s="reportVariadicEquals"><list><block var="distance"/><l>0</l></list></block><script><block s="doSetVar"><l>distance</l><block s="reportIfElse"><block s="reportVariadicGreaterThan"><list><custom-block s="default stitch length"></custom-block><l>0</l></list></block><custom-block s="default stitch length"></custom-block><l>10</l></block></block></script><list></list></block><block s="doIf"><custom-block s="Is %cmdRing empty?"><block var="styleScript"/></custom-block><script><block s="doSetVar"><l>styleScript</l><custom-block s="stitch style"></custom-block></block></script><list></list></block><block s="doSetVar"><l>sideLength</l><block s="reportQuotient"><block var="distance"/><l>2</l></block></block><block s="doIfElse"><block s="reportVariadicEquals"><list><block var="direction"/><l>left</l></list></block><script><block s="turnLeft"><l>90</l></block><block s="doRun"><block var="styleScript"/><list><block var="sideLength"/></list></block><block s="turn"><l>90</l></block><block s="doRun"><block var="styleScript"/><list><block var="sideLength"/></list></block><block s="turn"><l>90</l></block><block s="doRun"><block var="styleScript"/><list><block var="sideLength"/></list></block><block s="turnLeft"><l>90</l></block><block s="doRun"><block var="styleScript"/><list><block var="sideLength"/></list></block></script><script><block s="turn"><l>90</l></block><block s="doRun"><block var="styleScript"/><list><block var="sideLength"/></list></block><block s="turnLeft"><l>90</l></block><block s="doRun"><block var="styleScript"/><list><block var="sideLength"/></list></block><block s="turnLeft"><l>90</l></block><block s="doRun"><block var="styleScript"/><list><block var="sideLength"/></list></block><block s="turn"><l>90</l></block><block s="doRun"><block var="styleScript"/><list><block var="sideLength"/></list></block></script></block></script></block></script></block-definition><block-definition s="bar %&apos;distance&apos; width %&apos;range&apos; direction %&apos;direction&apos; style %&apos;styleScript&apos;" type="command" category="Geometry"><header></header><code></code><translations>zh_CN:方波 _ 步 宽度 _ 方向 _ 方式 _&#xD;</translations><inputs><input type="%n"></input><input type="%n">20</input><input type="%txt">left<options>left&#xD;right&#xD;middle</options></input><input type="%cmdRing"></input></inputs><script><block s="doWarp"><script><block s="doIf"><block s="reportVariadicEquals"><list><block var="distance"/><l>0</l></list></block><script><block s="doSetVar"><l>distance</l><block s="reportIfElse"><block s="reportVariadicGreaterThan"><list><custom-block s="default stitch length"></custom-block><l>0</l></list></block><custom-block s="default stitch length"></custom-block><l>10</l></block></block></script><list></list></block><block s="doIf"><custom-block s="Is %cmdRing empty?"><block var="styleScript"/></custom-block><script><block s="doSetVar"><l>styleScript</l><custom-block s="stitch style"></custom-block></block></script><list></list></block><block s="doIfElse"><block s="reportVariadicEquals"><list><block var="direction"/><l>left</l></list></block><script><block s="turnLeft"><l>90</l></block><block s="doRun"><block var="styleScript"/><list><block var="range"/></list></block><block s="turn"><l>90</l></block><block s="doRun"><block var="styleScript"/><list><block s="reportQuotient"><block var="distance"/><l>2</l></block></list></block><block s="turn"><l>90</l></block><block s="doRun"><block var="styleScript"/><list><block var="range"/></list></block><block s="turnLeft"><l>90</l></block><block s="doRun"><block var="styleScript"/><list><block s="reportQuotient"><block var="distance"/><l>2</l></block></list></block></script><script><block s="doIfElse"><block s="reportVariadicEquals"><list><block var="direction"/><l>right</l></list></block><script><block s="turn"><l>90</l></block><block s="doRun"><block var="styleScript"/><list><block var="range"/></list></block><block s="turnLeft"><l>90</l></block><block s="doRun"><block var="styleScript"/><list><block s="reportQuotient"><block var="distance"/><l>2</l></block></list></block><block s="turnLeft"><l>90</l></block><block s="doRun"><block var="styleScript"/><list><block var="range"/></list></block><block s="turn"><l>90</l></block><block s="doRun"><block var="styleScript"/><list><block s="reportQuotient"><block var="distance"/><l>2</l></block></list></block></script><script><block s="turn"><l>90</l></block><block s="doRun"><block var="styleScript"/><list><block s="reportQuotient"><block var="range"/><l>2</l></block></list></block><block s="turnLeft"><l>90</l></block><block s="doRun"><block var="styleScript"/><list><block s="reportQuotient"><block var="distance"/><l>2</l></block></list></block><block s="turnLeft"><l>90</l></block><block s="doRun"><block var="styleScript"/><list><block s="reportQuotient"><block var="range"/><l>2</l></block></list></block><block s="doRun"><block var="styleScript"/><list><block s="reportQuotient"><block var="range"/><l>2</l></block></list></block><block s="turn"><l>90</l></block><block s="doRun"><block var="styleScript"/><list><block s="reportQuotient"><block var="distance"/><l>2</l></block></list></block><block s="turn"><l>90</l></block><block s="doRun"><block var="styleScript"/><list><block s="reportQuotient"><block var="range"/><l>2</l></block></list></block><block s="turnLeft"><l>90</l></block></script></block></script></block></script></block></script></block-definition><block-definition s="fractal size %&apos;size&apos; shape %&apos;shape&apos; levels %&apos;level&apos;" type="command" category="Geometry"><header></header><code></code><translations>zh_CN:分形 _ 步 造型函数 _ 级数 _&#xD;</translations><inputs><input type="%n">100</input><input type="%cmdRing">100</input><input type="%n">9</input></inputs><script><block s="doWarp"><script><block s="doIfElse"><block s="reportVariadicEquals"><list><block var="level"/><l>1</l></list></block><script><block s="doRun"><block var="shape"/><list><block var="size"/><custom-block s="stitch style"></custom-block></list></block></script><script><block s="doRun"><block var="shape"/><list><block var="size"/><block s="reifyScript"><script><custom-block s="fractal size %n shape %cmdRing levels %n"><l></l><block var="shape"/><block s="reportDifference"><block var="level"/><l>1</l></block></custom-block></script><list></list></block></list></block></script></block></script></block></script></block-definition><block-definition s="square stitch length %&apos;length&apos;" type="command" category="embroidery"><header></header><code></code><translations>zh_CN:方形组合针 齿距 _&#xD;</translations><inputs><input type="%n">10</input></inputs><script><block s="doWarp"><script><block s="turnLeft"><l>45</l></block><block s="doRepeat"><l>4</l><script><block s="forward"><block s="reportQuotient"><block var="length"/><block s="reportMonadic"><l><option>sqrt</option></l><l>2</l></block></block></block><block s="turnLeft"><l>90</l></block></script></block><block s="turn"><l>90</l></block><block s="doRepeat"><l>4</l><script><block s="forward"><block s="reportQuotient"><block var="length"/><block s="reportMonadic"><l><option>sqrt</option></l><l>2</l></block></block></block><block s="turn"><l>90</l></block></script></block><block s="turnLeft"><l>45</l></block><block s="forward"><block var="length"/></block></script></block></script></block-definition><block-definition s="theme flat stitch length %&apos;length&apos; width %&apos;width&apos;" type="command" category="embroidery"><header></header><code></code><translations>zh_CN:主题平针 齿距 _ 宽度 _&#xD;</translations><inputs><input type="%n">10</input><input type="%n">12</input></inputs><script><block s="doDeclareVariables"><list><l>a</l><l>l</l></list></block><block s="doWarp"><script><block s="doSetVar"><l>a</l><block s="reportMonadic"><l><option>atan</option></l><block s="reportQuotient"><block s="reportQuotient"><block var="width"/><l>2</l></block><block var="length"/></block></block></block><block s="doSetVar"><l>l</l><block s="reportQuotient"><block var="length"/><block s="reportMonadic"><l><option>cos</option></l><block var="a"/></block></block></block><block s="turnLeft"><l>90</l></block><block s="forward"><block s="reportQuotient"><block var="width"/><l>2</l></block></block><block s="turn"><block s="reportVariadicSum"><list><l>90</l><block var="a"/></list></block></block><block s="forward"><block var="l"/></block><block s="turn"><block s="reportDifference"><l>180</l><block s="reportVariadicProduct"><list><l>2</l><block var="a"/></list></block></block></block><block s="forward"><block var="l"/></block><block s="turn"><block s="reportVariadicSum"><list><l>90</l><block var="a"/></list></block></block><block s="forward"><block s="reportQuotient"><block var="width"/><l>2</l></block></block><block s="turn"><l>90</l></block><block s="forward"><block var="length"/></block></script></block></script></block-definition><block-definition s="dashLine %&apos;length&apos; %&apos;solidlen&apos;" type="command" category="Geometry"><header></header><code></code><translations>zh_CN:虚线 _ _&#xD;</translations><inputs><input type="%n">10</input><input type="%n">5</input></inputs><script><block s="doWarp"><script><block s="doIfElse"><block s="reportVariadicGreaterThan"><list><block var="length"/><block var="solidlen"/></list></block><script><block s="up"></block><block s="forward"><block s="reportDifference"><block var="length"/><block var="solidlen"/></block></block><block s="down"></block><block s="forward"><block var="solidlen"/></block></script><script><block s="up"></block><block s="forward"><block var="length"/></block></script></block></script></block></script></block-definition><block-definition s="set stitch style to %&apos;stitchtype&apos;" type="command" category="embroidery"><header></header><code></code><translations>zh_CN:设置针法为 _&#xD;</translations><inputs><input type="%cmdRing"></input></inputs><script><block s="doRun"><block s="reportJSFunction"><list><l>stitchtype</l></list><l>this.stitchstyle = stitchtype;</l></block><list><custom-block s="check custom stitch %cmdRing"><block var="stitchtype"/></custom-block></list></block></script></block-definition><block-definition s="choose stitch style %&apos;stitchstyle&apos; width %&apos;width&apos;" type="command" category="embroidery"><header></header><code></code><translations>zh_CN:选择针法 _&#xD;</translations><inputs><input type="%txt"><options>diamond stitch&#xD;square stitch&#xD;zigzag&#xD;theme flat stitch&#xD;wall stitch</options></input><input type="%n"></input></inputs><script><block s="doIfElse"><block s="reportVariadicEquals"><list><block var="stitchstyle"/><l></l></list></block><script><custom-block s="set stitch style to %cmdRing"><block s="reifyScript"><script></script><list></list></block></custom-block></script><script><block s="doIfElse"><block s="reportVariadicEquals"><list><block var="stitchstyle"/><l>diamond stitch</l></list></block><script><block s="doIfElse"><block s="reportVariadicEquals"><list><block var="width"/><l>0</l></list></block><script><custom-block s="set stitch style to %cmdRing"><block s="reifyScript"><script><custom-block s="diamond stitch length %n width %n"><l></l><l></l></custom-block></script><list></list></block></custom-block></script><script><custom-block s="set stitch style to %cmdRing"><block s="reportJoinWords"><block s="reportNewList"><list><block s="reifyScript"><script><custom-block s="diamond stitch length %n width %n"><l></l><l></l></custom-block></script><list></list></block><l></l><block var="width"/></list></block></block></custom-block></script></block></script><script><block s="doIfElse"><block s="reportVariadicEquals"><list><block var="stitchstyle"/><l>square stitch</l></list></block><script><custom-block s="set stitch style to %cmdRing"><block s="reifyScript"><script><custom-block s="square stitch length %n"><l></l></custom-block></script><list></list></block></custom-block></script><script><block s="doIfElse"><block s="reportVariadicEquals"><list><block var="stitchstyle"/><l>theme flat stitch</l></list></block><script><block s="doIfElse"><block s="reportVariadicEquals"><list><block var="width"/><l>0</l></list></block><script><custom-block s="set stitch style to %cmdRing"><block s="reifyScript"><script><custom-block s="theme flat stitch length %n width %n"><l></l><l></l></custom-block></script><list></list></block></custom-block></script><script><custom-block s="set stitch style to %cmdRing"><block s="reportJoinWords"><block s="reportNewList"><list><block s="reifyScript"><script><custom-block s="theme flat stitch length %n width %n"><l></l><l></l></custom-block></script><list></list></block><l></l><block var="width"/></list></block></block></custom-block></script></block></script><script><block s="doIfElse"><block s="reportVariadicEquals"><list><block var="stitchstyle"/><l>wall stitch</l></list></block><script><custom-block s="set stitch style to %cmdRing"><block s="reportJoinWords"><block s="reportNewList"><list><block s="reifyScript"><script><custom-block s="bar %n width %n direction %txt style %cmdRing"><l></l><l></l><l>middle</l><block s="reifyScript"><script></script><list></list></block></custom-block></script><list></list></block><l></l><block var="width"/><l>middle</l><l></l></list></block></block></custom-block></script><script><block s="doIf"><block s="reportVariadicEquals"><list><block var="stitchstyle"/><l>zigzag</l></list></block><script><custom-block s="set stitch style to %cmdRing"><block s="reportJoinWords"><block s="reportNewList"><list><block s="reifyScript"><script><custom-block s="fold line %n width %n direction %txt style %cmdRing"><l></l><l></l><l>middle</l><block s="reifyScript"><script></script><list></list></block></custom-block></script><list></list></block><l></l><block var="width"/><l>middle</l><l></l></list></block></block></custom-block></script><list></list></block></script></block></script></block></script></block></script></block></script></block></script></block-definition><block-definition s="drawVector %&apos;vector&apos; size %&apos;size&apos; style %&apos;styleScript&apos; mirrored %&apos;mirrored&apos; stitch length %&apos;seam&apos;" type="command" category="pen"><header></header><code></code><translations>zh_CN:绘制矢量 _ 比例 _ 方式 _ 镜像 _ 针脚长度 _&#xD;</translations><inputs><input type="%l"></input><input type="%n">1</input><input type="%cmdRing"></input><input type="%b">false</input><input type="%n">6</input></inputs><script><block s="doDeclareVariables"><list><l>dir</l><l>newVector</l></list></block><block s="doIf"><custom-block s="Is %cmdRing empty?"><block var="styleScript"/></custom-block><script><block s="doSetVar"><l>styleScript</l><block s="reifyScript"><script><block s="forward"><l></l></block></script><list></list></block></block></script><list></list></block><block s="doSetVar"><l>dir</l><block s="direction"></block></block><block s="doSetVar"><l>newVector</l><custom-block s="convert vector %l scale %n by seam %n"><block var="vector"/><block var="size"/><block var="seam"/></custom-block></block><custom-block s="%upvar for each %upvar of %l %ca"><l>#</l><l>item</l><block var="newVector"/><script><block s="doIfElse"><block s="reportVariadicOr"><list><block s="reportVariadicEquals"><list><block var="item"/><l>!</l></list></block><block s="reportVariadicEquals"><list><block s="reportListItem"><l>1</l><block var="item"/></block><l>!</l></list></block></list></block><script><block s="up"></block></script><script><block s="doIfElse"><block s="reportNot"><block var="mirrored"/></block><script><block s="turn"><block s="reportListItem"><l>1</l><block var="item"/></block></block></script><script><block s="doIfElse"><block s="reportVariadicEquals"><list><block var="#"/><l>1</l></list></block><script><block s="turn"><block s="reportListItem"><l>1</l><block var="item"/></block></block><block s="setHeading"><block s="reportMonadic"><l><option>neg</option></l><block s="direction"></block></block></block></script><script><block s="turnLeft"><block s="reportListItem"><l>1</l><block var="item"/></block></block></script></block></script></block><block s="doIfElse"><block s="isPenDown"></block><script><custom-block s="move %n style %cmdRing by %txt"><block s="reportListItem"><l>2</l><block var="item"/></block><block var="styleScript"/><block var="seam"/></custom-block></script><script><custom-block s="move %n style %cmdRing by %txt"><block s="reportListItem"><l>2</l><block var="item"/></block><block s="reifyScript"><script></script><list></list></block><l>0</l></custom-block></script></block><block s="doIf"><block s="reportNot"><block s="isPenDown"></block></block><script><block s="down"></block></script><list></list></block></script></block></script></custom-block><block s="setHeading"><block var="dir"/></block></script></block-definition><block-definition s="edgefold %&apos;distance&apos; width %&apos;range&apos; angle %&apos;angle&apos; direction %&apos;direction&apos;" type="command" category="Geometry"><header></header><code></code><translations>zh_CN:折边线条 _ 步 宽度 _ 角度 _ 方向 _&#xD;</translations><inputs><input type="%n">50</input><input type="%n">10</input><input type="%n">45</input><input type="%txt">left<options>left&#xD;right</options></input></inputs><script><block s="doDeclareVariables"><list><l>chord</l></list></block><block s="doWarp"><script><block s="doSetVar"><l>chord</l><block s="reportQuotient"><block var="range"/><block s="reportMonadic"><l><option>sin</option></l><block var="angle"/></block></block></block><block s="doIfElse"><block s="reportVariadicEquals"><list><block var="direction"/><l>left</l></list></block><script><block s="turnLeft"><block var="angle"/></block><block s="forward"><block var="chord"/></block><block s="turn"><block var="angle"/></block><block s="forward"><block s="reportDifference"><block var="distance"/><block s="reportVariadicProduct"><list><l>2</l><block s="reportQuotient"><block var="range"/><block s="reportMonadic"><l><option>tan</option></l><block var="angle"/></block></block></list></block></block></block><block s="turn"><block var="angle"/></block><block s="forward"><block var="chord"/></block><block s="turnLeft"><block var="angle"/></block></script><script><block s="turn"><block var="angle"/></block><block s="forward"><block var="chord"/></block><block s="turnLeft"><block var="angle"/></block><block s="forward"><block s="reportDifference"><block var="distance"/><block s="reportVariadicProduct"><list><l>2</l><block s="reportQuotient"><block var="range"/><block s="reportMonadic"><l><option>tan</option></l><block var="angle"/></block></block></list></block></block></block><block s="turnLeft"><block var="angle"/></block><block s="forward"><block var="chord"/></block><block s="turn"><block var="angle"/></block></script></block><block s="up"></block><block s="forward"><block s="reportMonadic"><l><option>neg</option></l><block var="distance"/></block></block><block s="down"></block><custom-block s="move %n style %cmdRing by %txt"><block var="distance"/><block s="reifyScript"><script><custom-block s="dashLine %n %n"><l></l><l>5</l></custom-block></script><list></list></block><l>10</l></custom-block><block s="down"></block></script></block></script></block-definition><block-definition s="$flash sort %&apos;data&apos; ordering with %&apos;function&apos;" type="reporter" category="lists"><comment x="0" y="0" w="161.14285714285708" collapsed="false">Reports a sorted version of the list in its first input slot, using the comparison function in the second input slot.  For a list of numbers, using &lt; as the comparison function will sort from low to high; using &gt; will sort from high to low.</comment><header></header><code></code><translations>ca:ordena _ segons criteri _&#xD;</translations><inputs><input type="%l"></input><input type="%predRing"></input></inputs><script><block s="doReport"><block s="reportApplyExtension"><l>lst_sort(list, fn)</l><list><block var="data"/><block var="function"/></list></block></block></script></block-definition><block-definition s="check custom stitch list %&apos;customStitch&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%l"></input></inputs><script><block s="doDeclareVariables"><list><l>move</l></list></block><block s="doSetVar"><l>move</l><block s="reportListItem"><l>3</l><block s="reportTextSplit"><block s="reifyScript"><script><custom-block s="move %n style %cmdRing by %txt"><l></l><block s="reifyScript"><script><block s="forward"><l></l></block></script><list></list></block><l></l></custom-block></script><list></list></block><l><option>blocks</option></l></block></block></block><block s="doWarp"><script><block s="doIfElse"><block s="reportVariadicAnd"><list><block s="reportIsA"><block s="reportListItem"><l>2</l><block var="customStitch"/></block><l><option>list</option></l></block><block s="reportVariadicEquals"><list><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block var="customStitch"/></block></block><block s="reifyScript"><script><block s="forward"><l></l></block></script><list></list></block></list></block></list></block><script><block s="doIfElse"><block s="reportVariadicEquals"><list><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block var="customStitch"/></block></block><l></l></list></block><script><block s="doReport"><block var="customStitch"/></block></script><script><block s="doReplaceInList"><l>2</l><block s="reportListItem"><l>2</l><block var="customStitch"/></block><l></l></block><block s="doReport"><block var="customStitch"/></block></script></block></script><script><block s="doIfElse"><block s="reportVariadicEquals"><list><block s="reportListItem"><l>1</l><block var="customStitch"/></block><block s="reifyScript"><script><custom-block s="fold line %n width %n direction %txt style %cmdRing"><l></l><l></l><l></l><block s="reifyScript"><script></script><list></list></block></custom-block></script><list></list></block></list></block><script><block s="doIfElse"><block s="reportIsA"><block s="reportListItem"><l>5</l><block var="customStitch"/></block><l><option>list</option></l></block><script><block s="doReplaceInList"><l>2</l><block s="reportListItem"><l>5</l><block var="customStitch"/></block><custom-block s="check custom stitch list %l"><block s="reportListItem"><l>2</l><block s="reportListItem"><l>5</l><block var="customStitch"/></block></block></custom-block></block></script><script><block s="doReplaceInList"><l>5</l><block var="customStitch"/><block var="move"/></block></script></block></script><script><block s="doIfElse"><block s="reportVariadicEquals"><list><block s="reportListItem"><l>1</l><block var="customStitch"/></block><block s="reifyScript"><script><custom-block s="bar %n width %n direction %txt style %cmdRing"><l></l><l></l><l></l><block s="reifyScript"><script></script><list></list></block></custom-block></script><list></list></block></list></block><script><block s="doIfElse"><block s="reportIsA"><block s="reportListItem"><l>5</l><block var="customStitch"/></block><l><option>list</option></l></block><script><block s="doReplaceInList"><l>2</l><block s="reportListItem"><l>5</l><block var="customStitch"/></block><custom-block s="check custom stitch list %l"><block s="reportListItem"><l>2</l><block s="reportListItem"><l>5</l><block var="customStitch"/></block></block></custom-block></block></script><script><block s="doReplaceInList"><l>5</l><block var="customStitch"/><block var="move"/></block></script></block></script><script><block s="doIfElse"><block s="reportVariadicEquals"><list><block s="reportListItem"><l>1</l><block var="customStitch"/></block><block s="reifyScript"><script><custom-block s="arc %n angle %n turn %txt style %cmdRing by %n"><l></l><l></l><l></l><block s="reifyScript"><script></script><list></list></block><l></l></custom-block></script><list></list></block></list></block><script><block s="doIfElse"><block s="reportIsA"><block s="reportListItem"><l>5</l><block var="customStitch"/></block><l><option>list</option></l></block><script><block s="doReplaceInList"><l>2</l><block s="reportListItem"><l>5</l><block var="customStitch"/></block><custom-block s="check custom stitch list %l"><block s="reportListItem"><l>2</l><block s="reportListItem"><l>5</l><block var="customStitch"/></block></block></custom-block></block></script><script><block s="doReplaceInList"><l>5</l><block var="customStitch"/><block var="move"/></block></script></block></script><script><block s="doIf"><block s="reportVariadicEquals"><list><block s="reportListItem"><l>1</l><block var="customStitch"/></block><block s="reifyScript"><script><custom-block s="arc %n angle %n in %n turn %txt style %cmdRing"><l></l><l></l><l></l><l></l><block s="reifyScript"><script></script><list></list></block></custom-block></script><list></list></block></list></block><script><block s="doIfElse"><block s="reportIsA"><block s="reportListItem"><l>6</l><block var="customStitch"/></block><l><option>list</option></l></block><script><block s="doReplaceInList"><l>2</l><block s="reportListItem"><l>6</l><block var="customStitch"/></block><custom-block s="check custom stitch list %l"><block s="reportListItem"><l>2</l><block s="reportListItem"><l>6</l><block var="customStitch"/></block></block></custom-block></block></script><script><block s="doReplaceInList"><l>6</l><block var="customStitch"/><block var="move"/></block></script></block></script><list></list></block></script></block></script></block></script></block></script></block><block s="doReport"><block var="customStitch"/></block></script></block></script></block-definition><block-definition s="check custom stitch %&apos;style&apos;" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%cmdRing"></input></inputs><script><block s="doReport"><block s="reportJoinWords"><custom-block s="check custom stitch list %l"><block s="reportTextSplit"><block var="style"/><l><option>blocks</option></l></block></custom-block></block></block></script></block-definition><block-definition s="create charsLib" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doReport"><block s="evaluate"><block s="reportJSFunction"><list></list><l>function parseCSV(csvString) {&#xD;  const lines = csvString.split(/\r?\n/);&#xD;  const result = [];&#xD;  console.log(lines);&#xD;  for (const line of lines) {&#xD;    if (line.trim() === &apos;&apos;) continue;&#xD;    const row = line.split(&apos;,&apos;);&#xD;    const trimmedRow = row.map(field =&gt; field.trim());  &#xD;    result.push(new List(trimmedRow));&#xD;  }&#xD;  &#xD;  return new List(result);&#xD;};&#xD;&#xD;const csvstring = `0,M703 1198q143 0 229.5 -105t86.5 -314q0 -297 -149.5 -552.5t-362.5 -255.5q-125 0 -211.5 109t-86.5 297q0 221 86 432.5t194 300t214 88.5zM685 1139q-62 0 -126.5 -82.5t-119 -302t-54.5 -418.5q0 -160 46.5 -233t106.5 -73q53 0 105 53q77 79 139 297.5t62 439.5 q0 171 -52 256q-39 63 -107 63z&#xD;1,M856 1209h32l-138 -540l-115 -501q-17 -63 -17 -85q0 -17 17 -27.5t77 -16.5q45 -4 88 -12l-20 -50q-215 23 -300 23q-124 0 -269 -23l17 50q52 14 119 28q66 13 90 40q33 35 69 168l108 413q53 236 53 267q0 35 -29 35q-22 0 -201 -80l-20 50q260 124 318 164.5 t121 96.5z&#xD;2,M403 898l-51 25q79 157 163.5 217.5t189.5 60.5q126 0 201 -80t75 -187q0 -66 -27 -134t-89 -142q-40 -49 -220 -203q-242 -210 -340 -339q131 6 270 6q45 0 78 -1q73 -3 100 14t89 114h69q-81 -112 -141 -275q-71 13 -150 19.5t-166 6.5q-103 0 -303 -13l20 63 q91 135 272 305q179 168 231 235q75 97 109 183q26 64 26 124q0 90 -49 144t-121 54q-60 0 -117.5 -43t-118.5 -154z&#xD;3,M426 964l-41 29q102 116 150 147q87 56 177 56q92 0 145 -47t53 -121q0 -156 -236 -331q81 -4 123 -29t68.5 -76.5t26.5 -122.5q0 -193 -195 -359q-167 -142 -343 -142q-79 0 -142.5 36t-63.5 89q0 22 16.5 38.5t38.5 16.5q30 0 69 -37q51 -49 76 -61q35 -17 62 -17 q78 0 174 92q142 134 142 296q0 81 -44.5 129.5t-114.5 48.5q-51 0 -116 -23l7 62q128 45 230 159q72 80 72 162q0 62 -31.5 97t-85.5 35q-114 0 -217 -127z&#xD;4,M932 408l-21 -105h-155l-72 -333h-141l72 333q-325 2 -414 -3q-12 -1 -19 -1q-29 0 -29 21q0 8 24 49q114 194 326.5 421.5t445.5 413.5h28l-42 -161l-88 -350l-67 -285h152zM637 408q9 50 40 174l97 391q-195 -185 -285.5 -287.5t-214.5 -277.5h363z&#xD;5,M1019 1225h55l-71 -148q-10 -15 -31.5 -23.5t-93.5 -8.5q-214 0 -290 -11q-17 -43 -26 -72t-9 -44q0 -38 59 -63q106 -44 150 -85t70 -104t26 -146q0 -213 -168 -379.5t-374 -166.5q-96 0 -147 31q-36 23 -36 63q0 26 16 43t38 17q14 0 22 -3t40 -24q41 -28 66.5 -36 t62.5 -8q138 0 247.5 116t109.5 258q0 95 -54 171t-155 117q-42 18 -56 35t-14 43q0 29 33 132l68 212q38 19 103 24l214 4q73 3 98 14.5t47 41.5z&#xD;6,M1093 1200l-12 -60q-166 -7 -282 -61.5t-197.5 -154t-131.5 -264.5q56 46 113 68.5t115 22.5q114 0 184 -80t70 -230q0 -206 -121 -346q-105 -122 -268 -122q-138 0 -226.5 105t-88.5 292q0 222 115 420t302.5 304.5t427.5 105.5zM451 582q-27 -156 -27 -257 q0 -158 48 -227.5t120 -69.5q78 0 124 75q61 97 61 285q0 155 -42 219.5t-103 64.5q-38 0 -83.5 -22.5t-97.5 -67.5z&#xD;7,M429 922h-51q4 14 24 76q38 121 53 188q107 -17 350 -17q165 0 321 4q-334 -425 -419 -552q-148 -220 -200 -341q-25 -58 -39 -162q-14 -105 -36 -134t-57 -29q-31 0 -54 26t-23 64q0 94 70 221q100 183 453 617l130 161h-376q-67 0 -89.5 -17.5t-56.5 -104.5z&#xD;8,M741 671q170 -170 170 -320q0 -145 -122.5 -261.5t-298.5 -116.5q-144 0 -218.5 78.5t-74.5 171.5q0 62 31 126.5t97 125.5q51 48 234 160q-107 121 -107 248q0 129 99 222.5t243 93.5q106 0 172.5 -58t66.5 -137t-61 -155q-80 -100 -231 -178zM696 724 q140 97 182.5 155.5t42.5 109.5q0 59 -43.5 101.5t-108.5 42.5q-77 0 -131 -54t-54 -130q0 -105 112 -225zM602 590q-160 -112 -214.5 -194t-54.5 -168q0 -82 57 -138.5t141 -56.5q61 0 118 33.5t91.5 95t34.5 123.5q0 57 -33.5 123.5t-139.5 181.5z&#xD;9,M147 -26l12 59q166 7 282 62t197.5 154t131.5 265q-55 -46 -112 -69t-116 -23q-114 0 -184 80.5t-70 230.5q0 205 121 345q105 122 268 122q138 0 226.5 -105t88.5 -292q0 -221 -115 -419.5t-302.5 -305t-427.5 -104.5zM789 591q27 156 27 257q0 159 -48 228t-120 69 q-78 0 -124 -74q-61 -98 -61 -286q0 -155 42 -219t103 -64q39 0 84 22.5t97 66.5z&#xD;!,M433 330h-58q65 477 93 808q1 19 9 27q15 14 57 25q69 18 96 18q21 0 21 -21q0 -14 -8 -37q-13 -38 -88 -326zM379 216q39 0 65.5 -29.5t26.5 -74.5q0 -65 -31 -102t-78 -37q-39 0 -65.5 27.5t-26.5 70.5q0 63 37 110q27 35 72 35z&#xD;"""",M565 683l78 384q16 80 38 105.5t52 25.5q20 0 31 -11t11 -31q0 -13 -20 -72l-136 -391q-12 -36 -32 -36q-27 0 -22 26zM306 683l77 384q17 80 38.5 105.5t52.5 25.5q20 0 31 -11t11 -31q0 -13 -20 -72l-136 -391q-12 -36 -32 -36q-27 0 -22 26z&#xD;#,M476 27l113 350h-244l36 110h244l78 244h-245l37 110h244l107 336h116l-107 -336h228l107 336h116l-108 -336h245l-36 -110h-244l-78 -244h244l-36 -110h-244l-113 -350h-116l113 350h-228l-113 -350h-116zM741 487h228l78 244h-228z&#xD;$,M768 1332h64l-34 -141h22q78 0 128.5 -36t50.5 -77q0 -25 -19 -44t-44 -19q-19 0 -33 7q-9 4 -47 38q-33 30 -79 41l-109 -425q97 -86 135 -155t38 -138q0 -136 -96.5 -250t-250.5 -147l-66 -255h-64l64 244q-25 -2 -48 -2q-119 0 -162.5 27.5t-43.5 70.5q0 27 19 47 t43 20q21 0 80 -32q44 -24 58 -28q28 -8 74 -12l122 482q-92 83 -123 141.5t-31 131.5q0 126 89 229t226 131zM713 1107q-91 -19 -139 -77.5t-48 -132.5q0 -76 89 -171zM514 70q104 20 163.5 85.5t59.5 147.5q0 47 -18 82.5t-94 116.5z&#xD;%,M489 -7q85 142 146 252l366 667q88 163 151 286q24 -7 80 -14q-92 -149 -174 -298l-321 -585q-88 -160 -164 -316q-19 4 -51 6q-11 0 -33 2zM645 1198q83 0 135.5 -57.5t52.5 -162.5q0 -175 -108 -310q-87 -110 -205 -110q-82 0 -135.5 58.5t-53.5 155.5q0 156 89.5 291 t224.5 135zM631 1156q-63 0 -117.5 -125.5t-54.5 -277.5q0 -78 24 -115t55 -37q56 0 101 97q66 142 66 304q0 78 -26 122q-20 32 -48 32zM1206 625q83 0 135.5 -57.5t52.5 -162.5q0 -175 -108 -310q-87 -110 -205 -110q-82 0 -135.5 58.5t-53.5 155.5q0 156 89.5 291 t224.5 135zM1192 583q-63 0 -117.5 -125.5t-54.5 -277.5q0 -78 24 -115t55 -37q56 0 101 97q66 142 66 304q0 78 -26 122q-20 32 -48 32z&#xD;&amp;,M1509 1138q-29 -59 -47.5 -115t-58.5 -223q-68 -286 -115 -388q-65 -139 -191 -257q127 -139 198 -179t141 -40q78 0 132 43.5t54 94.5q0 19 -12 50q-13 35 -13 52q0 28 17 45.5t43 17.5q28 0 46 -20.5t18 -58.5q0 -118 -96.5 -208.5t-227.5 -90.5q-58 0 -115.5 21.5 t-109.5 63.5q-35 29 -140 151q-159 -126 -340 -126q-199 0 -329 126t-130 313q0 181 126 307t300 126q95 0 143.5 -37t48.5 -87q0 -114 -208 -163q89 -34 167 -98q102 -82 241 -247q43 51 71 98.5t55 123.5q18 47 57 203q36 145 51 188q33 95 66.5 167.5t78.5 146.5 q-179 1 -252 -33q-104 -48 -104 -136q0 -26 14 -93q5 -25 5 -41q0 -24 -15.5 -40t-39.5 -16q-28 0 -47 24t-19 69q0 93 58.5 181.5t153.5 130t270 41.5q28 0 52 -1q87 -5 97 -5q39 0 59 16.5t20 42.5q0 10 -6 36q-6 24 -6 34q0 26 16 43t40 17q25 0 43 -21t18 -57 q0 -73 -70 -129t-208 -63zM471 596q140 -3 191 26t51 77q0 35 -25 57.5t-67 22.5q-99 0 -180 -86.5t-81 -201.5q0 -90 60 -185t159 -152t204 -57q102 0 207 60q-167 201 -196 229q-57 55 -132 102t-191 92v16z&#xD;&apos;,M374 683l77 384q17 80 38.5 105.5t52.5 25.5q20 0 31 -11t11 -31q0 -13 -20 -72l-136 -391q-12 -36 -32 -36q-27 0 -22 26z&#xD;(,M971 1389q0 -16 -36 -31q-61 -26 -200.5 -162.5t-235.5 -305t-155 -380t-59 -409.5q0 -121 16 -219t47 -180q48 -128 77 -177q10 -17 10 -25q0 -21 -17 -21q-13 0 -32 25q-82 106 -141 296.5t-59 376.5q0 245 85.5 461t222 402t333.5 311q95 60 123 60q21 0 21 -22z&#xD;),M-145 -499q0 17 36 32q61 26 200.5 162.5t235.5 305t155 380t59 409.5q0 121 -16 219t-47 180q-48 128 -77 177q-10 17 -10 25q0 21 17 21q13 0 32 -25q82 -106 141 -296.5t59 -376.5q0 -246 -85.5 -461.5t-222 -402t-333.5 -310.5q-95 -61 -123 -61q-21 0 -21 22z&#xD;*,M658 1412q20 -118 64 -240q33 -5 53 -5q63 0 195 17q10 -24 17 -49q-117 -64 -213 -141q30 -102 95 -223q-19 -15 -40 -29q-104 86 -198 152q-89 -53 -196 -152q-25 14 -45 33q63 121 98 219q-103 78 -208 141q7 25 17 49q121 -14 182 -14q20 0 63 2q44 130 60 240l28 1 q9 0 28 -1zM634 1152q-43 0 -73.5 -30.5t-30.5 -73.5t30.5 -74t73.5 -31q44 0 74.5 31t30.5 74t-30.5 73.5t-74.5 30.5z&#xD;+,M661 643v385h111v-385h387v-111h-387v-391h-111v391h-387v111h387z&#xD;",",M56 -311l-19 65q91 70 140 138q32 45 32 74t-24 74q-24 46 -24 76q0 38 27 66t64 28q41 0 70.5 -33.5t29.5 -80.5q0 -54 -30 -122.5t-91 -133.5q-83 -90 -175 -151z&#xD;-,M194 460h463l-24 -99h-465z&#xD;.,M258 216q39 0 65.5 -29.5t26.5 -74.5q0 -65 -31 -102t-78 -37q-39 0 -65.5 27.5t-26.5 70.5q0 63 37 110q27 35 72 35z&#xD;/,M-23 -384l991 1769h104l-991 -1769h-104z&#xD;:,M401 832q39 0 65.5 -29t26.5 -74q0 -66 -31 -102.5t-78 -36.5q-39 0 -65.5 27.5t-26.5 70.5q0 62 37 109q27 35 72 35zM258 216q39 0 65.5 -29.5t26.5 -74.5q0 -65 -31 -102t-78 -37q-39 0 -65.5 27.5t-26.5 70.5q0 63 37 110q27 35 72 35z&#xD;;,M413 832q38 0 65 -29t27 -74q0 -66 -31 -102.5t-78 -36.5q-39 0 -65.5 27.5t-26.5 70.5q0 62 37 109q27 35 72 35zM54 -311l-19 65q91 70 140 138q32 45 32 74t-24 74q-24 46 -24 76q0 38 27 66t64 28q41 0 70.5 -33.5t29.5 -80.5q0 -54 -30 -122.5t-91 -133.5 q-83 -90 -175 -151z&#xD;&lt;,M1115 231v-108l-893 410v95l893 409v-107l-751 -351z&#xD;=,M1159 815v-113h-885v113h885zM1159 473v-113h-885v113h885z&#xD;&gt;,M331 231l751 348l-751 351v107l893 -409v-95l-893 -410v108z&#xD;?,M340 329h-64q18 198 46 253q19 39 87 61q201 66 272 141q70 74 70 164q0 72 -38 114t-94 42q-48 0 -121 -55q-31 -23 -39 -27q-13 -5 -28 -5q-25 0 -43.5 18.5t-18.5 43.5q0 44 51 82t128 38q120 0 204 -88.5t84 -223.5q0 -137 -95 -242q-60 -68 -223 -129 q-124 -47 -143.5 -68.5t-34.5 -118.5zM288 216q39 0 65.5 -29.5t26.5 -74.5q0 -65 -31 -102t-78 -37q-39 0 -65.5 27.5t-26.5 70.5q0 63 37 110q27 35 72 35z&#xD;@,M1131 1010l57 13q-42 -145 -82 -301.5t-61 -277.5q-7 -35 -7 -50q0 -21 9.5 -32.5t24.5 -11.5q38 0 99 51q86 72 134.5 173t48.5 204q0 157 -101.5 258t-263.5 101q-156 0 -289 -84.5t-222.5 -258t-89.5 -351.5q0 -117 54 -225q41 -81 130 -132.5t194 -51.5 q226 0 475 201l34 -40q-255 -227 -553 -227q-218 0 -340.5 119t-122.5 324q0 208 105 393.5t284.5 294.5t364.5 109q132 0 244 -56t171.5 -145t59.5 -182q0 -146 -98 -290.5t-260 -228.5q-116 -60 -182 -60q-23 0 -35.5 12.5t-12.5 33.5q0 28 39 149q-88 -98 -163 -147 t-137 -49q-40 0 -72.5 44.5t-32.5 116.5q0 127 84.5 276t195.5 223t240 74q21 0 60 -3zM1028 879q-42 9 -69 9q-76 0 -139.5 -45t-110.5 -154t-47 -221q0 -54 20 -79.5t55 -25.5q36 0 70 20q48 28 85.5 77.5t49.5 87.5l34 134z&#xD;A,M1299 44l-10 -57q-36 -3 -63 -3q-39 0 -94 6q-94 10 -119 10q-42 0 -129 -13q31 78 52 164q15 61 32 210q-117 1 -363 -5q-254 -388 -372.5 -487.5t-225.5 -99.5q-56 0 -83.5 21.5t-27.5 55.5q0 26 16 43t40 17q14 0 38 -5q60 -14 80 -14q67 0 148 76q132 124 390 520 q292 448 473 652q-247 -22 -308 -42q-84 -27 -126 -80t-42 -108q0 -18 13 -51q14 -37 14 -54q0 -22 -17 -39t-41 -17q-34 0 -54.5 25.5t-20.5 76.5q0 72 37.5 139.5t107.5 113t175 69.5q54 13 190 23q118 10 148 19q47 13 90 51q-30 -123 -43 -215l-78 -578l-45 -414 q74 -19 133 -19q39 0 85 9zM977 435q48 406 96 593q-127 -168 -157 -212l-257 -381q83 -3 237 -3q38 0 81 3z&#xD;B,M642 959l12 48q114 8 246 40q-35 -103 -51 -166l-54 -223q177 0 266.5 88.5t89.5 210.5q0 85 -64.5 137t-192.5 52q-181 0 -345 -86t-255.5 -224.5t-91.5 -277.5q0 -38 10.5 -70.5t30.5 -59.5q12 -16 53 -44q46 -32 57 -47.5t11 -36.5t-15.5 -36.5t-37.5 -15.5 q-57 0 -115.5 83t-58.5 205q0 168 100.5 325.5t284.5 252.5t405 95q180 0 273.5 -71t93.5 -173q0 -97 -63 -176.5t-191 -122.5q88 -14 139 -47.5t78.5 -84.5t27.5 -117q0 -108 -63.5 -204.5t-187 -160t-257.5 -63.5q-39 0 -167 8q-61 3 -128 3q-102 0 -181 -16l15 55 q105 6 149.5 50.5t83.5 196.5l148 581q9 37 9 56q0 15 -12.5 26.5t-31.5 11.5q-8 0 -20 -2zM779 598l-51 -201q-39 -156 -75 -240q-21 -50 -54 -85q90 -22 155 -22q175 0 264.5 108t89.5 241q0 66 -33.5 113.5t-88 66.5t-207.5 19z&#xD;C,M1192 764h-54q5 78 5 125q0 141 -58.5 196.5t-147.5 55.5q-119 0 -247 -96.5t-220 -301t-92 -420.5q0 -209 85.5 -320.5t214.5 -111.5q175 0 321 210q15 21 31 21q13 0 22 -8.5t9 -19.5q0 -27 -66.5 -106t-167.5 -131.5t-199 -52.5q-118 0 -219 61.5t-157 175.5t-56 271 q0 219 114.5 436t286.5 335t336 118q59 0 117 -13q25 -6 206 -69q-57 -172 -64 -355z&#xD;D,M650 962l10 43q109 9 257 44q-43 -111 -76 -252l-66 -279q-71 -302 -160 -456q86 -17 152 -17q175 0 305 73.5t206.5 214.5t76.5 311q0 223 -130 358.5t-340 135.5q-177 0 -334 -84t-248.5 -222.5t-91.5 -269.5q0 -128 112 -188q32 -18 41.5 -31t9.5 -32 q0 -24 -18.5 -42.5t-42.5 -18.5q-53 0 -103 70q-68 98 -68 201q0 172 102.5 332.5t285.5 255.5t407 95q276 0 439.5 -147.5t163.5 -370.5q0 -207 -114 -380.5t-275.5 -247t-322.5 -73.5q-52 0 -180 10q-108 8 -205 8q-45 0 -137 -3l23 49q92 5 114.5 16t38.5 37 q29 46 79 200l69 261l80 326q6 24 6 41q0 16 -10 25.5t-28 9.5q-7 0 -28 -3z&#xD;E,M1312 959h-53q8 51 8 81q0 40 -33.5 52.5t-252.5 12.5l-146 -1l-111 -442h207q98 0 120.5 14.5t32.5 72.5h57q-32 -121 -57 -266h-51q5 47 5 73q0 11 -14 27q-7 8 -26 11q-27 5 -84 5h-205q-89 -340 -185 -533q93 29 165 29q120 0 294 -38q92 -21 125 -21q44 0 71 22 t27 50q0 16 -13 52q-8 25 -8 47q0 23 18.5 41t44.5 18q31 0 51.5 -24t20.5 -64q0 -85 -74.5 -149t-196.5 -64q-64 0 -162 11q-215 24 -328 24q-148 0 -346 -24l16 55q118 33 139 48.5t35 45.5q48 95 124.5 381t155.5 604q-120 0 -227 -57t-167 -148.5t-60 -192.5 q0 -43 8.5 -75t38.5 -90q19 -35 19 -57t-18.5 -39t-45.5 -17q-39 0 -62 39q-34 57 -34 155q0 210 159 377t463 167h343q178 0 263 23q-40 -166 -51 -236z&#xD;F,M1363 932h-54q17 84 17 108q0 33 -23 49t-87 16l-64 -1l-21 1h-200q-6 -23 -32 -117q-54 -194 -82 -318h195q71 0 92 14t35 71h54q-31 -126 -54 -263h-55q7 57 7 67q0 24 -24 36q-14 7 -76 9h-191q-29 -139 -76 -300t-81 -249q80 -13 143 -13q41 0 81 7l-17 -57 q-29 -4 -54 -4q-22 0 -138 7q-69 5 -117 5q-97 0 -207 -18l12 55q89 19 117.5 40t43.5 51q31 61 116 378l153 599q-134 -4 -234.5 -60t-160 -150.5t-59.5 -191.5q0 -39 10 -80q5 -23 28 -66q29 -53 29 -74t-17 -36.5t-44 -15.5q-40 0 -65 42q-34 56 -34 159q0 201 157 370 q157 168 414 168h384q64 0 141 8q23 2 99 21q-51 -209 -61 -267z&#xD;G,M1331 796h-54q5 47 5 83q0 135 -69.5 197t-171.5 62q-141 0 -283 -95.5t-232.5 -266.5t-90.5 -357q0 -189 89.5 -278t200.5 -89q66 0 126.5 17.5t115.5 51.5q46 157 46 209q0 25 -18.5 39.5t-65.5 14.5q-16 0 -77 -5l9 49q44 8 89 8q36 0 89 -2q41 -1 61 -1q36 0 110 6 q39 3 67 4l-11 -51q-50 1 -71 -21.5t-44 -117.5q-82 -341 -162 -493.5t-182 -219t-220 -66.5q-100 0 -161.5 45.5t-61.5 95.5q0 27 19.5 46t44.5 19q34 0 77 -48q49 -54 76.5 -70t58.5 -16q63 0 111 49q98 97 193 449q-66 -36 -134 -54.5t-139 -18.5q-176 0 -277 93 q-135 124 -135 346q0 202 102.5 380t285 293t346.5 115q89 0 209 -28q121 -27 184 -28q-55 -190 -55 -346z&#xD;H,M1380 45l-13 -57q-51 -6 -78 -6q-43 0 -114 7q-76 7 -130 7q-43 0 -89 -14q41 115 93 320l77 300l-270 -10q-71 -4 -146 -11q-68 -267 -140 -395t-164.5 -188.5t-177.5 -60.5q-83 0 -142 40q-43 28 -43 70q0 25 17 42.5t41 17.5q39 0 80 -55q25 -33 40.5 -42.5t34.5 -9.5 q78 0 146.5 126t200.5 623l98 366q-200 0 -300.5 -66t-100.5 -149q0 -28 27 -71q24 -40 24 -65q0 -29 -18.5 -47.5t-46.5 -18.5q-35 0 -60 33.5t-25 97.5q0 116 84 205t244 126q92 21 367 21q-74 -146 -165 -516q264 0 416 19q87 290 153 404.5t148.5 165.5t184.5 51 q88 0 135.5 -33.5t47.5 -76.5q0 -25 -17 -41t-44 -16q-35 0 -79 50q-45 50 -80 50q-75 0 -148 -139q-130 -248 -301 -1047q17 -2 48 -7q57 -10 92 -10q41 0 93 10z&#xD;I,M970 1183l-17 -54q-113 -7 -150 -28q-24 -14 -40 -42q-19 -36 -111 -382q-30 -114 -153 -623q70 -23 177 -20l-16 -48q-32 -1 -128 8q-69 6 -161 6q-127 0 -233 -19l12 53q110 17 167 44q14 7 22 17q15 18 32.5 72.5t119.5 445.5q30 113 122 494q-69 2 -169 -19l19 55 q42 11 86 15.5t199 8.5q145 4 222 16z&#xD;J,M1004 1180q-73 -162 -155 -451l-149 -521q-71 -250 -198 -366q-128 -117 -279 -117q-100 0 -161 45t-61 99q0 25 18 44t41 19q34 0 73 -41q53 -55 83 -70q42 -21 76 -21q36 0 62 16q43 26 75 81.5t132 369.5q84 262 163 544l87 304l-48 2q-159 0 -263 -76.5t-104 -161.5 q0 -30 26 -69q24 -36 24 -57q0 -26 -19.5 -45.5t-46.5 -19.5q-35 0 -57.5 31t-22.5 91q0 112 79.5 205.5t214.5 136.5q90 29 273 29q26 0 137 -1z&#xD;K,M1551 1180l-6 -25q-81 -20 -134 -50t-143 -109q-239 -209 -416 -321q51 -63 87 -141t125 -359q80 -251 163 -339t169 -88q83 0 113 88q18 52 31 64q18 16 40 16q24 0 41 -16.5t17 -39.5q0 -60 -71 -116t-180 -56q-94 0 -178.5 48t-154.5 151t-143 319q-68 204 -105 279.5 t-103 159.5l-106 -405q-32 -123 -40 -176q68 -29 122 -29q13 0 37 2l-13 -50q-20 -1 -25 -1q-33 0 -94 7q-64 7 -105 7q-83 0 -263 -32l6 48q96 19 135 52.5t62 105.5q53 162 138 487l122 463q-198 -12 -313 -90q-89 -59 -89 -132q0 -26 25 -66q23 -36 23 -58 q0 -27 -20 -47.5t-47 -20.5q-31 0 -55.5 31t-24.5 82q0 139 138.5 250.5t481.5 111.5h65q-55 -143 -72 -207l-80 -303q74 28 172.5 95.5t189.5 143.5q167 140 190 170q7 10 7 17q0 8 -20.5 14.5t-115.5 8.5l13 56q128 -12 210 -12q84 0 194 12z&#xD;L,M98 -17l12 54q105 20 140.5 46t64 92.5t77.5 274.5q65 275 118 396q81 182 201.5 270t243.5 88q79 0 133 -40t54 -83q0 -24 -16.5 -41t-39.5 -17q-30 0 -73 39q-48 42 -74.5 55t-51.5 13q-29 0 -57 -16q-39 -22 -83.5 -83.5t-92.5 -182.5q-31 -82 -79 -270 q-75 -299 -114 -397q-28 -70 -68 -116q143 32 228 32q53 0 98 -6.5t157 -32.5q97 -23 136 -23q38 0 64.5 23.5t26.5 53.5q0 19 -14 53q-13 32 -13 51q0 27 16 42.5t42 15.5q30 0 51 -26.5t21 -72.5q0 -87 -72 -150t-195 -63q-61 0 -157 9q-324 29 -424 29q-147 0 -260 -17z &#xD;M,M944 -42l-80 1076q-26 -272 -96 -507.5t-159 -364t-182 -180.5t-184 -52q-55 0 -84.5 22.5t-29.5 54.5q0 27 21.5 47t54.5 20q24 0 69 -11q41 -11 68 -11q47 0 98 35q77 52 152.5 186.5t135 375t74.5 469.5q-227 0 -369 -113q-113 -90 -113 -201q0 -49 54 -118 q29 -37 29 -60q0 -26 -16.5 -43t-39.5 -17q-39 0 -69 44q-41 59 -41 140q0 114 76.5 218.5t212 159t317.5 55.5q98 0 157 18q-3 -90 -3 -97q0 -9 3 -41l59 -760q241 421 471 693q163 193 284 261q-69 -190 -148 -501l-122 -480q-10 -40 -27 -117l-24 -107q76 -18 139 -18 q51 0 109 12l-13 -58q-51 -9 -79 -9q-41 0 -118 9q-63 8 -112 8q-52 0 -118 -20q55 144 115 387l77 306q49 198 85 272q-80 -91 -247 -334q-134 -196 -300 -496z&#xD;N,M915 1204l28 -117q39 -160 77 -280t195 -555q15 55 60 244q58 246 77 309q56 185 108 272t116 125t145 38q65 0 99.5 -25t34.5 -60q0 -25 -18.5 -44t-43.5 -19q-18 0 -42 10q-50 20 -60 23q-18 4 -39 4q-49 0 -84 -33q-62 -58 -136.5 -291t-189.5 -745l-34 -149 q-114 251 -154 356q-54 141 -123 356l-110 346q-20 -120 -93.5 -404.5t-87.5 -327.5q-46 -135 -98.5 -207t-115 -105t-137.5 -33q-94 0 -154 42q-46 31 -46 79q0 21 17 37.5t41 16.5q31 0 67 -33q64 -59 117 -59q57 0 112 51q82 78 158 327q92 301 177 764q-35 0 -134 -20 t-165.5 -56.5t-102 -95t-35.5 -122.5q0 -32 9 -65q6 -22 26 -54q23 -37 23 -56q0 -24 -17.5 -41t-43.5 -17q-38 0 -65 39.5t-27 120.5q0 134 67.5 228t180.5 142q72 30 278 58q76 10 143 26z&#xD;O,M899 1197q126 0 227.5 -58.5t157.5 -167t56 -252.5q0 -188 -101 -373t-247 -279t-324 -94q-205 0 -331.5 128t-126.5 337q0 200 101 386.5t248 279.5t340 93zM826 1125q-116 0 -213.5 -68.5t-159.5 -214t-62 -337.5q0 -220 97 -339.5t242 -119.5q108 0 204.5 71 t159 223.5t62.5 350.5q0 205 -95.5 319.5t-234.5 114.5z&#xD;P,M627 957l12 45q145 14 248 40q-25 -70 -54 -183l-74 -281l92 -6q64 -3 139.5 32t135 123t59.5 190q0 101 -72.5 160t-221.5 59q-170 0 -333 -84.5t-251.5 -216t-88.5 -259.5q0 -63 23 -109.5t82 -91.5q49 -36 49 -70q0 -22 -16 -37t-38 -15q-59 0 -114 81t-55 205 q0 227 174 414q228 246 612 246q146 0 239.5 -38t140 -104t46.5 -143q0 -98 -65.5 -192.5t-193 -152.5t-283.5 -58q-24 0 -75 3l-79 -311q-20 -79 -45 -156q78 -19 136 -19q73 0 157 28l-12 -56q-78 -21 -132 -21q-52 0 -152 11q-80 10 -130 10q-97 0 -199 -23l12 53 q104 17 142 49q54 45 88 181l151 599q10 42 10 59q0 16 -13 28.5t-31 12.5q-7 0 -20 -2z&#xD;Q,M781 -17q90 -84 167 -162q139 -140 194 -181q78 -58 135 -79.5t104 -21.5q40 0 72 12t58 36q15 14 39 61q26 51 66 51q20 0 35 -15.5t15 -36.5q0 -54 -81 -104q-113 -70 -258 -70q-97 0 -158 20q-84 28 -159.5 81t-201.5 184q-115 118 -150.5 149.5t-70.5 52.5 q-19 12 -91 40q-140 56 -213 168t-73 270q0 272 187 516t483 244q141 0 242 -56.5t159.5 -166.5t58.5 -248q0 -245 -158.5 -473t-400.5 -271zM826 1125q-116 0 -213.5 -68.5t-159.5 -214t-62 -337.5q0 -220 97 -339.5t242 -119.5q108 0 204.5 71t159 223.5t62.5 350.5 q0 205 -95.5 319.5t-234.5 114.5z&#xD;R,M737 572l-134 -531q48 -7 77 -7q44 0 109 15l-10 -49q-67 -14 -104 -14q-39 0 -115 7q-67 7 -111 7q-80 0 -185 -23l15 56q110 28 143 55q50 43 77 151l140 559q26 107 26 126q0 18 -12.5 27t-49.5 8l13 48q101 1 242 37q-12 -38 -31 -112l-75 -295q48 -10 81 -10 q125 0 214 87.5t89 207.5q0 93 -71.5 153t-194.5 60q-157 0 -307 -76t-225 -188.5t-75 -235.5q0 -93 77 -160q39 -33 48 -48t9 -32q0 -21 -15.5 -36.5t-37.5 -15.5q-54 0 -96 63q-54 82 -54 202q0 154 85 287t257.5 220t363.5 87q178 0 293 -67t115 -198q0 -123 -105.5 -229 t-290.5 -136q46 -92 59 -124q21 -54 64 -182q101 -301 209 -424q80 -90 173 -90q96 0 123 87q16 55 30 68q19 18 43 18t40.5 -17t16.5 -41q0 -62 -68 -118t-175 -56q-97 0 -185.5 47t-172 154t-145.5 257q-31 75 -91 275q-36 122 -45 146l-25 2q-9 0 -26 -2z&#xD;S,M1029 811h-52q11 105 11 159q0 77 -41.5 121.5t-112.5 44.5q-110 0 -192 -79.5t-82 -178.5q0 -53 22.5 -96t99.5 -120q141 -138 185 -216t44 -152q0 -109 -66.5 -210t-196 -166.5t-273.5 -65.5q-142 0 -239.5 74t-97.5 156q0 44 25.5 73t58.5 29q34 0 56 -27 q14 -16 28 -72q16 -68 39 -98.5t63.5 -50t88.5 -19.5q143 0 250 96.5t107 213.5q0 40 -13.5 79.5t-49.5 89.5q-25 34 -111 120q-85 84 -107 115q-31 45 -46 90.5t-15 90.5q0 91 61 183t158.5 146.5t221.5 54.5q62 0 153 -19q52 -10 90 -15q-22 -65 -34 -122.5t-33 -228.5z &#xD;T,M991 57l-14 -57q-69 -15 -113 -15q-42 0 -139 9q-73 6 -131 6q-100 0 -206 -18l14 55q101 10 147 42q33 23 56.5 78.5t106.5 387.5l128 530l7 25q-59 2 -89 2q-185 0 -293.5 -40t-163 -116t-54.5 -164q0 -31 11 -57q8 -18 44 -58q34 -37 34 -68q0 -27 -20 -46t-48 -19 q-42 0 -68 40q-38 59 -38 150q0 122 75.5 237t207.5 178t321 63q90 0 287 -26q140 -18 203 -18t89 21t26 56q0 7 -3 28q-3 19 -3 25q0 27 18 45t43 18q30 0 49.5 -22t19.5 -59q0 -76 -81 -131t-271 -55q-68 0 -145 6q-10 -36 -63 -244l-87 -346l-53 -211l-55 -241 q67 -8 111 -8q67 0 140 17z&#xD;U,M928 1195q-101 -178 -199 -453q-69 -195 -69 -326q0 -146 70.5 -227t176.5 -81q100 0 188 50q117 66 216.5 201t162.5 323.5t63 352.5q0 114 -49 216q-26 52 -29 62q-4 14 -4 30q0 30 18.5 49t45.5 19q47 0 74 -50q39 -68 39 -211q0 -306 -134 -609t-309.5 -433 t-368.5 -130q-157 0 -241 104.5t-84 257.5q0 126 39 258q51 173 211 517q-125 3 -224 -30.5t-142.5 -85.5t-43.5 -103q0 -21 23 -57q24 -41 24 -64q0 -29 -18 -48t-45 -19q-33 0 -57.5 30t-24.5 78q0 77 45 154.5t116.5 124.5t176.5 69q52 11 216 20q112 6 137 11z&#xD;V,M643 -41l-36 484q-11 148 -11 195q0 135 38.5 248.5t136.5 243.5q-117 0 -238.5 -56t-178 -129t-56.5 -147q0 -34 21 -72q27 -48 27 -73q0 -23 -14 -37t-36 -14q-32 0 -56 33q-30 44 -30 109q0 122 92 235t252 167q103 35 300 48q53 4 108 10q-135 -198 -176 -330.5 t-41 -359.5q0 -174 18 -318l192 205l164 168q248 255 334 402q65 111 65 202q0 50 -23 110q-15 38 -15 58q0 27 20.5 47t48.5 20q38 0 64 -39t26 -122q0 -81 -34 -171.5t-143 -230.5t-337 -371q-239 -242 -482 -515z&#xD;W,M1228 -88l20 644q7 214 40 402q-58 -71 -146 -212q-263 -423 -567 -794q-22 133 -35.5 311t-13.5 312q0 189 35.5 301.5t134.5 246.5q-188 -21 -298.5 -119t-110.5 -201q0 -38 21 -77q25 -47 25 -63q0 -26 -16.5 -43t-40.5 -17q-32 0 -52 29q-27 38 -27 98q0 91 52.5 186 t139.5 156.5t198 89.5q61 15 205 31q49 6 97 13q-217 -304 -217 -614q0 -97 15 -387q59 71 107 137q33 46 172 255q224 340 335 479q78 96 176 179q-96 -377 -96 -1083l251 311q101 126 204.5 293.5t136.5 267.5q21 65 21 123q0 57 -26 120q-16 40 -16 58q0 27 19.5 45.5 t49.5 18.5q38 0 60 -34q32 -46 32 -122q0 -101 -69.5 -266t-308.5 -482q-308 -405 -507 -593z&#xD;X,M440 1100l12 59q35 8 84 8q98 0 119 2q40 2 111 12q0 -186 59 -414q145 199 299 362q95 102 178 143q59 29 125 29q48 0 71 -17.5t23 -45.5t-21 -44t-89 -22q-95 -10 -154 -39.5t-138 -114.5q-130 -141 -272 -333q49 -144 73 -281t24 -267q0 -39 -2 -84q44 -11 87 -11 q40 0 108 6l-12 -57q-40 -3 -52 -3q-27 0 -86 6q-50 6 -83 6q-32 0 -116 -9q12 69 12 122q0 119 -15 226.5t-45 203.5l-162 -227q-210 -291 -319 -373t-202 -82q-34 0 -53.5 18t-19.5 43q0 26 20 43.5t76 24.5q107 14 184 73q102 78 261 297l191 264q-97 306 -97 490 q-42 2 -61 2q-52 0 -118 -16z&#xD;Y,M1090 59l-21 -59q-62 -16 -106 -16q-47 0 -124 8q-73 8 -116 8q-61 0 -187 -14l17 51q94 24 118 52t80 239.5t56 278.5q0 134 -52 275t-130 228q-147 -54 -210.5 -101.5t-102 -116.5t-38.5 -121q0 -51 46 -95q39 -38 39 -67q0 -26 -15.5 -43t-38.5 -17q-41 0 -69 40 q-38 55 -38 132q0 111 62 209t173 164q65 39 214 83q55 16 99 33q84 -101 135 -237.5t70 -338.5q186 390 354.5 548.5t274.5 158.5q33 0 54 -19t21 -47q0 -29 -24.5 -47t-95.5 -23q-70 -5 -108 -28q-75 -46 -176.5 -170t-200.5 -310t-151 -387.5t-56 -262.5q47 -8 93 -8 q70 0 154 20z&#xD;Z,M1127 1047q-65 -15 -134 -15q-111 0 -262 43q-93 26 -118 26q-43 0 -65.5 -17.5t-22.5 -42.5q0 -28 32 -52q33 -26 41.5 -40t8.5 -34q0 -25 -18 -43t-43 -18q-40 0 -69 37t-29 100q0 88 66 150t163 62q62 0 148 -13q196 -30 292 -30q98 0 187 45q25 12 35 12 q13 0 23.5 -9t10.5 -18q0 -31 -93 -114q-97 -86 -182 -175l-500 -518l-286 -309q216 62 326 62q158 0 339 -66q100 -36 140 -36q46 0 68.5 20t22.5 58q0 20 -10 46q-12 31 -12 45q0 28 20 49t47 21q30 0 51.5 -24.5t21.5 -65.5q0 -97 -77 -160t-175 -63q-59 0 -206 19 q-168 21 -361 21q-223 0 -298 -31q-30 -12 -45 -12q-11 0 -21 9q-7 8 -7 20q0 29 38 65q41 39 152 155q91 97 282 288l300 306q110 112 219 247z&#xD;[,M523 1377h302l-15 -63h-191l-363 -1596h187l-14 -62h-300z&#xD;\,M962 -384h-104l-430 1769h104z&#xD;],M368 -344h-302l14 62h192l363 1596h-188l15 63h300z&#xD;^,M616 841h-112l200 328h107l199 -328h-112l-141 200z&#xD;_,M-12 -154h1048v-102h-1048v102z&#xD;a,M856 858l66 14l-75 -253q-45 -151 -85 -348q-22 -107 -22 -138t25 -31q16 0 51 21q62 37 119 92l32 -39q-114 -104 -146 -126q-64 -44 -122 -65q-38 -14 -74 -14q-26 0 -39 12t-13 35q0 15 8 41l40 136q-86 -103 -205 -177q-73 -46 -134 -46q-58 0 -89 41q-42 55 -42 144 q0 106 56.5 236t151.5 236t200 156q81 38 208 38q32 0 65 -4zM732 705q-54 11 -91 11q-90 0 -157 -49.5t-124.5 -178t-57.5 -256.5q0 -68 23 -98t60 -30q69 0 148 74.5t116 214.5z&#xD;b,M478 666q81 89 159.5 130.5t138.5 41.5q70 0 112 -56t42 -169q0 -164 -77 -321t-190.5 -239t-221.5 -82q-92 0 -147 54t-55 140q0 69 27 192l118 529q43 194 108 295.5t171 162t201 60.5q57 0 83.5 -19.5t26.5 -52.5q0 -30 -24 -50t-68 -20q-33 0 -114 15q-36 7 -64 7 q-50 0 -81 -54q-23 -42 -63 -213zM675 727q-49 0 -116.5 -59t-127.5 -208.5t-60 -293.5q0 -54 34.5 -90.5t80.5 -36.5q111 0 198 175.5t87 349.5q0 79 -33 129q-23 34 -63 34z&#xD;c,M723 217l21 -58q-238 -187 -402 -187q-87 0 -126.5 62t-39.5 157q0 158 84 325t204 256q94 69 212 69q74 0 112 -28t38 -68q0 -31 -20 -50.5t-56 -19.5q-35 0 -90 32q-57 34 -95 34q-49 0 -97.5 -44.5t-92.5 -172.5t-44 -257q0 -95 37 -147q27 -40 76 -40q117 0 279 137z &#xD;d,M944 207l28 -38q-134 -113 -199 -150q-90 -51 -142 -51q-24 0 -39 13.5t-15 30.5t11 56l35 122q-120 -129 -200 -175t-144 -46q-53 0 -89 46.5t-36 136.5q0 142 97.5 326.5t217 273t218.5 88.5q22 0 66 -7q47 195 90 284.5t111 154.5t155.5 100.5t163.5 35.5q40 0 64 -21 t24 -53q0 -31 -22 -50.5t-60 -19.5q-25 0 -93 10t-93 10q-35 0 -61.5 -21.5t-50.5 -92.5q-16 -45 -73 -287l-142 -604q-25 -107 -25 -142q0 -38 29 -38q18 0 42 13q34 19 132 95zM732 723q-80 18 -113 18q-67 0 -131 -52.5t-123.5 -203.5t-59.5 -263q0 -51 27.5 -83.5 t62.5 -32.5q42 0 96 37q77 55 122 134q27 50 73 245z&#xD;e,M698 251l33 -44q-245 -233 -420 -233q-71 0 -108.5 48t-37.5 154q0 214 130 426q146 241 349 241q71 0 108.5 -35.5t37.5 -97.5q0 -65 -45 -128t-161 -131q-58 -33 -248 -119q-9 -54 -9 -103q0 -71 22.5 -99t65.5 -28q41 0 90 23q66 31 193 126zM348 396q161 72 242 155 q55 58 55 115q0 43 -22.5 68.5t-58.5 25.5q-37 0 -72 -28q-47 -37 -79 -112q-46 -110 -65 -224z&#xD;f,M208 776h239q59 250 135 372t198 192.5t230 70.5q61 0 92 -24t31 -57q0 -30 -21 -50t-55 -20q-35 0 -132 21q-48 10 -75 10q-66 0 -119 -81.5t-85 -220.5l-50 -213h264l-16 -71h-267l-158 -638q-73 -291 -233.5 -441t-348.5 -150q-63 0 -95.5 24.5t-32.5 60.5 q0 31 22.5 49.5t64.5 18.5q21 0 62 -5q70 -9 134 -9q99 0 144 46.5t90 227.5l203 816h-239z&#xD;g,M847 848l81 18q-73 -234 -134 -469q-44 -168 -61 -280q-9 -56 -10 -142q-2 -144 -32 -232q-42 -123 -156.5 -198t-271.5 -75q-135 0 -212.5 63.5t-77.5 145.5q0 81 62 151q46 53 192 128q74 39 139 80q-74 -38 -115 -38q-37 0 -65.5 34.5t-28.5 91.5q0 184 109.5 365.5 t263.5 272.5q95 56 238 56q28 0 69 -2zM735 700q-48 9 -85 9q-95 0 -163 -50t-116 -168q-67 -167 -67 -281q0 -47 26.5 -79t59.5 -32q40 0 99 38.5t96.5 96.5t76.5 200zM599 155q-68 -61 -262 -195q-171 -116 -210 -167q-39 -52 -39 -110q0 -57 50.5 -102.5t122.5 -45.5 q68 0 132 33.5t111.5 97t65.5 143.5t19 212q1 29 10 134z&#xD;h,M977 212l26 -37q-92 -102 -189 -162q-66 -41 -109 -41q-35 0 -56.5 28t-21.5 87q0 40 16.5 116.5t93.5 328.5q34 124 34 145q0 34 -34 34q-42 0 -105 -42q-88 -58 -156 -148q-43 -58 -69 -172l-80 -348h-149q48 175 74 286l147 642q40 177 105.5 272.5t171 152.5 t208.5 57q43 0 68 -21t25 -53q0 -27 -24.5 -47.5t-66.5 -20.5q-24 0 -62 5q-86 12 -119 12q-46 0 -75 -37t-60 -174l-112 -494q119 125 259 211q82 51 132 51q39 0 61 -23.5t22 -65.5q0 -34 -8 -68q-13 -59 -61 -214q-65 -214 -76.5 -266t-11.5 -93q0 -16 5.5 -24t16.5 -8 q24 0 90 57q37 31 90 74z&#xD;i,M600 1271q31 0 51 -20.5t20 -52.5q0 -44 -30.5 -77.5t-68.5 -33.5q-30 0 -50 21t-20 55q0 45 29 76.5t69 31.5zM206 609l-44 34q100 110 182.5 156.5t140.5 46.5q32 0 49 -14t17 -38q0 -29 -65 -246q-106 -355 -106 -428q0 -14 7 -23.5t15 -9.5q32 0 164 124l39 -38 q-137 -129 -200 -165t-103 -36q-35 0 -55.5 22t-20.5 61q0 125 150 611q7 23 7 41q0 20 -18 20q-20 0 -45.5 -16t-113.5 -102z&#xD;j,M611 1271q31 0 51 -20.5t20 -52.5q0 -44 -30.5 -77.5t-67.5 -33.5q-31 0 -51 21t-20 55q0 45 29.5 76.5t68.5 31.5zM213 601l-38 43q85 92 183.5 147t151.5 55q22 0 36.5 -13.5t14.5 -34.5q0 -26 -32 -142l-173 -631q-87 -322 -192 -435.5t-246 -113.5q-70 0 -107.5 26.5 t-37.5 60.5q0 24 17.5 41t42.5 17q28 0 80 -26q60 -30 92 -30q54 0 87 50q33 49 99 316q68 273 115 444l70 252q20 61 20 76q0 8 -6.5 14t-13.5 6q-39 0 -163 -122z&#xD;k,M329 0h-149l131 545q95 405 124.5 499t71 155t104 109t135 73.5t127.5 25.5q52 0 77.5 -20t25.5 -53q0 -28 -23 -48t-58 -20q-44 0 -133 15q-29 6 -51 6q-31 0 -58.5 -22t-49 -78.5t-60.5 -234.5l-71 -320q96 109 199 168q78 44 149 44q50 0 84.5 -37.5t34.5 -94.5 q0 -107 -111 -191t-339 -90q77 -34 123 -74.5t90.5 -112t114.5 -239.5q83 -200 154 -266q70 -66 154 -66q49 0 81 21.5t32 43.5q0 14 -10 38q-11 26 -11 44q0 23 18 41t42 18q28 0 48 -22.5t20 -59.5q0 -72 -66 -128t-172 -56q-109 0 -195 55t-161 176q-43 70 -150 319 q-50 118 -90 177q-31 46 -85 91zM434 473q135 -1 218.5 26t119 72t35.5 98q0 38 -20.5 61t-49.5 23q-94 0 -288 -210z&#xD;l,M590 241l34 -36q-78 -88 -184.5 -160.5t-175.5 -72.5q-31 0 -51 23.5t-20 64.5q0 80 62 332l108 439q59 238 99 319q62 123 175.5 191t239.5 68q43 0 67.5 -20.5t24.5 -49.5q0 -32 -24 -52.5t-70 -20.5q-30 0 -85 10q-48 8 -89 8t-62 -17q-29 -24 -52.5 -101t-76.5 -304 l-99 -419q-74 -315 -74 -329q0 -32 23 -32q22 0 64 26q83 52 166 133z&#xD;m,M201 611l-30 40q99 99 188 146t140 47q21 0 31.5 -9t10.5 -25q0 -20 -16 -77q-23 -84 -32 -133q240 244 367 244q33 0 50 -18t17 -57q0 -42 -30 -143q114 119 198 168.5t131 49.5q42 0 65 -24t23 -74q0 -30 -10 -71t-73 -250q-79 -259 -79 -309q0 -34 28 -34q19 0 37 12 q59 42 121 104l33 -36q-21 -17 -79 -70q-80 -72 -110 -90q-58 -34 -98 -34q-30 0 -53 29.5t-23 81.5q0 48 14 112.5t82 289.5q51 169 51 205q0 34 -30 34q-25 0 -67 -25q-86 -52 -144 -127q-40 -52 -70 -165q-67 -247 -100 -403h-142l149 611q16 66 16 76q0 16 -8 24.5 t-23 8.5q-27 0 -84 -42q-99 -71 -142.5 -137.5t-74.5 -202.5l-77 -338h-143l113 477q50 207 50 225q0 23 -18 23q-39 0 -159 -114z&#xD;n,M204 607l-34 35q128 122 204 162t130 40q21 0 33 -9t12 -21q0 -9 -5 -32l-45 -201q102 113 256 211q82 51 135 51q39 0 61 -25t22 -72q0 -31 -9 -70q-16 -65 -84 -283q-64 -204 -64 -271q0 -20 6 -30t17 -10q29 0 91 56q44 40 88 74l25 -36q-92 -102 -191 -164 q-63 -40 -104 -40q-38 0 -59 27.5t-21 89.5q0 89 111 443q34 126 34 147q0 31 -37 31q-40 0 -103 -42q-94 -62 -157 -146q-40 -54 -67 -172l-81 -349h-149q42 150 73 287l89 380q5 23 5 33q0 27 -20 27q-16 0 -46 -21q-62 -41 -116 -100z&#xD;o,M670 841q98 0 163 -78t65 -217q0 -222 -156 -398.5t-330 -176.5q-107 0 -172.5 70t-65.5 191q0 210 120 388q151 221 376 221zM585 766q-85 0 -164.5 -121.5t-79.5 -335.5q0 -130 49 -205q36 -55 96 -55q84 0 153 104q88 135 88 335q0 150 -40.5 214t-101.5 64z&#xD;p,M189 593l-39 40q91 109 181 161t156 52q25 0 39.5 -12.5t14.5 -36.5q0 -29 -6.5 -59.5t-40.5 -144.5q153 153 209 189q94 61 172 61q51 0 86 -48t35 -145q0 -242 -151 -460t-334 -218q-72 0 -144 39l-85 -330q-8 -30 -8 -49q0 -37 28 -53q43 -25 181 -41l-13 -50 q-161 13 -253 13q-95 0 -246 -13l13 50q76 8 110.5 42t55.5 121l181 759q51 212 51 236q0 26 -25 26q-44 0 -168 -129zM391 121q79 -79 162 -79q120 0 210.5 187t90.5 365q0 57 -25.5 86.5t-68.5 29.5q-48 0 -108 -47q-93 -73 -142 -145q-35 -52 -66 -180z&#xD;q,M892 879h69q-53 -157 -139 -508l-173 -724q-4 -22 -4 -41q0 -27 20.5 -41.5t114.5 -28.5l-17 -55q-103 20 -211 20q-99 0 -271 -20l13 55q94 7 132.5 27t62.5 62t55 169l97 412q-99 -115 -214 -183q-87 -52 -150 -52q-50 0 -85.5 47.5t-35.5 138.5q0 224 182 456.5 t406 232.5q47 0 113 -14zM763 711q-72 20 -126 20q-88 0 -156.5 -52t-123.5 -188.5t-55 -267.5q0 -58 26 -90t65 -32q35 0 89 38q100 70 151 145q36 52 72 199z&#xD;r,M359 0h-149l70 269q51 198 89 376q9 44 9 55q0 24 -22 24q-15 0 -46 -20.5t-112 -101.5l-31 35q96 103 191.5 154.5t146.5 51.5q18 0 28.5 -8.5t10.5 -21.5t-13 -69l-43 -179q101 159 228 272q61 54 102 54q30 0 50 -19.5t20 -45.5q0 -27 -19.5 -46t-97.5 -45 q-74 -25 -120.5 -60t-102 -107t-77.5 -125.5t-67 -248.5z&#xD;s,M613 842q89 0 137.5 -34.5t48.5 -79.5q0 -27 -20.5 -47t-49.5 -20q-19 0 -33 8.5t-40 42.5q-49 65 -97 65q-41 0 -72.5 -31.5t-31.5 -78.5q0 -41 20 -79.5t101 -124.5q111 -118 111 -224t-90 -185.5t-232 -79.5q-119 0 -177 48.5t-58 119.5q0 35 22 58t54 23 q28 0 48 -18.5t20 -43.5q0 -10 -2 -26q-1 -13 -1 -22q0 -33 28 -56q27 -23 74 -23q54 0 95 18.5t64 56t23 74.5q0 36 -21.5 72t-96.5 119q-104 116 -104 223q0 98 79 171.5t201 73.5z&#xD;t,M454 995l159 61l-72 -280h207l-16 -71h-207l-88 -335q-41 -151 -41 -210q0 -27 11.5 -39t31.5 -12q31 0 95 37q84 49 160 111l38 -46q-219 -165 -293 -202t-119 -37q-37 0 -58.5 27t-21.5 88q0 72 38 220l103 398h-162l18 71h161z&#xD;u,M850 814h142l-94 -349q-83 -304 -83 -346q0 -19 9 -29t20 -10q17 0 40 15q33 23 125 116l33 -37q-201 -209 -296 -209q-32 0 -54.5 24.5t-22.5 69.5q0 52 22 139q-89 -102 -220 -179q-87 -51 -151 -51q-35 0 -55 23t-20 73q0 39 9 84q13 63 66 253q67 241 67 289 q0 28 -20 28q-18 0 -49 -18.5t-106 -89.5l-44 35q134 120 204.5 157.5t113.5 37.5q24 0 39 -17.5t15 -54.5q0 -69 -72 -339q-64 -243 -64 -277q0 -21 13.5 -36t29.5 -15q56 0 159 92.5t135 210.5z&#xD;v,M635 746q-77 -123 -106.5 -217t-29.5 -187q0 -86 38 -269q221 168 313 314.5t92 252.5q0 31 -23 78q-25 50 -25 74q0 26 18 45.5t43 19.5q33 0 53 -28.5t20 -96.5q0 -213 -151 -415q-185 -248 -469 -382q-7 47 -28 150q-41 207 -41 288q0 107 50 207.5t148 174.5 q-176 -3 -252 -39q-54 -26 -54 -61q0 -14 14 -47q9 -23 9 -39t-13.5 -28.5t-33.5 -12.5q-26 0 -44 22t-18 59q0 59 39 106.5t135 74.5t254 25q64 28 81 28q16 0 29 -13t13 -28q0 -31 -61 -56z&#xD;w,M587 813q46 32 70 32q19 0 31 -12.5t12 -30.5q0 -39 -59 -54l-77 -151q-29 -63 -43.5 -126t-14.5 -129q0 -83 40 -266q154 102 287 273q-1 43 -1 63q0 220 65 347q43 84 95 84q31 0 51.5 -26.5t20.5 -78.5q0 -42 -16 -97q-27 -90 -64 -165q0 -252 38 -400q120 82 233 206 q83 91 126 189.5t43 161.5q0 31 -22 80q-25 57 -25 83t19 44.5t46 18.5q33 0 52.5 -31.5t19.5 -112.5q0 -206 -179 -432t-437 -349q-32 109 -59 324q-136 -136 -169 -163q-66 -55 -127.5 -93.5t-131.5 -67.5q-7 57 -32 184q-35 179 -35 256q0 104 50.5 204.5t151.5 176.5 q-181 -5 -258 -42q-52 -25 -52 -60q0 -13 12 -42q11 -27 11 -40q0 -18 -13 -31t-33 -13q-26 0 -44 23t-18 65q0 80 72 130q104 73 364 68z&#xD;x,M268 639l-29 40q106 90 185 132q53 29 79 29q38 0 61 -38q33 -54 65 -236q124 182 219 251t159 69q33 0 53 -19t20 -47q0 -31 -28 -51q-20 -14 -109 -20q-73 -4 -128 -49q-88 -73 -170 -213l64 -299q41 -197 86 -292t110 -146q37 -29 82 -29q64 0 93 78q19 51 61 51 q20 0 35 -16.5t15 -41.5q0 -49 -55.5 -90t-142.5 -41q-96 0 -183.5 60.5t-151 194t-117.5 424.5q-20 -27 -64 -90q-126 -178 -195 -229t-132 -51q-44 0 -73 24.5t-29 58.5q0 28 19 48.5t44 20.5q26 0 53 -34q23 -30 44 -30q14 0 31 9q25 14 67 60q60 65 92 112l124 183 l-41 187q-16 76 -32.5 97.5t-36.5 21.5q-15 0 -42 -16q-58 -33 -102 -73z&#xD;y,M171 638l-32 47l74 50q108 74 152 95q25 12 46 12t40 -24q88 -111 148 -299.5t60 -365.5q0 -23 -2 -70q169 311 169 494q0 38 -17 101q-18 70 -18 100q0 29 18.5 48t46.5 19q35 0 56.5 -27t21.5 -77q0 -129 -59 -321.5t-185.5 -414t-231 -329t-202 -154t-184.5 -46.5 q-66 0 -99.5 24.5t-33.5 58.5q0 30 26 51.5t70 21.5q34 0 93 -13q63 -14 86 -14q61 0 129 51q93 70 147.5 167t54.5 196q0 139 -40.5 334t-114.5 298q-37 53 -79 53q-49 0 -140 -66z&#xD;z,M806 737q-91 -25 -167 -25q-42 0 -93 5q-71 8 -95 8q-30 0 -46 -14t-16 -36q0 -34 36 -37q45 -5 45 -41q0 -17 -14 -30.5t-32 -13.5q-36 0 -66.5 35.5t-30.5 88.5q0 68 57 117t141 49q44 0 119 -12q121 -19 174 -19q54 0 101 36q22 16 36 16q12 0 20.5 -7.5t8.5 -14.5 q0 -10 -11 -22q-34 -42 -155 -158l-310 -297q-136 -130 -226 -210q57 6 89 6q45 0 82 -7.5t119 -34.5q107 -37 174 -37q42 0 64.5 19.5t22.5 49.5q0 17 -16 48q-14 30 -14 46q0 24 16 41t40 17q29 0 48.5 -23.5t19.5 -60.5q0 -56 -41 -117.5t-103 -94.5t-153 -33 q-75 0 -219 43q-120 35 -176 35q-34 0 -79 -36q-26 -22 -45 -22q-37 0 -37 18q0 17 21 41q56 66 284 273q154 140 270 255z&#xD;{,M862 1378l-8 -34q-130 -11 -181 -74q-67 -85 -125 -354q-48 -229 -61 -264q-24 -67 -60 -103q-27 -27 -77 -41q69 -42 69 -112q0 -29 -8 -68q-4 -26 -50 -201q-50 -190 -58.5 -238.5t-8.5 -86.5q0 -52 41 -86t123 -37l-8 -38q-155 3 -213.5 45.5t-58.5 118.5q0 83 74 359 q52 199 52 236q0 44 -20.5 69.5t-75.5 38.5q59 7 96.5 36t53.5 68q11 28 63 249q62 262 85 323q36 97 112.5 144t243.5 50z&#xD;|,M667 -499v1907h111v-1907h-111z&#xD;},M-78 -359l7 34q131 11 181 74q68 84 125 354q49 229 62 264q24 67 60 103q27 26 77 41q-69 41 -69 112q0 29 7 68q5 26 51 200q49 190 58 239t9 86q0 53 -41 86.5t-123 37.5l8 38q155 -4 213.5 -46t58.5 -118q0 -83 -74 -359q-53 -199 -53 -236q0 -44 21 -69.5t75 -38.5 q-58 -7 -96 -36t-53 -68q-11 -28 -63 -249q-62 -262 -85 -324q-36 -96 -112.5 -143t-243.5 -50z&#xD;&#126;,M1104 734l62 -69q-61 -106 -122.5 -149t-124.5 -43q-27 0 -61.5 9.5t-175.5 65.5q-110 44 -152 44q-50 0 -91.5 -32t-95.5 -126l-62 72q71 121 127 162t123 41q62 0 216 -64q135 -55 173 -55q98 0 184 144z&#xD;&#xD;`;&#xD;&#xD;console.log(csvstring);&#xD;return parseCSV(csvstring);</l></block><list></list></block></block></script></block-definition><block-definition s="follow curve points %&apos;refPoints&apos; style %&apos;styleScript&apos; by %&apos;stepLength&apos; go back %&apos;goBack&apos;" type="command" category="Geometry"><header></header><code></code><translations>zh_CN:移动 _ 步 方式 _ 步长 _&#xD;</translations><inputs><input type="%l"></input><input type="%cmdRing"></input><input type="%n">10</input><input type="%b">false</input></inputs><script><block s="doDeclareVariables"><list><l>points</l><l>curvePoints</l><l>start</l><l>shape</l></list></block><block s="doWarp"><script><block s="doSetVar"><l>start</l><block s="reportNewList"><list><block s="xPosition"></block><block s="yPosition"></block></list></block></block><block s="doSetVar"><l>points</l><block s="reportMap"><block s="reifyReporter"><script></script><list></list></block><block var="refPoints"/></block></block><block s="doInsertInList"><block var="start"/><l>1</l><block var="points"/></block><block s="doSetVar"><l>curvePoints</l><custom-block s="smooth curve points %l stitch length %n"><block var="points"/><l>2</l></custom-block></block><block s="doAddToList"><block s="reportListItem"><l><option>last</option></l><block var="refPoints"/></block><block var="curvePoints"/></block><block s="doSetVar"><l>shape</l><custom-block s="convert vector %l scale %n by seam %n"><custom-block s="pointsToVector %l"><block var="curvePoints"/></custom-block><l>1</l><block var="stepLength"/></custom-block></block><block s="doSetVar"><l>curvePoints</l><custom-block s="vector to points %l"><block var="shape"/></custom-block></block></script></block><block s="doForEach"><l>point</l><block s="reportCDR"><block var="curvePoints"/></block><script><custom-block s="go to %l style %cmdRing by %txt"><block var="point"/><block var="styleScript"/><l>0</l></custom-block></script></block><block s="doIf"><block var="goBack"/><script><block s="doRun"><block s="reportJSFunction"><list></list><l>if (this.trackingOpened &amp;&amp; this.tracked) {&#xD;    this.tracked = false;&#xD;}</l></block><list></list></block><block s="doFor"><l>i</l><block s="reportListAttribute"><l><option>length</option></l><block var="curvePoints"/></block><l>1</l><script><custom-block s="go to %l style %cmdRing by %txt"><block s="reportListItem"><block var="i"/><block var="curvePoints"/></block><block var="styleScript"/><l>0</l></custom-block></script></block><block s="doRun"><block s="reportJSFunction"><list><l>start</l></list><l>if (this.trackingOpened) {&#xD;    this.tracks.add(&apos;!&apos;);&#xD;    this.tracks.add(start);&#xD;};</l></block><list><block var="start"/></list></block><block s="doRun"><block s="reportJSFunction"><list></list><l>if (this.trackingOpened &amp;&amp; !this.tracked) {&#xD;    this.tracked = true;&#xD;}</l></block><list></list></block></script><list></list></block></script></block-definition><block-definition s="does var %&apos;_name&apos; exist?" type="predicate" category="variables"><comment x="0" y="0" w="146" collapsed="false">This block reports &quot;true&quot; if there is a variable with this given name (input slot) in that context.&#xD;&#xD;It can be a global, sprite or script variable.&#xD;&#xD;Otherwise it reports &quot;false&quot;.</comment><header></header><code></code><translations>pt:a variável _ existe&#xD;ca:existeix la variable _ ?&#xD;es:existe la variable _ ?&#xD;de:existiert var _ ?&#xD;</translations><inputs><input type="%s"></input></inputs><script><block s="doApplyExtension"><l>err_try(cmd, catch, err)</l><list><block s="reifyScript"><script><block s="doApplyExtension"><l>err_ignore</l><list><block s="reportApplyExtension"><l>var_get(name)</l><list><block var="_name"/></list></block></list></block><block s="doReport"><block s="reportBoolean"><l><bool>true</bool></l></block></block></script><list></list></block><block s="reifyScript"><script><block s="doReport"><block s="reportBoolean"><l><bool>false</bool></l></block></block></script><list></list></block><l></l></list></block><block s="doApplyExtension"><l>err_reset</l><list></list></block></script></block-definition><block-definition s="set var %&apos;_name&apos; to %&apos;_value&apos;" type="command" category="variables"><comment x="0" y="0" w="240.4931640625" collapsed="false">This block sets the given value (last input) to the variable named with the name givent (var input).&#xD;&#xD;It looks for that variable following the scope order &apos;script&apos; -&gt; &apos;sprite&apos; -&gt; &apos;global&apos; (the first match it finds).&#xD;&#xD;If that variable does not exist (in any scope) an error happens, stopping their script. You can check it before using the &quot;does var (name) exists?&quot; block. </comment><header></header><code></code><translations>ca:assigna a _ el valor _&#xD;es:asignar a _ el valor _&#xD;pt:altera _ para _&#xD;de:setze var _ auf _&#xD;</translations><inputs><input type="%s"><options>§_getVarNamesDict</options></input><input type="%s"></input></inputs><script><block s="doApplyExtension"><l>var_set(name, val)</l><list><block var="_name"/><block var="_value"/></list></block></script></block-definition><block-definition s="create %&apos;_scope&apos; var %&apos;_names&apos;" type="command" category="variables"><comment x="0" y="0" w="146" collapsed="false">This block creates  new variables on the selected scope: global (for all sprites), sprite (for this sprite only) or script (only for that blocks stack) with the names given (in &apos;names&apos; list).&#xD;&#xD;If there is already a variable with that name in that scope, it does nothing: no errors and no overwrites.</comment><header></header><code></code><translations>pt:cria as variáveis _ _&#xD;ca:crea les _ variables _&#xD;es:crear las _ variables _&#xD;de:erstellen _ var _&#xD;</translations><inputs><input type="%s" readonly="true">global<options>global&#xD;sprite&#xD;script</options></input><input type="%mult%txt"></input></inputs><script><block s="doWarp"><script><block s="doForEach"><l>_item</l><block var="_names"/><script><block s="doApplyExtension"><l>var_declare(scope, name)</l><list><block var="_scope"/><block var="_item"/></list></block></script></block></script></block></script></block-definition><block-definition s="var %&apos;_name&apos;" type="reporter" category="variables"><comment x="0" y="0" w="178.00000000000003" collapsed="false">This block reports the value of the variable with the name given.&#xD;&#xD;It looks for that variable following the scope order &apos;script&apos; -&gt; &apos;sprite&apos; -&gt; &apos;global&apos; (the first match it finds).&#xD;&#xD;If that variable does not exist (in any scope) an error happens, stopping their script. You can check it before using the &quot;does var (name) exists?&quot; block. </comment><header></header><code></code><translations>pt:o valor de _&#xD;</translations><inputs><input type="%s"><options>§_getVarNamesDict</options></input></inputs><script><block s="doReport"><block s="reportApplyExtension"><l>var_get(name)</l><list><block var="_name"/></list></block></block></script></block-definition><block-definition s="vector to points %&apos;vector&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%l"></input></inputs><script><block s="doDeclareVariables"><list><l>points</l><l>lastPoint</l><l>lastDir</l></list></block><block s="doWarp"><script><block s="doSetVar"><l>points</l><block s="reportNewList"><list></list></block></block><block s="doSetVar"><l>lastPoint</l><block s="reportNewList"><list><block s="xPosition"></block><block s="yPosition"></block></list></block></block><block s="doSetVar"><l>lastDir</l><custom-block s="translate angle %n"><block s="direction"></block></custom-block></block><block s="doAddToList"><block var="lastPoint"/><block var="points"/></block><block s="doForEach"><l>vec</l><block var="vector"/><script><block s="doIfElse"><block s="reportVariadicEquals"><list><block var="vec"/><l>!</l></list></block><script><block s="doAddToList"><l>!</l><block var="points"/></block></script><script><block s="doSetVar"><l>lastDir</l><block s="reportDifference"><block var="lastDir"/><block s="reportListItem"><l>1</l><block var="vec"/></block></block></block><block s="doSetVar"><l>lastPoint</l><block s="reportNewList"><list><block s="reportVariadicSum"><list><block s="reportListItem"><l>1</l><block var="lastPoint"/></block><block s="reportVariadicProduct"><list><block s="reportMonadic"><l><option>cos</option></l><block var="lastDir"/></block><block s="reportListItem"><l>2</l><block var="vec"/></block></list></block></list></block><block s="reportVariadicSum"><list><block s="reportListItem"><l>2</l><block var="lastPoint"/></block><block s="reportVariadicProduct"><list><block s="reportMonadic"><l><option>sin</option></l><block var="lastDir"/></block><block s="reportListItem"><l>2</l><block var="vec"/></block></list></block></list></block></list></block></block><block s="doAddToList"><block var="lastPoint"/><block var="points"/></block></script></block></script></block><block s="doReport"><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportNewList"><list><block s="reportQuotient"><block s="reportRound"><block s="reportVariadicProduct"><list><block s="reportListItem"><l>1</l><l/></block><l>1000</l></list></block></block><l>1000</l></block><block s="reportQuotient"><block s="reportRound"><block s="reportVariadicProduct"><list><block s="reportListItem"><l>2</l><l/></block><l>1000</l></list></block></block><l>1000</l></block></list></block></autolambda><list></list></block><block var="points"/></block></block></script></block></script></block-definition><block-definition s="translate angle %&apos;direction&apos;" type="reporter" category="sensing"><comment x="0" y="0" w="188.00000000000003" collapsed="false">translate angle to or from polar coordinates</comment><header></header><code></code><translations>zh_CN:角度转换 _&#xD;</translations><inputs><input type="%n">0</input></inputs><script><block s="doReport"><block s="reportModulus"><block s="reportVariadicSum"><list><block s="reportDifference"><l>90</l><block var="direction"/></block><l>360</l></list></block><l>360</l></block></block></script></block-definition><block-definition s="lineLength %&apos;line&apos;" type="reporter" category="sensing"><header></header><code></code><translations>zh_CN:线段长度 _&#xD;</translations><inputs><input type="%l"></input></inputs><script><block s="doIfElse"><block s="reportVariadicLessThan"><list><block s="reportListAttribute"><l><option>length</option></l><block var="line"/></block><l>2</l></list></block><script><block s="doReport"><l>-1</l></block></script><script><block s="doIfElse"><block s="reportIsA"><block s="reportListItem"><l>1</l><block var="line"/></block><l><option>number</option></l></block><script><block s="doReport"><block s="reportMonadic"><l><option>sqrt</option></l><block s="reportVariadicSum"><list><block s="reportVariadicProduct"><list><block s="reportDifference"><block s="xPosition"></block><block s="reportListItem"><l>1</l><block var="line"/></block></block><block s="reportDifference"><block s="xPosition"></block><block s="reportListItem"><l>1</l><block var="line"/></block></block></list></block><block s="reportVariadicProduct"><list><block s="reportDifference"><block s="yPosition"></block><block s="reportListItem"><l>2</l><block var="line"/></block></block><block s="reportDifference"><block s="yPosition"></block><block s="reportListItem"><l>2</l><block var="line"/></block></block></list></block></list></block></block></block></script><script><block s="doReport"><block s="reportMonadic"><l><option>sqrt</option></l><block s="reportVariadicSum"><list><block s="reportVariadicProduct"><list><block s="reportDifference"><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block var="line"/></block></block><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block var="line"/></block></block></block><block s="reportDifference"><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block var="line"/></block></block><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block var="line"/></block></block></block></list></block><block s="reportVariadicProduct"><list><block s="reportDifference"><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="line"/></block></block><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block var="line"/></block></block></block><block s="reportDifference"><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="line"/></block></block><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block var="line"/></block></block></block></list></block></list></block></block></block></script></block></script></block></script></block-definition><block-definition s="calcAngle start %&apos;start&apos; end %&apos;end&apos;" type="reporter" category="sensing"><header></header><code></code><translations>zh_CN:倾斜角 起点 _ 终点 _&#xD;</translations><inputs><input type="%l"></input><input type="%l"></input></inputs><script><block s="doDeclareVariables"><list><l>relativeX</l><l>relativeY</l><l>angle</l></list></block><block s="doWarp"><script><block s="doSetVar"><l>relativeY</l><block s="reportDifference"><block s="reportListItem"><l>2</l><block var="end"/></block><block s="reportListItem"><l>2</l><block var="start"/></block></block></block><block s="doSetVar"><l>relativeX</l><block s="reportDifference"><block s="reportListItem"><l>1</l><block var="end"/></block><block s="reportListItem"><l>1</l><block var="start"/></block></block></block><block s="doIf"><block s="reportVariadicAnd"><list><block s="reportVariadicEquals"><list><block var="relativeX"/><l>0</l></list></block><block s="reportVariadicEquals"><list><block var="relativeY"/><l>0</l></list></block></list></block><script><block s="doReport"><l>90</l></block></script><list></list></block><block s="doIf"><block s="reportVariadicEquals"><list><block var="relativeX"/><l>0</l></list></block><script><block s="doIfElse"><block s="reportVariadicGreaterThan"><list><block var="relativeY"/><l>0</l></list></block><script><block s="doReport"><l>90</l></block></script><script><block s="doReport"><l>270</l></block></script></block></script><list></list></block><block s="doSetVar"><l>angle</l><block s="reportMonadic"><l><option>atan</option></l><block s="reportQuotient"><block var="relativeY"/><block var="relativeX"/></block></block></block><block s="doIfElse"><block s="reportVariadicGreaterThan"><list><block var="angle"/><l>0</l></list></block><script><block s="doIfElse"><block s="reportVariadicGreaterThan"><list><block var="relativeX"/><l>0</l></list></block><script><block s="doReport"><block var="angle"/></block></script><script><block s="doReport"><block s="reportVariadicSum"><list><l>180</l><block var="angle"/></list></block></block></script></block></script><script><block s="doIfElse"><block s="reportVariadicLessThan"><list><block var="relativeX"/><l>0</l></list></block><script><block s="doReport"><block s="reportVariadicSum"><list><l>180</l><block var="angle"/></list></block></block></script><script><block s="doReport"><block s="reportVariadicSum"><list><l>360</l><block var="angle"/></list></block></block></script></block></script></block></script></block></script></block-definition><block-definition s="smooth curve points %&apos;points&apos; stitch length %&apos;length&apos;" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%l"></input><input type="%n">10</input></inputs><script><block s="doDeclareVariables"><list><l>distance</l><l>nb</l></list></block><block s="doWarp"><script><block s="doSetVar"><l>distance</l><custom-block s="distance of points %l"><block var="points"/></custom-block></block><block s="doSetVar"><l>nb</l><block s="reportRound"><block s="reportQuotient"><block s="reportVariadicProduct"><list><block var="distance"/><l>1.4</l></list></block><block var="length"/></block></block></block><block s="doReport"><block s="evaluate"><block s="reportJSFunction"><list><l>points</l><l>nb</l></list><l>function parametricSplineInterpolation(points, numPoints = 100) {&#xD;&#xD;    if (points.length &lt; 2) {&#xD;        throw new Error("Should have at least two pooints");&#xD;    }&#xD;&#xD;&#xD;    const t = points.map((_, i) =&gt; i);&#xD;    const x = points.map(p =&gt; p.asArray()[0]);&#xD;    const y = points.map(p =&gt; p.asArray()[1]);&#xD;&#xD;    // 计算三次样条插值的系数&#xD;    function calculateCoefficients(t, values) {&#xD;        const n = t.length;&#xD;        const h = [];&#xD;        const alpha = [];&#xD;        const l = [];&#xD;        const mu = [];&#xD;        const z = [];&#xD;        const a = values.slice();&#xD;        const b = new Array(n).fill(0);&#xD;        const c = new Array(n).fill(0);&#xD;        const d = new Array(n).fill(0);&#xD;&#xD;        // 计算 h 和 alpha&#xD;        for (let i = 0; i &lt; n - 1; i++) {&#xD;            h[i] = t[i + 1] - t[i];&#xD;            alpha[i] = (3 / h[i]) * (a[i + 1] - a[i]) - (3 / (h[i - 1] || 1)) * (a[i] - a[i - 1] || 0);&#xD;        }&#xD;&#xD;        // 计算 l, mu, z&#xD;        l[0] = 1;&#xD;        mu[0] = 0;&#xD;        z[0] = 0;&#xD;&#xD;        for (let i = 1; i &lt; n - 1; i++) {&#xD;            l[i] = 2 * (t[i + 1] - t[i - 1]) - h[i - 1] * mu[i - 1];&#xD;            mu[i] = h[i] / l[i];&#xD;            z[i] = (alpha[i] - h[i - 1] * z[i - 1]) / l[i];&#xD;        }&#xD;&#xD;        l[n - 1] = 1;&#xD;        z[n - 1] = 0;&#xD;        c[n - 1] = 0;&#xD;&#xD;        // 计算 c, b, d&#xD;        for (let j = n - 2; j &gt;= 0; j--) {&#xD;            c[j] = z[j] - mu[j] * c[j + 1];&#xD;            b[j] = (a[j + 1] - a[j]) / h[j] - h[j] * (c[j + 1] + 2 * c[j]) / 3;&#xD;            d[j] = (c[j + 1] - c[j]) / (3 * h[j]);&#xD;        }&#xD;&#xD;        return { a, b, c, d };&#xD;    }&#xD;&#xD;    // 计算 x 和 y 的插值系数&#xD;    const xCoeff = calculateCoefficients(t, x);&#xD;    const yCoeff = calculateCoefficients(t, y);&#xD;&#xD;    // 生成插值点&#xD;    const result = [];&#xD;    const totalSegments = t.length - 1;&#xD;    const step = totalSegments / numPoints;&#xD;&#xD;    for (let i = 0; i &lt; numPoints; i++) {&#xD;        const ti = i * step;&#xD;&#xD;        // 找到 ti 所在的区间&#xD;        let segmentIndex = 0;&#xD;        for (let j = 0; j &lt; t.length - 1; j++) {&#xD;            if (ti &gt;= t[j] &amp;&amp; ti &lt;= t[j + 1]) {&#xD;                segmentIndex = j;&#xD;                break;&#xD;            }&#xD;        }&#xD;&#xD;        // 计算 x 和 y 的插值值&#xD;        const dt = ti - t[segmentIndex];&#xD;        const xi = xCoeff.a[segmentIndex] * 1 +&#xD;                   xCoeff.b[segmentIndex] * dt +&#xD;                   xCoeff.c[segmentIndex] * dt * dt +&#xD;                   xCoeff.d[segmentIndex] * dt * dt * dt;&#xD;        const yi = yCoeff.a[segmentIndex] * 1 +&#xD;                   yCoeff.b[segmentIndex] * dt +&#xD;                   yCoeff.c[segmentIndex] * dt * dt +&#xD;                   yCoeff.d[segmentIndex] * dt * dt * dt;&#xD;&#xD;        result.push(new List([xi, yi]));&#xD;    }&#xD;&#xD;    return result;&#xD;}&#xD;&#xD;let controlPoints = points.asArray();&#xD;let curvePoints = parametricSplineInterpolation(controlPoints,nb);&#xD;return new List(curvePoints);</l></block><list><block var="points"/><block var="nb"/></list></block></block></script></block></script></block-definition><block-definition s="distance of points %&apos;points&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%l"></input></inputs><script><block s="doDeclareVariables"><list><l>length</l><l>first</l></list></block><block s="doWarp"><script><block s="doIf"><block s="reportVariadicLessThanOrEquals"><list><block s="reportListAttribute"><l><option>length</option></l><block var="points"/></block><l>1</l></list></block><script><block s="doReport"><l>0</l></block></script><list></list></block><block s="doIf"><block s="reportVariadicEquals"><list><block s="reportListAttribute"><l><option>length</option></l><block var="points"/></block><l>2</l></list></block><script><block s="doReport"><custom-block s="lineLength %l"><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block var="points"/></block><block s="reportListItem"><l>2</l><block var="points"/></block></list></block></custom-block></block></script><list></list></block><block s="doSetVar"><l>length</l><l>0</l></block><block s="doSetVar"><l>first</l><block s="reportListItem"><l>1</l><block var="points"/></block></block><block s="doForEach"><l>点</l><block s="reportCDR"><block var="points"/></block><script><block s="doChangeVar"><l>length</l><custom-block s="lineLength %l"><block s="reportNewList"><list><block var="first"/><block var="点"/></list></block></custom-block></block><block s="doSetVar"><l>first</l><block var="点"/></block></script></block><block s="doReport"><block var="length"/></block></script></block></script></block-definition><block-definition s="pointsToVector %&apos;points&apos;" type="reporter" category="operators"><header></header><code></code><translations>zh_CN:点集转换为矢量 _&#xD;</translations><inputs><input type="%l"></input></inputs><script><block s="doDeclareVariables"><list><l>vector</l><l>lastPoint</l><l>lastDir</l><l>thisDir</l></list></block><block s="doWarp"><script><block s="doSetVar"><l>vector</l><block s="reportNewList"><list></list></block></block><block s="doIf"><block s="reportVariadicLessThan"><list><block s="reportListAttribute"><l><option>length</option></l><block var="points"/></block><l>2</l></list></block><script><block s="doReport"><block s="reportNewList"><list></list></block></block></script><list></list></block><block s="doIfElse"><block s="reportVariadicEquals"><list><block s="reportListItem"><l>1</l><block var="points"/></block><l>!</l></list></block><script><block s="doSetVar"><l>lastDir</l><custom-block s="calcAngle start %l end %l"><block s="reportNewList"><list><l>0</l><l>0</l></list></block><block s="reportListItem"><l>2</l><block var="points"/></block></custom-block></block><block s="doAddToList"><l>!</l><block var="vector"/></block><block s="doAddToList"><block s="reportNewList"><list><block s="reportMonadic"><l><option>neg</option></l><block var="lastDir"/></block><custom-block s="lineLength %l"><block s="reportNewList"><list><block s="reportNewList"><list><l>0</l><l>0</l></list></block><block s="reportListItem"><l>2</l><block var="points"/></block></list></block></custom-block></list></block><block var="vector"/></block></script><script><block s="doSetVar"><l>lastDir</l><custom-block s="calcAngle start %l end %l"><block s="reportListItem"><l>1</l><block var="points"/></block><block s="reportListItem"><l>2</l><block var="points"/></block></custom-block></block><block s="doAddToList"><block s="reportNewList"><list><block s="reportMonadic"><l><option>neg</option></l><block var="lastDir"/></block><custom-block s="lineLength %l"><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block var="points"/></block><block s="reportListItem"><l>2</l><block var="points"/></block></list></block></custom-block></list></block><block var="vector"/></block></script></block><block s="doSetVar"><l>lastPoint</l><block s="reportListItem"><l>2</l><block var="points"/></block></block><block s="doIf"><block s="reportVariadicGreaterThan"><list><block s="reportListAttribute"><l><option>length</option></l><block var="points"/></block><l>2</l></list></block><script><block s="doFor"><l>i</l><l>3</l><block s="reportListAttribute"><l><option>length</option></l><block var="points"/></block><script><block s="doIfElse"><block s="reportVariadicEquals"><list><block s="reportListItem"><block var="i"/><block var="points"/></block><l>!</l></list></block><script><block s="doAddToList"><l>!</l><block var="vector"/></block></script><script><block s="doSetVar"><l>thisDir</l><custom-block s="calcAngle start %l end %l"><block var="lastPoint"/><block s="reportListItem"><block var="i"/><block var="points"/></block></custom-block></block><block s="doAddToList"><block s="reportNewList"><list><custom-block s="translate angle %n"><custom-block s="translate angle %n"><block s="reportDifference"><block var="lastDir"/><block var="thisDir"/></block></custom-block></custom-block><custom-block s="lineLength %l"><block s="reportNewList"><list><block var="lastPoint"/><block s="reportListItem"><block var="i"/><block var="points"/></block></list></block></custom-block></list></block><block var="vector"/></block><block s="doSetVar"><l>lastPoint</l><block s="reportListItem"><block var="i"/><block var="points"/></block></block><block s="doSetVar"><l>lastDir</l><block var="thisDir"/></block></script></block></script></block></script><list></list></block></script></block><block s="doReport"><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportIfElse"><block s="reportIsA"><l></l><l><option>list</option></l></block><block s="reportNewList"><list><block s="reportQuotient"><block s="reportRound"><block s="reportVariadicProduct"><list><block s="reportListItem"><l>1</l><l/></block><l>100000</l></list></block></block><l>100000</l></block><block s="reportQuotient"><block s="reportRound"><block s="reportVariadicProduct"><list><block s="reportListItem"><l>2</l><l/></block><l>100000</l></list></block></block><l>100000</l></block></list></block><l></l></block></autolambda><list></list></block><block var="vector"/></block></block></script></block-definition><block-definition s="convert vector %&apos;vector&apos; scale %&apos;scale&apos; by seam %&apos;seam&apos;" type="reporter" category="operators"><header></header><code></code><translations>zh_CN:转换矢量 _ 比例 _ 针脚长度 _&#xD;</translations><inputs><input type="%l"></input><input type="%n">1</input><input type="%n">6</input></inputs><script><block s="doDeclareVariables"><list><l>newVector</l><l>deflection</l><l>buffer</l><l>length</l><l>tempV</l></list></block><block s="doSetVar"><l>newVector</l><block s="reportNewList"><list></list></block></block><block s="doSetVar"><l>buffer</l><block s="reportNewList"><list></list></block></block><block s="doSetVar"><l>deflection</l><l>0</l></block><block s="doIfElse"><block s="reportVariadicEquals"><list><block var="seam"/><l>0</l></list></block><script><block s="doWarp"><script><block s="doForEach"><l>item</l><block var="vector"/><script><block s="doIfElse"><block s="reportVariadicOr"><list><block s="reportVariadicEquals"><list><block var="item"/><l>!</l></list></block><block s="reportVariadicEquals"><list><block s="reportListItem"><l>1</l><block var="item"/></block><l>!</l></list></block></list></block><script><block s="doAddToList"><l>!</l><block var="newVector"/></block></script><script><block s="doAddToList"><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block var="item"/></block><block s="reportVariadicProduct"><list><block s="reportListItem"><l>2</l><block var="item"/></block><block var="scale"/></list></block></list></block><block var="newVector"/></block></script></block></script></block></script></block></script><script><block s="doWarp"><script><custom-block s="%upvar for each %upvar of %l %ca"><l>#</l><l>item</l><block var="vector"/><script><block s="doIfElse"><block s="reportVariadicOr"><list><block s="reportVariadicEquals"><list><block var="item"/><l>!</l></list></block><block s="reportVariadicEquals"><list><block s="reportListItem"><l>1</l><block var="item"/></block><l>!</l></list></block></list></block><script><block s="doIf"><block s="reportNot"><block s="reportListIsEmpty"><block var="buffer"/></block></block><script><block s="doAddToList"><block var="buffer"/><block var="newVector"/></block><block s="doSetVar"><l>buffer</l><block s="reportNewList"><list></list></block></block></script><list></list></block><block s="doAddToList"><l>!</l><block var="newVector"/></block></script><script><block s="doSetVar"><l>length</l><block s="reportVariadicProduct"><list><block s="reportListItem"><l>2</l><block var="item"/></block><block var="scale"/></list></block></block><block s="doIf"><block s="reportVariadicAnd"><list><block s="reportNot"><block s="reportListIsEmpty"><block var="buffer"/></block></block><block s="reportVariadicLessThan"><list><block s="reportMonadic"><l><option>abs</option></l><block s="reportDifference"><l>180</l><block s="reportListItem"><l>1</l><block var="item"/></block></block></block><l>95</l></list></block></list></block><script><block s="doAddToList"><block var="buffer"/><block var="newVector"/></block><block s="doSetVar"><l>buffer</l><block s="reportNewList"><list></list></block></block></script><list></list></block><block s="doIfElse"><block s="reportListIsEmpty"><block var="buffer"/></block><script><block s="doIfElse"><block s="reportVariadicGreaterThan"><list><block var="length"/><block s="reportVariadicProduct"><list><block var="seam"/><l>0.9</l></list></block></list></block><script><block s="doIfElse"><block s="reportVariadicEquals"><list><block var="deflection"/><l>0</l></list></block><script><block s="doAddToList"><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block var="item"/></block><block var="length"/></list></block><block var="newVector"/></block></script><script><block s="doAddToList"><block s="reportNewList"><list><block s="reportVariadicSum"><list><block s="reportListItem"><l>1</l><block var="item"/></block><block var="deflection"/></list></block><block var="length"/></list></block><block var="newVector"/></block><block s="doSetVar"><l>deflection</l><l>0</l></block></script></block></script><script><block s="doIfElse"><block s="reportVariadicEquals"><list><block var="deflection"/><l>0</l></list></block><script><block s="doSetVar"><l>buffer</l><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block var="item"/></block><block var="length"/></list></block></block></script><script><block s="doSetVar"><l>buffer</l><block s="reportNewList"><list><block s="reportVariadicSum"><list><block s="reportListItem"><l>1</l><block var="item"/></block><block var="deflection"/></list></block><block var="length"/></list></block></block><block s="doSetVar"><l>deflection</l><l>0</l></block></script></block></script></block></script><script><block s="doSetVar"><l>tempV</l><custom-block s="conbine 2 vectors vector1 %l vector2 %l deflection %upvar"><block var="buffer"/><block s="reportNewList"><list><block s="reportVariadicSum"><list><block s="reportListItem"><l>1</l><block var="item"/></block><block var="deflection"/></list></block><block var="length"/></list></block><l>defl</l></custom-block></block><block s="doIfElse"><block s="reportVariadicGreaterThan"><list><block s="reportListItem"><l>2</l><block var="tempV"/></block><block s="reportVariadicProduct"><list><block var="seam"/><l>0.9</l></list></block></list></block><script><block s="doAddToList"><block var="tempV"/><block var="newVector"/></block><block s="doSetVar"><l>buffer</l><block s="reportNewList"><list></list></block></block></script><script><block s="doSetVar"><l>buffer</l><block var="tempV"/></block></script></block><block s="doSetVar"><l>deflection</l><block var="defl"/></block></script></block></script></block></script></custom-block><block s="doIf"><block s="reportNot"><block s="reportListIsEmpty"><block var="buffer"/></block></block><script><block s="doAddToList"><block var="buffer"/><block var="newVector"/></block></script><list></list></block></script></block></script></block><block s="doReport"><block var="newVector"/></block></script></block-definition><block-definition s="conbine 2 vectors vector1 %&apos;vector1&apos; vector2 %&apos;vector2&apos; deflection %&apos;deflection&apos;" type="reporter" category="operators"><header></header><code></code><translations>zh_CN:合并矢量 矢量1 _ 矢量2 _ 偏移角度 _&#xD;</translations><inputs><input type="%l"></input><input type="%l"></input><input type="%upvar"></input></inputs><script><block s="doDeclareVariables"><list><l>angleC</l><l>a</l><l>b</l><l>c</l><l>angleB</l><l>angleA</l><l>angleV2</l></list></block><block s="doSetVar"><l>a</l><block s="reportListItem"><l>2</l><block var="vector1"/></block></block><block s="doSetVar"><l>b</l><block s="reportListItem"><l>2</l><block var="vector2"/></block></block><block s="doSetVar"><l>angleV2</l><block s="reportListItem"><l>1</l><block var="vector2"/></block></block><block s="doIf"><block s="reportVariadicGreaterThan"><list><block var="angleV2"/><l>180</l></list></block><script><block s="doSetVar"><l>angleV2</l><block s="reportDifference"><block var="angleV2"/><l>360</l></block></block></script><list></list></block><block s="doIfElse"><block s="reportVariadicGreaterThan"><list><block var="angleV2"/><l>0</l></list></block><script><block s="doSetVar"><l>angleC</l><block s="reportDifference"><l>180</l><block var="angleV2"/></block></block></script><script><block s="doSetVar"><l>angleC</l><block s="reportVariadicSum"><list><l>180</l><block var="angleV2"/></list></block></block></script></block><block s="doSetVar"><l>c</l><block s="reportMonadic"><l><option>sqrt</option></l><block s="reportDifference"><block s="reportVariadicSum"><list><block s="reportPower"><block var="a"/><l>2</l></block><block s="reportPower"><block var="b"/><l>2</l></block></list></block><block s="reportVariadicProduct"><list><block s="reportVariadicProduct"><list><l>2</l><block s="reportVariadicProduct"><list><block var="a"/><block var="b"/></list></block></list></block><block s="reportMonadic"><l><option>cos</option></l><block var="angleC"/></block></list></block></block></block></block><block s="doSetVar"><l>angleA</l><block s="reportMonadic"><l><option>acos</option></l><block s="reportQuotient"><block s="reportDifference"><block s="reportVariadicSum"><list><block s="reportPower"><block var="b"/><l>2</l></block><block s="reportPower"><block var="c"/><l>2</l></block></list></block><block s="reportPower"><block var="a"/><l>2</l></block></block><block s="reportVariadicProduct"><list><l>2</l><block s="reportVariadicProduct"><list><block var="b"/><block var="c"/></list></block></list></block></block></block></block><block s="doSetVar"><l>angleB</l><block s="reportMonadic"><l><option>acos</option></l><block s="reportQuotient"><block s="reportDifference"><block s="reportVariadicSum"><list><block s="reportPower"><block var="a"/><l>2</l></block><block s="reportPower"><block var="c"/><l>2</l></block></list></block><block s="reportPower"><block var="b"/><l>2</l></block></block><block s="reportVariadicProduct"><list><l>2</l><block s="reportVariadicProduct"><list><block var="a"/><block var="c"/></list></block></list></block></block></block></block><block s="doIfElse"><block s="reportVariadicGreaterThan"><list><block var="angleV2"/><l>0</l></list></block><script><block s="doSetVar"><l>deflection</l><block var="angleA"/></block><block s="doReport"><block s="reportNewList"><list><block s="reportVariadicSum"><list><block s="reportListItem"><l>1</l><block var="vector1"/></block><block var="angleB"/></list></block><block var="c"/></list></block></block></script><script><block s="doSetVar"><l>deflection</l><block s="reportMonadic"><l><option>neg</option></l><block var="angleA"/></block></block><block s="doReport"><block s="reportNewList"><list><block s="reportDifference"><block s="reportListItem"><l>1</l><block var="vector1"/></block><block var="angleB"/></block><block var="c"/></list></block></block></script></block></script></block-definition><block-definition s="%&apos;#&apos; for each %&apos;item&apos; of %&apos;data&apos; %&apos;action&apos;" type="command" category="lists"><comment x="0" y="0" w="228.57142857142858" collapsed="false">This block carries out the given script for each item of the given list, like the primitive FOR EACH.&#xD;&#xD;What&apos;s different is that it provides the # variable, which will contain the item number in the list of each item in turn, 1 while processing item 1, and so on.</comment><header></header><code></code><translations>ca:_ per cada _ de _ _&#xD;</translations><inputs><input type="%upvar"></input><input type="%upvar"></input><input type="%l"></input><input type="%ca"></input></inputs><script><block s="doForEach"><l>inner item</l><block var="data"/><script><block s="doSetVar"><l>item</l><block var="inner item"/></block><block s="doChangeVar"><l>#</l><l>1</l></block><block s="doRun"><block var="action"/><list></list></block></script></block></script></block-definition><block-definition s="move %&apos;distance&apos; curve points %&apos;modelPoints&apos; style %&apos;styleScript&apos; by %&apos;stepLength&apos; go back %&apos;goBack&apos;" type="command" category="Geometry"><header></header><code></code><translations>zh_CN:移动 _ 步 方式 _ 步长 _&#xD;</translations><inputs><input type="%n">50</input><input type="%l"></input><input type="%cmdRing"></input><input type="%n">10</input><input type="%b">false</input></inputs><script><block s="doDeclareVariables"><list><l>dist</l><l>dir</l><l>start</l><l>target</l><l>refPoints</l><l>points</l><l>translateRefPoint</l><l>direction</l><l>curvePoints</l><l>width</l><l>baseAngle</l><l>first</l><l>last</l><l>restPoints</l><l>shape</l></list></block><block s="doWarp"><script><block s="doIfElse"><block s="reportNot"><custom-block s="does var %s exist?"><l>lastCurveDistance</l></custom-block></block><script><custom-block s="create %s var %mult%txt"><l>global</l><list><l>lastCurveDistance</l><l>lastCurveModelPoints</l><l>lastCurveVector</l></list></custom-block><custom-block s="set var %s to %s"><l>lastCurveDistance</l><block var="distance"/></custom-block><custom-block s="set var %s to %s"><l>lastCurveModelPoints</l><block s="reportMap"><block s="reifyReporter"><script></script><list></list></block><block var="modelPoints"/></block></custom-block></script><script><block s="doIfElse"><block s="reportVariadicAnd"><list><block s="reportVariadicEquals"><list><block var="distance"/><custom-block s="var %s"><l>lastCurveDistance</l></custom-block></list></block><block s="reportVariadicEquals"><list><block var="modelPoints"/><custom-block s="var %s"><l>lastCurveModelPoints</l></custom-block></list></block></list></block><script><block s="doSetVar"><l>curvePoints</l><custom-block s="vector to points %l"><custom-block s="var %s"><l>lastCurveVector</l></custom-block></custom-block></block></script><script><custom-block s="set var %s to %s"><l>lastCurveDistance</l><block var="distance"/></custom-block><custom-block s="set var %s to %s"><l>lastCurveModelPoints</l><block s="reportMap"><block s="reifyReporter"><script></script><list></list></block><block var="modelPoints"/></block></custom-block><block s="doSetVar"><l>first</l><block s="reportListItem"><l>1</l><block var="modelPoints"/></block></block><block s="doSetVar"><l>last</l><block s="reportListItem"><l><option>last</option></l><block var="modelPoints"/></block></block><block s="doSetVar"><l>width</l><custom-block s="lineLength %l"><block s="reportNewList"><list><block var="first"/><block var="last"/></list></block></custom-block></block><block s="doSetVar"><l>baseAngle</l><custom-block s="calcAngle start %l end %l"><block var="first"/><block var="last"/></custom-block></block><block s="doSetVar"><l>restPoints</l><block s="reportMap"><block s="reifyReporter"><script></script><list></list></block><block var="modelPoints"/></block></block><block s="doDeleteFromList"><l>1</l><block var="restPoints"/></block><block s="doDeleteFromList"><l><option>last</option></l><block var="restPoints"/></block><block s="doSetVar"><l>restPoints</l><block s="reportMap"><block s="reifyReporter"><script><block s="doDeclareVariables"><list><l>radius</l><l>x</l><l>y</l></list></block><block s="doSetVar"><l>radius</l><custom-block s="lineLength %l"><block s="reportNewList"><list><block var="first"/><l></l></list></block></custom-block></block><block s="doSetVar"><l>x</l><block s="reportVariadicProduct"><list><block var="radius"/><block s="reportMonadic"><l><option>cos</option></l><block s="reportDifference"><custom-block s="calcAngle start %l end %l"><block var="first"/><l/></custom-block><block var="baseAngle"/></block></block></list></block></block><block s="doSetVar"><l>y</l><block s="reportVariadicProduct"><list><block var="radius"/><block s="reportMonadic"><l><option>sin</option></l><block s="reportDifference"><custom-block s="calcAngle start %l end %l"><block var="first"/><l/></custom-block><block var="baseAngle"/></block></block></list></block></block><block s="doReport"><block s="reportNewList"><list><block var="x"/><block var="y"/></list></block></block></script><list></list></block><block var="restPoints"/></block></block><block s="doSetVar"><l>refPoints</l><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportNewList"><list><block s="reportVariadicProduct"><list><block s="reportListItem"><l>1</l><l/></block><block s="reportQuotient"><block var="distance"/><block var="width"/></block></list></block><block s="reportVariadicProduct"><list><block s="reportListItem"><l>2</l><l/></block><block s="reportQuotient"><block var="distance"/><block var="width"/></block></list></block></list></block></autolambda><list></list></block><block var="restPoints"/></block></block><block s="doSetVar"><l>translateRefPoint</l><block s="reifyReporter"><script><block s="doDeclareVariables"><list><l>end</l></list></block><block s="doSetVar"><l>end</l><block s="reportNewList"><list><block s="reportVariadicSum"><list><block s="reportListItem"><l>1</l><block var="start"/></block><block s="reportVariadicProduct"><list><block var="distance"/><block s="reportMonadic"><l><option>cos</option></l><block var="d"/></block></list></block></list></block><block s="reportVariadicSum"><list><block s="reportListItem"><l>2</l><block var="start"/></block><block s="reportVariadicProduct"><list><block var="distance"/><block s="reportMonadic"><l><option>sin</option></l><block var="d"/></block></list></block></list></block></list></block></block><block s="doIf"><block s="reportVariadicEquals"><list><block var="height"/><l>0</l></list></block><script><block s="doReport"><block var="end"/></block></script><list></list></block><block s="doIfElse"><block s="reportVariadicGreaterThan"><list><block var="height"/><l>0</l></list></block><script><block s="doReport"><block s="reportNewList"><list><block s="reportVariadicSum"><list><block s="reportListItem"><l>1</l><block var="end"/></block><block s="reportVariadicProduct"><list><block var="height"/><block s="reportMonadic"><l><option>cos</option></l><block s="reportVariadicSum"><list><block var="d"/><l>90</l></list></block></block></list></block></list></block><block s="reportVariadicSum"><list><block s="reportListItem"><l>2</l><block var="end"/></block><block s="reportVariadicProduct"><list><block var="height"/><block s="reportMonadic"><l><option>sin</option></l><block s="reportVariadicSum"><list><block var="d"/><l>90</l></list></block></block></list></block></list></block></list></block></block></script><script><block s="doReport"><block s="reportNewList"><list><block s="reportVariadicSum"><list><block s="reportListItem"><l>1</l><block var="end"/></block><block s="reportVariadicProduct"><list><block s="reportMonadic"><l><option>neg</option></l><block var="height"/></block><block s="reportMonadic"><l><option>cos</option></l><block s="reportDifference"><block var="d"/><l>90</l></block></block></list></block></list></block><block s="reportVariadicSum"><list><block s="reportListItem"><l>2</l><block var="end"/></block><block s="reportVariadicProduct"><list><block s="reportMonadic"><l><option>neg</option></l><block var="height"/></block><block s="reportMonadic"><l><option>sin</option></l><block s="reportDifference"><block var="d"/><l>90</l></block></block></list></block></list></block></list></block></block></script></block></script><list><l>start</l><l>d</l><l>distance</l><l>height</l></list></block></block><block s="doSetVar"><l>start</l><block s="reportNewList"><list><block s="xPosition"></block><block s="yPosition"></block></list></block></block><block s="doSetVar"><l>dir</l><block s="direction"></block></block><block s="doSetVar"><l>direction</l><custom-block s="translate angle %n"><block var="dir"/></custom-block></block><block s="doIf"><block s="reportVariadicEquals"><list><block var="stepLength"/><l>0</l></list></block><script><block s="doSetVar"><l>stepLength</l><l>10</l></block></script><list></list></block><block s="doSetVar"><l>target</l><block s="evaluate"><block var="translateRefPoint"/><list><block var="start"/><block var="direction"/><block var="distance"/><l>0</l></list></block></block><block s="doSetVar"><l>points</l><block s="reportMap"><block s="reifyReporter"><script><block s="doReport"><block s="evaluate"><block var="translateRefPoint"/><list><block var="start"/><block var="direction"/><block s="reportListItem"><l>1</l><block var="point"/></block><block s="reportListItem"><l>2</l><block var="point"/></block></list></block></block></script><list><l>point</l></list></block><block var="refPoints"/></block></block><block s="doInsertInList"><block var="start"/><l>1</l><block var="points"/></block><block s="doAddToList"><block var="target"/><block var="points"/></block><block s="doSetVar"><l>curvePoints</l><custom-block s="smooth curve points %l stitch length %n"><block var="points"/><l>2</l></custom-block></block><block s="doAddToList"><block var="target"/><block var="curvePoints"/></block><block s="doSetVar"><l>shape</l><custom-block s="convert vector %l scale %n by seam %n"><custom-block s="pointsToVector %l"><block var="curvePoints"/></custom-block><l>1</l><block var="stepLength"/></custom-block></block><custom-block s="set var %s to %s"><l>lastCurveVector</l><block s="reportMap"><block s="reifyReporter"><script></script><list></list></block><block var="shape"/></block></custom-block><block s="doSetVar"><l>curvePoints</l><custom-block s="vector to points %l"><block var="shape"/></custom-block></block></script></block></script></block></script></block><block s="doForEach"><l>next</l><block s="reportCDR"><block var="curvePoints"/></block><script><custom-block s="go to %l style %cmdRing by %txt"><block var="next"/><block var="styleScript"/><l>0</l></custom-block></script></block><block s="doIf"><block var="goBack"/><script><block s="doRun"><block s="reportJSFunction"><list></list><l>if (this.trackingOpened &amp;&amp; this.tracked) {&#xD;    this.tracked = false;&#xD;}</l></block><list></list></block><block s="doFor"><l>i</l><block s="reportDifference"><block s="reportListAttribute"><l><option>length</option></l><block var="curvePoints"/></block><l>1</l></block><l>1</l><script><custom-block s="go to %l style %cmdRing by %txt"><block s="reportListItem"><block var="i"/><block var="curvePoints"/></block><block var="styleScript"/><l>0</l></custom-block></script></block><block s="doRun"><block s="reportJSFunction"><list><l>start</l></list><l>if (this.trackingOpened) {&#xD;    this.tracks.add(&apos;!&apos;);&#xD;    this.tracks.add(start);&#xD;};</l></block><list><block var="start"/></list></block><block s="doRun"><block s="reportJSFunction"><list></list><l>if (this.trackingOpened &amp;&amp; !this.tracked) {&#xD;    this.tracked = true;&#xD;}</l></block><list></list></block></script><list></list></block></script></block-definition><block-definition s="default stitch length" type="reporter" category="embroidery"><header></header><code></code><translations>zh_CN:默认针脚长度&#xD;</translations><inputs></inputs><script><block s="doReport"><block s="evaluate"><block s="reportJSFunction"><list></list><l>if (this.isRunning) {&#xD;    return this.stitchoptions.length;&#xD;} else {&#xD;    return 0;&#xD;}</l></block><list></list></block></block></script></block-definition><block-definition s="Is %&apos;ring&apos; empty?" type="predicate" category="operators"><header></header><code></code><translations>zh_CN:_ 为空？&#xD;</translations><inputs><input type="%cmdRing"></input></inputs><script><block s="doReport"><block s="evaluate"><block s="reportJSFunction"><list><l>context</l></list><l>return !(context instanceof Context) || context.expression instanceof Array;</l></block><list><block var="ring"/></list></block></block></script></block-definition><block-definition s="stitch style" type="reporter" category="embroidery"><header></header><code></code><translations>zh_CN:默认针法&#xD;</translations><inputs></inputs><script><block s="doDeclareVariables"><list><l>stitchtype</l></list></block><block s="doSetVar"><l>stitchtype</l><block s="evaluate"><block s="reportJSFunction"><list></list><l>if (this.stitchstyle) {&#xD;    return this.stitchstyle;&#xD;} else {&#xD;    return &apos;None&apos;;&#xD;}</l></block><list></list></block></block><block s="doReport"><block s="reportIfElse"><block s="reportVariadicAnd"><list><block s="reportIsA"><block var="stitchtype"/><l><option>command</option></l></block><block s="reportNot"><custom-block s="Is %cmdRing empty?"><block var="stitchtype"/></custom-block></block></list></block><block var="stitchtype"/><block s="reifyScript"><script><block s="forward"><l></l></block></script><list></list></block></block></block></script></block-definition><block-definition s="copy list %&apos;l&apos;" type="reporter" category="lists"><header></header><code></code><translations>zh_CN:复制列表 _&#xD;</translations><inputs><input type="%l"></input></inputs><script><block s="doReport"><block s="reportMap"><block s="reifyScript"><script><block s="doReport"><l></l></block></script><list></list></block><block var="l"/></block></block></script></block-definition><block-definition s="begin tracking" type="command" category="motion"><header></header><code></code><translations>zh_CN:开始跟踪&#xD;</translations><inputs></inputs><script><block s="doRun"><block s="reportJSFunction"><list></list><l>if (this.tracked) {&#xD;    this.tracks = new List();&#xD;    return;&#xD;} else {&#xD;    this.tracked = true;&#xD;    this.tracks = new List();&#xD;}&#xD;if (!this.trackingOpened) {&#xD;this.backupSetPosition = this.setPosition;&#xD;this.trackingOpened = true;&#xD;this.down = function() {&#xD;    var len;&#xD;    this.isDown = true;&#xD;    if (this.tracked) {&#xD;        len = this.tracks.length();&#xD;        if (this.tracks.at(len) == &apos;!&apos;) {&#xD;            this.tracks.add(new List([this.xPosition(),this.yPosition()]));&#xD;        }&#xD;    }    &#xD;}    &#xD;this.setPosition = function (aPoint, justMe) {&#xD;    var len,lastX,lastY;&#xD;    if (this.tracked) {&#xD;        len = this.tracks.length();&#xD;        if (len == 0 &amp;&amp; this.isDown) {&#xD;            this.tracks.add(new List([this.xPosition(),this.yPosition()]));&#xD;        }&#xD;        if (len == 0 &amp;&amp; !this.isDown) {&#xD;            this.tracks.add(&apos;!&apos;);&#xD;        }&#xD;    }                &#xD;    this.backupSetPosition(aPoint, justMe); &#xD;    if (this.tracked) {  &#xD;        len = this.tracks.length();&#xD;        if (this.isDown) {&#xD;            if (this.tracks.at(len) == &apos;!&apos;){&#xD;                this.tracks.add(new List([this.xPosition(),this.yPosition()]));   &#xD;            }else{ &#xD;                lastX = this.tracks.at(len).at(1);&#xD;                lastY = this.tracks.at(len).at(2);&#xD;                if (lastX != this.xPosition() || lastY != this.yPosition()) {&#xD;                    this.tracks.add(new List([this.xPosition(),this.yPosition()]));&#xD;                }&#xD;            }&#xD;        }else{&#xD;            if (len != 0 &amp;&amp; this.tracks.at(len) != &apos;!&apos;)&#xD;            {&#xD;                lastX = this.tracks.at(len).at(1);&#xD;                lastY = this.tracks.at(len).at(2); &#xD;                if (lastX != this.xPosition() || lastY != this.yPosition()) &#xD;                {&#xD;                    this.tracks.add(&apos;!&apos;);&#xD;                }&#xD;            }    &#xD;        }&#xD;    }&#xD;}&#xD;}</l></block><list></list></block></script></block-definition><block-definition s="my tracks" type="reporter" category="motion"><header></header><code></code><translations>zh_CN:我的轨迹&#xD;</translations><inputs></inputs><script><block s="doDeclareVariables"><list><l>tracks</l></list></block><block s="doSetVar"><l>tracks</l><block s="evaluate"><block s="reportJSFunction"><list></list><l>return this.tracks == undefined?new List([]):this.tracks;</l></block><list></list></block></block><block s="doIf"><block s="reportNot"><block s="reportListIsEmpty"><block var="tracks"/></block></block><script><block s="doSetVar"><l>tracks</l><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportIfElse"><block s="reportIsA"><l></l><l><option>list</option></l></block><block s="reportNewList"><list><block s="reportQuotient"><block s="reportRound"><block s="reportVariadicProduct"><list><block s="reportListItem"><l>1</l><l/></block><block s="reportPower"><l>10</l><l>10</l></block></list></block></block><block s="reportPower"><l>10</l><l>10</l></block></block><block s="reportQuotient"><block s="reportRound"><block s="reportVariadicProduct"><list><block s="reportListItem"><l>2</l><l/></block><block s="reportPower"><l>10</l><l>10</l></block></list></block></block><block s="reportPower"><l>10</l><l>10</l></block></block></list></block><l></l></block></autolambda><list></list></block><block var="tracks"/></block></block></script><list></list></block><block s="doReport"><block var="tracks"/></block></script></block-definition><block-definition s="reset tracking" type="command" category="motion"><header></header><code></code><translations>zh_CN:重置轨迹&#xD;</translations><inputs></inputs><script><block s="doRun"><block s="reportJSFunction"><list></list><l>if (this.tracked) {&#xD;    this.tracks.clear();&#xD;}</l></block><list></list></block></script></block-definition><block-definition s="points to lines %&apos;points&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%l"></input></inputs><script><block s="doDeclareVariables"><list><l>lines</l><l>lastpoint</l><l>firstpoint</l></list></block><block s="doWarp"><script><block s="doSetVar"><l>points</l><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportNewList"><list><block s="reportQuotient"><block s="reportRound"><block s="reportVariadicProduct"><list><block s="reportListItem"><l>1</l><l/></block><l>1000</l></list></block></block><l>1000</l></block><block s="reportQuotient"><block s="reportRound"><block s="reportVariadicProduct"><list><block s="reportListItem"><l>2</l><l/></block><l>1000</l></list></block></block><l>1000</l></block></list></block></autolambda><list></list></block><block var="points"/></block></block><block s="doIfElse"><block s="reportVariadicLessThan"><list><block s="reportListAttribute"><l><option>length</option></l><block var="points"/></block><l>2</l></list></block><script><block s="doReport"><block s="reportNewList"><list></list></block></block></script><script><block s="doSetVar"><l>lines</l><block s="reportNewList"><list></list></block></block><block s="doSetVar"><l>lastpoint</l><block s="reportListItem"><l>1</l><block var="points"/></block></block><block s="doSetVar"><l>firstpoint</l><block s="reportListItem"><l>1</l><block var="points"/></block></block><block s="doForEach"><l>项</l><block s="reportCDR"><block var="points"/></block><script><block s="doAddToList"><block s="reportNewList"><list><block var="lastpoint"/><block var="项"/></list></block><block var="lines"/></block><block s="doSetVar"><l>lastpoint</l><block var="项"/></block></script></block><block s="doIf"><block s="reportNot"><block s="reportVariadicEquals"><list><block var="lastpoint"/><block var="firstpoint"/></list></block></block><script><block s="doAddToList"><block s="reportNewList"><list><block var="lastpoint"/><block var="firstpoint"/></list></block><block var="lines"/></block></script><list></list></block></script></block><block s="doReport"><block var="lines"/></block></script></block></script></block-definition><block-definition s="has one crosspoint? line1 %&apos;line1&apos; line2 %&apos;line2&apos;" type="predicate" category="sensing"><header></header><code></code><translations>zh_CN:线段1 _ 和线段2 _ 有一个交点？&#xD;</translations><inputs><input type="%l"></input><input type="%l"></input></inputs><script><block s="doDeclareVariables"><list><l>angle1</l><l>angle2</l><l>point</l><l>direction</l></list></block><block s="doWarp"><script><block s="doSetVar"><l>point</l><block s="reportListItem"><l>1</l><block var="line1"/></block></block><block s="doSetVar"><l>angle1</l><custom-block s="calcAngle start %l end %l"><block var="point"/><block s="reportListItem"><l>1</l><block var="line2"/></block></custom-block></block><block s="doSetVar"><l>angle2</l><custom-block s="calcAngle start %l end %l"><block var="point"/><block s="reportListItem"><l>2</l><block var="line2"/></block></custom-block></block><block s="doSetVar"><l>direction</l><custom-block s="calcAngle start %l end %l"><block var="point"/><block s="reportListItem"><l>2</l><block var="line1"/></block></custom-block></block><block s="doIf"><block s="reportVariadicEquals"><list><block s="reportModulus"><block s="reportVariadicSum"><list><block var="angle1"/><l>360</l></list></block><l>360</l></block><block s="reportModulus"><block s="reportVariadicSum"><list><block var="angle2"/><l>360</l></list></block><l>360</l></block></list></block><script><block s="doReport"><block s="reportBoolean"><l><bool>false</bool></l></block></block></script><list></list></block><block s="doIfElse"><block s="reportVariadicGreaterThan"><list><block var="angle1"/><block var="angle2"/></list></block><script><block s="doIf"><block s="reportVariadicLessThan"><list><block s="reportDifference"><block var="angle1"/><block var="angle2"/></block><l>180</l></list></block><script><block s="doIf"><block s="reportVariadicOr"><list><block s="reportVariadicGreaterThan"><list><block var="direction"/><block var="angle1"/></list></block><block s="reportVariadicLessThan"><list><block var="direction"/><block var="angle2"/></list></block></list></block><script><block s="doReport"><block s="reportBoolean"><l><bool>false</bool></l></block></block></script><list></list></block></script><list></list></block><block s="doIf"><block s="reportVariadicGreaterThan"><list><block s="reportDifference"><block var="angle1"/><block var="angle2"/></block><l>180</l></list></block><script><block s="doIf"><block s="reportVariadicAnd"><list><block s="reportVariadicLessThan"><list><block var="direction"/><block var="angle1"/></list></block><block s="reportVariadicGreaterThan"><list><block var="direction"/><block var="angle2"/></list></block></list></block><script><block s="doReport"><block s="reportBoolean"><l><bool>false</bool></l></block></block></script><list></list></block></script><list></list></block></script><script><block s="doIf"><block s="reportVariadicLessThan"><list><block s="reportDifference"><block var="angle2"/><block var="angle1"/></block><l>180</l></list></block><script><block s="doIf"><block s="reportVariadicOr"><list><block s="reportVariadicGreaterThan"><list><block var="direction"/><block var="angle2"/></list></block><block s="reportVariadicLessThan"><list><block var="direction"/><block var="angle1"/></list></block></list></block><script><block s="doReport"><block s="reportBoolean"><l><bool>false</bool></l></block></block></script><list></list></block></script><list></list></block><block s="doIf"><block s="reportVariadicGreaterThan"><list><block s="reportDifference"><block var="angle2"/><block var="angle1"/></block><l>180</l></list></block><script><block s="doIf"><block s="reportVariadicAnd"><list><block s="reportVariadicLessThan"><list><block var="direction"/><block var="angle2"/></list></block><block s="reportVariadicGreaterThan"><list><block var="direction"/><block var="angle1"/></list></block></list></block><script><block s="doReport"><block s="reportBoolean"><l><bool>false</bool></l></block></block></script><list></list></block></script><list></list></block></script></block><block s="doReport"><block s="reportBoolean"><l><bool>true</bool></l></block></block></script></block></script></block-definition><block-definition s="combine lines %&apos;lines&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%l"></input></inputs><script><block s="doDeclareVariables"><list><l>result</l><l>lastline</l><l>tmplines</l></list></block><block s="doWarp"><script><block s="doIf"><block s="reportVariadicEquals"><list><block s="reportListAttribute"><l><option>length</option></l><block var="lines"/></block><l>1</l></list></block><script><block s="doReport"><block var="lines"/></block></script><list></list></block><block s="doSetVar"><l>result</l><block s="reportNewList"><list></list></block></block><block s="doSetVar"><l>lastline</l><block s="reportListItem"><l>1</l><block var="lines"/></block></block><block s="doSetVar"><l>tmplines</l><block s="reportCDR"><block var="lines"/></block></block><block s="doForEach"><l>项</l><block var="tmplines"/><script><block s="doIfElse"><block s="reportVariadicAnd"><list><block s="reportVariadicEquals"><list><block s="reportListItem"><l>2</l><block var="lastline"/></block><block s="reportListItem"><l>1</l><block var="项"/></block></list></block><custom-block s="line %l contains point %l"><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block var="lastline"/></block><block s="reportListItem"><l>2</l><block var="项"/></block></list></block><block s="reportListItem"><l>1</l><block var="项"/></block></custom-block></list></block><script><block s="doSetVar"><l>lastline</l><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block var="lastline"/></block><block s="reportListItem"><l>2</l><block var="项"/></block></list></block></block></script><script><block s="doAddToList"><block var="lastline"/><block var="result"/></block><block s="doSetVar"><l>lastline</l><block var="项"/></block></script></block></script></block><block s="doIfElse"><block s="reportVariadicAnd"><list><block s="reportVariadicEquals"><list><block s="reportListItem"><l>2</l><block var="lastline"/></block><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block var="result"/></block></block></list></block><custom-block s="line %l contains point %l"><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block var="lastline"/></block><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="result"/></block></block></list></block><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block var="result"/></block></block></custom-block></list></block><script><block s="doReplaceInList"><l>1</l><block var="result"/><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block var="lastline"/></block><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="result"/></block></block></list></block></block></script><script><block s="doAddToList"><block var="lastline"/><block var="result"/></block></script></block></script></block><block s="doReport"><block var="result"/></block></script></block-definition><block-definition s="crossPoint of line1 %&apos;line1&apos; and line2 %&apos;line2&apos;" type="reporter" category="sensing"><header></header><code></code><translations>zh_CN:线段1 _ 和线段2 _ 的交点&#xD;</translations><inputs><input type="%l"></input><input type="%l"></input></inputs><script><block s="doDeclareVariables"><list><l>angle1</l><l>angle2</l><l>includedAngle1</l><l>edgeLength</l><l>includedAngle2</l><l>angle3</l><l>angle4</l><l>point</l><l>vDistance</l><l>includeAngle3</l><l>distance</l><l>hypotenuse</l><l>crossPoint</l></list></block><block s="doWarp"><script><block s="doIf"><block s="reportNot"><custom-block s="hasCrossPoint? line1 %l line2 %l"><block var="line1"/><block var="line2"/></custom-block></block><script><block s="doReport"><block s="reportNewList"><list></list></block></block></script><list></list></block><block s="doSetVar"><l>point</l><block s="reportListItem"><l>1</l><block var="line1"/></block></block><block s="doSetVar"><l>angle1</l><custom-block s="calcAngle start %l end %l"><block s="reportListItem"><l>1</l><block var="line2"/></block><block s="reportListItem"><l>2</l><block var="line2"/></block></custom-block></block><block s="doSetVar"><l>angle2</l><custom-block s="calcAngle start %l end %l"><block s="reportListItem"><l>1</l><block var="line2"/></block><block var="point"/></custom-block></block><block s="doSetVar"><l>angle3</l><custom-block s="calcAngle start %l end %l"><block var="point"/><block s="reportListItem"><l>1</l><block var="line2"/></block></custom-block></block><block s="doSetVar"><l>angle4</l><custom-block s="calcAngle start %l end %l"><block var="point"/><block s="reportListItem"><l>2</l><block var="line1"/></block></custom-block></block><block s="doSetVar"><l>includedAngle1</l><block s="reportMonadic"><l><option>abs</option></l><block s="reportDifference"><block var="angle2"/><block var="angle1"/></block></block></block><block s="doSetVar"><l>includedAngle2</l><block s="reportMonadic"><l><option>abs</option></l><block s="reportDifference"><block var="angle3"/><block var="angle4"/></block></block></block><block s="doIf"><block s="reportVariadicGreaterThan"><list><block var="includedAngle1"/><l>180</l></list></block><script><block s="doSetVar"><l>includedAngle1</l><block s="reportDifference"><l>360</l><block var="includedAngle1"/></block></block></script><list></list></block><block s="doIf"><block s="reportVariadicGreaterThan"><list><block var="includedAngle2"/><l>180</l></list></block><script><block s="doSetVar"><l>includedAngle2</l><block s="reportDifference"><l>360</l><block var="includedAngle2"/></block></block></script><list></list></block><block s="doSetVar"><l>includeAngle3</l><block s="reportDifference"><l>180</l><block s="reportVariadicSum"><list><block var="includedAngle1"/><block var="includedAngle2"/></list></block></block></block><block s="doSetVar"><l>edgeLength</l><block s="reportMonadic"><l><option>sqrt</option></l><block s="reportVariadicSum"><list><block s="reportVariadicProduct"><list><block s="reportDifference"><block s="reportListItem"><l>2</l><block var="point"/></block><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="line2"/></block></block></block><block s="reportDifference"><block s="reportListItem"><l>2</l><block var="point"/></block><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="line2"/></block></block></block></list></block><block s="reportVariadicProduct"><list><block s="reportDifference"><block s="reportListItem"><l>1</l><block var="point"/></block><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block var="line2"/></block></block></block><block s="reportDifference"><block s="reportListItem"><l>1</l><block var="point"/></block><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block var="line2"/></block></block></block></list></block></list></block></block></block><block s="doSetVar"><l>vDistance</l><block s="reportVariadicProduct"><list><block var="edgeLength"/><block s="reportMonadic"><l><option>sin</option></l><block var="includedAngle1"/></block></list></block></block><block s="doSetVar"><l>distance</l><block s="reportMonadic"><l><option>abs</option></l><block s="reportQuotient"><block var="vDistance"/><block s="reportMonadic"><l><option>cos</option></l><block s="reportDifference"><l>90</l><block var="includeAngle3"/></block></block></block></block></block><block s="doSetVar"><l>hypotenuse</l><block s="reportMonadic"><l><option>sqrt</option></l><block s="reportDifference"><block s="reportVariadicSum"><list><block s="reportVariadicProduct"><list><block var="distance"/><block var="distance"/></list></block><block s="reportVariadicProduct"><list><block var="edgeLength"/><block var="edgeLength"/></list></block></list></block><block s="reportVariadicProduct"><list><l>2</l><block s="reportVariadicProduct"><list><block s="reportVariadicProduct"><list><block var="edgeLength"/><block var="distance"/></list></block><block s="reportMonadic"><l><option>cos</option></l><block var="includedAngle2"/></block></list></block></list></block></block></block></block><block s="doSetVar"><l>crossPoint</l><block s="reportNewList"><list><block s="reportVariadicSum"><list><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block var="line2"/></block></block><block s="reportVariadicProduct"><list><block var="hypotenuse"/><block s="reportMonadic"><l><option>cos</option></l><block var="angle1"/></block></list></block></list></block><block s="reportVariadicSum"><list><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="line2"/></block></block><block s="reportVariadicProduct"><list><block var="hypotenuse"/><block s="reportMonadic"><l><option>sin</option></l><block var="angle1"/></block></list></block></list></block></list></block></block><block s="doReport"><block var="crossPoint"/></block></script></block></script></block-definition><block-definition s="direction line %&apos;line&apos;" type="reporter" category="sensing"><header></header><code></code><translations>zh_CN:线段 _ 的方向&#xD;</translations><inputs><input type="%l"></input></inputs><script><block s="doReport"><custom-block s="calcAngle start %l end %l"><block s="reportListItem"><l>1</l><block var="line"/></block><block s="reportListItem"><l>2</l><block var="line"/></block></custom-block></block></script></block-definition><block-definition s="$flash remove duplicates from %&apos;data&apos;" type="reporter" category="lists"><comment x="0" y="0" w="209" collapsed="false">Reports a new list whose items are the same as in the input list, except that if two or more equal items appear in the input list, only the first one is kept in the result.</comment><header></header><code></code><translations>ca:elimina els duplicats de _&#xD;</translations><inputs><input type="%l"></input></inputs><script><block s="doReport"><block s="reportAtomicKeep"><block s="reifyPredicate"><autolambda><block s="reportVariadicEquals"><list><block s="reportListIndex"><block var="value"/><block var="list"/></block><block var="index"/></list></block></autolambda><list><l>value</l><l>index</l><l>list</l></list></block><block var="data"/></block></block></script><scripts><script x="14.000000000000002" y="164.2222222222222"><block s="doWarp"><script><block s="doIf"><block s="reportVariadicEquals"><list><block var="data"/><block s="reportNewList"><list></list></block></list></block><script><block s="doReport"><block s="reportNewList"><list></list></block></block></script><list></list></block><block s="doIfElse"><block s="reportListContainsItem"><block s="reportCDR"><block var="data"/></block><block s="reportListItem"><l>1</l><block var="data"/></block></block><script><block s="doReport"><custom-block s="$flash remove duplicates from %l"><block s="reportCDR"><block var="data"/></block></custom-block></block></script><script><block s="doReport"><block s="reportCONS"><block s="reportListItem"><l>1</l><block var="data"/></block><custom-block s="$flash remove duplicates from %l"><block s="reportCDR"><block var="data"/></block></custom-block></block></block></script></block></script></block></script></scripts></block-definition><block-definition s="line %&apos;line&apos; contains point %&apos;point&apos;" type="predicate" category="sensing"><header></header><code></code><translations>zh_CN:线段 _ 包含 点 _&#xD;</translations><inputs><input type="%l"></input><input type="%l"></input></inputs><script><block s="doReport"><block s="reportVariadicEquals"><list><block s="reportRound"><block s="reportVariadicProduct"><list><custom-block s="lineLength %l"><block var="line"/></custom-block><l>100</l></list></block></block><block s="reportRound"><block s="reportVariadicProduct"><list><block s="reportVariadicSum"><list><custom-block s="lineLength %l"><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block var="line"/></block><block var="point"/></list></block></custom-block><custom-block s="lineLength %l"><block s="reportNewList"><list><block var="point"/><block s="reportListItem"><l>2</l><block var="line"/></block></list></block></custom-block></list></block><l>100</l></list></block></block></list></block></block></script></block-definition><block-definition s="line %&apos;line1&apos; contains line %&apos;line2&apos;" type="predicate" category="sensing"><header></header><code></code><translations>zh_CN:线段 _ 包含 线段 _&#xD;</translations><inputs><input type="%l"></input><input type="%l"></input></inputs><script><block s="doReport"><block s="reportVariadicAnd"><list><custom-block s="line %l contains point %l"><block var="line1"/><block s="reportListItem"><l>1</l><block var="line2"/></block></custom-block><custom-block s="line %l contains point %l"><block var="line1"/><block s="reportListItem"><l>2</l><block var="line2"/></block></custom-block></list></block></block></script></block-definition><block-definition s="maxmin xy of lines %&apos;lines&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%l"></input></inputs><script><block s="doDeclareVariables"><list><l>xy</l><l>tmplist</l><l>points</l></list></block><block s="doWarp"><script><block s="doSetVar"><l>points</l><block s="reportNewList"><list></list></block></block><block s="doSetVar"><l>xy</l><block s="reportNewList"><list></list></block></block><block s="doForEach"><l>项</l><block var="lines"/><script><block s="doSetVar"><l>points</l><block s="reportConcatenatedLists"><list><block var="points"/><block s="reportListItem"><l>2</l><block var="项"/></block></list></block></block></script></block><block s="doSetVar"><l>tmplist</l><custom-block s="$flash sort %l ordering with %predRing"><block var="points"/><block s="reifyPredicate"><autolambda><block s="reportVariadicLessThan"><list><block s="reportListItem"><l>1</l><l/></block><block s="reportListItem"><l>1</l><l/></block></list></block></autolambda><list></list></block></custom-block></block><block s="doAddToList"><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block var="tmplist"/></block></block><block var="xy"/></block><block s="doAddToList"><block s="reportListItem"><l>1</l><block s="reportListItem"><l><option>last</option></l><block var="tmplist"/></block></block><block var="xy"/></block><block s="doSetVar"><l>tmplist</l><custom-block s="$flash sort %l ordering with %predRing"><block var="points"/><block s="reifyPredicate"><autolambda><block s="reportVariadicLessThan"><list><block s="reportListItem"><l>2</l><l/></block><block s="reportListItem"><l>2</l><l/></block></list></block></autolambda><list></list></block></custom-block></block><block s="doAddToList"><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="tmplist"/></block></block><block var="xy"/></block><block s="doAddToList"><block s="reportListItem"><l>2</l><block s="reportListItem"><l><option>last</option></l><block var="tmplist"/></block></block><block var="xy"/></block></script></block><block s="doReport"><block var="xy"/></block></script></block-definition><block-definition s="cutting lines, frame lines %&apos;lines&apos; direction %&apos;direction&apos; dencity %&apos;dencity&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%l"></input><input type="%n">0</input><input type="%n">3</input></inputs><script><block s="doDeclareVariables"><list><l>bound</l><l>edgeLines</l><l>cuttingLines</l><l>y1</l><l>y2</l><l>x</l></list></block><block s="doWarp"><script><block s="doSetVar"><l>bound</l><custom-block s="maxmin xy of lines %l"><block var="lines"/></custom-block></block><block s="doSetVar"><l>edgeLines</l><custom-block s="edge cutting lines, lines %l direction %s"><block var="lines"/><block var="direction"/></custom-block></block><block s="doSetVar"><l>cuttingLines</l><block s="reportNewList"><list></list></block></block><block s="doIfElse"><block s="reportVariadicEquals"><list><block var="direction"/><l>90</l></list></block><script><block s="doSetVar"><l>x</l><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block var="edgeLines"/></block></block></block></block><block s="doChangeVar"><l>x</l><block var="dencity"/></block><block s="doUntil"><block s="reportVariadicGreaterThan"><list><block var="x"/><block s="reportDifference"><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block s="reportListItem"><l><option>last</option></l><block var="edgeLines"/></block></block></block><l>1</l></block></list></block><script><block s="doAddToList"><block s="reportNewList"><list><block s="reportNewList"><list><block var="x"/><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block var="edgeLines"/></block></block></block></list></block><block s="reportNewList"><list><block var="x"/><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="edgeLines"/></block></block></block></list></block></list></block><block var="cuttingLines"/></block><block s="doChangeVar"><l>x</l><block var="dencity"/></block></script></block></script><script><block s="doSetVar"><l>y1</l><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block var="edgeLines"/></block></block></block></block><block s="doSetVar"><l>y2</l><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="edgeLines"/></block></block></block></block><block s="doChangeVar"><l>y1</l><block s="reportRound"><block s="reportQuotient"><block var="dencity"/><block s="reportMonadic"><l><option>cos</option></l><block var="direction"/></block></block></block></block><block s="doChangeVar"><l>y2</l><block s="reportRound"><block s="reportQuotient"><block var="dencity"/><block s="reportMonadic"><l><option>cos</option></l><block var="direction"/></block></block></block></block><block s="doUntil"><block s="reportVariadicGreaterThan"><list><block var="y1"/><block s="reportDifference"><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block s="reportListItem"><l><option>last</option></l><block var="edgeLines"/></block></block></block><l>1</l></block></list></block><script><block s="doAddToList"><block s="reportNewList"><list><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block var="edgeLines"/></block></block></block><block var="y1"/></list></block><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="edgeLines"/></block></block></block><block var="y2"/></list></block></list></block><block var="cuttingLines"/></block><block s="doChangeVar"><l>y1</l><block s="reportRound"><block s="reportQuotient"><block var="dencity"/><block s="reportMonadic"><l><option>cos</option></l><block var="direction"/></block></block></block></block><block s="doChangeVar"><l>y2</l><block s="reportRound"><block s="reportQuotient"><block var="dencity"/><block s="reportMonadic"><l><option>cos</option></l><block var="direction"/></block></block></block></block></script></block></script></block></script></block><block s="doReport"><block var="cuttingLines"/></block></script></block-definition><block-definition s="edge cutting lines, lines %&apos;lines&apos; direction %&apos;direction&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%l"></input><input type="%s">0</input></inputs><script><block s="doDeclareVariables"><list><l>xy</l><l>points</l><l>tmplist</l><l>minX</l><l>maxX</l><l>minY</l><l>maxY</l></list></block><block s="doWarp"><script><block s="doSetVar"><l>xy</l><custom-block s="maxmin xy of lines %l"><block var="lines"/></custom-block></block><block s="doSetVar"><l>minX</l><block s="reportListItem"><l>1</l><block var="xy"/></block></block><block s="doSetVar"><l>maxX</l><block s="reportListItem"><l>2</l><block var="xy"/></block></block><block s="doSetVar"><l>minY</l><block s="reportListItem"><l>3</l><block var="xy"/></block></block><block s="doSetVar"><l>maxY</l><block s="reportListItem"><l>4</l><block var="xy"/></block></block><block s="doIfElse"><block s="reportVariadicEquals"><list><block var="direction"/><l>90</l></list></block><script><block s="doReport"><block s="reportNewList"><list><block s="reportNewList"><list><block s="reportNewList"><list><block var="minX"/><block var="minY"/></list></block><block s="reportNewList"><list><block var="minX"/><block var="maxY"/></list></block></list></block><block s="reportNewList"><list><block s="reportNewList"><list><block var="maxX"/><block var="minY"/></list></block><block s="reportNewList"><list><block var="maxX"/><block var="maxY"/></list></block></list></block></list></block></block></script><script><block s="doSetVar"><l>points</l><block s="reportNewList"><list></list></block></block><block s="doForEach"><l>项</l><block var="lines"/><script><block s="doSetVar"><l>points</l><custom-block s="$flash remove duplicates from %l"><block s="reportConcatenatedLists"><list><block var="points"/><block s="reportListItem"><l>2</l><block var="项"/></block></list></block></custom-block></block></script></block><block s="doSetVar"><l>tmplist</l><custom-block s="$flash sort %l ordering with %predRing"><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportNewList"><list><block s="reportVariadicSum"><list><block s="reportVariadicProduct"><list><block s="reportDifference"><block var="minX"/><block s="reportListItem"><l>1</l><l/></block></block><block s="reportMonadic"><l><option>tan</option></l><block var="direction"/></block></list></block><block s="reportListItem"><l>2</l><l/></block></list></block><block s="reportVariadicSum"><list><block s="reportVariadicProduct"><list><block s="reportDifference"><block var="maxX"/><block s="reportListItem"><l>1</l><l/></block></block><block s="reportMonadic"><l><option>tan</option></l><block var="direction"/></block></list></block><block s="reportListItem"><l>2</l><l/></block></list></block></list></block></autolambda><list></list></block><block var="points"/></block><block s="reifyPredicate"><autolambda><block s="reportVariadicLessThan"><list><block s="reportListItem"><l>1</l><l/></block><block s="reportListItem"><l>1</l><l/></block></list></block></autolambda><list></list></block></custom-block></block></script></block></script></block><block s="doReport"><block s="reportNewList"><list><block s="reportNewList"><list><block s="reportNewList"><list><block var="minX"/><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block var="tmplist"/></block></block></list></block><block s="reportNewList"><list><block var="maxX"/><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="tmplist"/></block></block></list></block></list></block><block s="reportNewList"><list><block s="reportNewList"><list><block var="minX"/><block s="reportListItem"><l>1</l><block s="reportListItem"><l><option>last</option></l><block var="tmplist"/></block></block></list></block><block s="reportNewList"><list><block var="maxX"/><block s="reportListItem"><l>2</l><block s="reportListItem"><l><option>last</option></l><block var="tmplist"/></block></block></list></block></list></block></list></block></block></script></block-definition><block-definition s="lines to cross once line %&apos;line&apos; lines %&apos;lines&apos;" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%l"></input><input type="%l"></input></inputs><script><block s="doDeclareVariables"><list><l>result</l></list></block><block s="doWarp"><script><block s="doSetVar"><l>result</l><block s="reportNewList"><list></list></block></block><block s="doForEach"><l>项</l><block var="lines"/><script><block s="doIf"><custom-block s="has one crosspoint? line1 %l line2 %l"><block var="line"/><block s="reportListItem"><l>2</l><block var="项"/></block></custom-block><script><block s="doAddToList"><block var="项"/><block var="result"/></block></script><list></list></block></script></block><block s="doReport"><block var="result"/></block></script></block></script></block-definition><block-definition s="close tracking" type="command" category="motion"><header></header><code></code><translations>zh_CN:取消跟踪&#xD;</translations><inputs></inputs><script><block s="doRun"><block s="reportJSFunction"><list></list><l>if (this.trackingOpened) {&#xD;    this.trackingOpened = false;&#xD;    this.tracked = false;&#xD;    this.setPosition = this.backupSetPosition;&#xD;    this.down = function() {&#xD;        this.isDown = true;&#xD;    }&#xD;}</l></block><list></list></block></script></block-definition><block-definition s="number the lines group %&apos;groupid&apos; lines %&apos;lines&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%n">1</input><input type="%l"></input></inputs><script><block s="doWarp"><script><block s="doReport"><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportNewList"><list><block s="reportVariadicSum"><list><block s="reportVariadicProduct"><list><block var="groupid"/><l>10000</l></list></block><block s="reportListIndex"><l></l><block var="lines"/></block></list></block><l></l><custom-block s="lineLength %l"><l/></custom-block></list></block></autolambda><list></list></block><block var="lines"/></block></block></script></block></script></block-definition><block-definition s="fill x: %&apos;x&apos; y: %&apos;y&apos; direction %&apos;direction&apos; dencity %&apos;dencity&apos;" type="command" category="motion"><header></header><code></code><translations>zh_CN:填充 x: _ y: _ 方向 _ 间距 _&#xD;</translations><inputs><input type="%n">0</input><input type="%n">0</input><input type="%n">0</input><input type="%n">3</input></inputs><script><block s="doDeclareVariables"><list><l>tracks</l></list></block><block s="doSetVar"><l>tracks</l><custom-block s="split tracks %l"><custom-block s="my tracks"></custom-block></custom-block></block><block s="doIf"><block s="reportNot"><block s="reportListIsEmpty"><block var="tracks"/></block></block><script><custom-block s="fill the area enclosed by points %l direction %n dencity %n"><custom-block s="smallestCloseRegions %l %l"><block var="tracks"/><block s="reportNewList"><list><block var="x"/><block var="y"/></list></block></custom-block><custom-block s="translate angle %n"><block var="direction"/></custom-block><block var="dencity"/></custom-block></script><list></list></block></script></block-definition><block-definition s="Min %&apos;number1&apos; %&apos;number2&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%n">1</input><input type="%n">2</input></inputs><script><block s="doReport"><block s="reportIfElse"><block s="reportVariadicLessThan"><list><block var="number1"/><block var="number2"/></list></block><block var="number1"/><block var="number2"/></block></block></script></block-definition><block-definition s="seek next filledline point %&apos;point&apos; filled lines %&apos;filledLines&apos; lines %&apos;lines&apos; (2)" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%l"></input><input type="%l"></input><input type="%l"></input></inputs><script><block s="doDeclareVariables"><list><l>curPoint</l><l>orderedLines</l><l>result</l><l>relatedFilledLines</l></list></block><block s="doWarp"><script><block s="doIfElse"><block s="reportListIsEmpty"><block s="reportListItem"><l>2</l><block var="point"/></block></block><script><block s="doSetVar"><l>curPoint</l><block s="reportListItem"><l>1</l><block var="point"/></block></block><block s="doSetVar"><l>orderedLines</l><custom-block s="$flash sort %l ordering with %predRing"><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportNewList"><list><custom-block s="Min %n %n"><custom-block s="lineLength %l"><block s="reportNewList"><list><block var="curPoint"/><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><l/></block></block></list></block></custom-block><custom-block s="lineLength %l"><block s="reportNewList"><list><block var="curPoint"/><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><l/></block></block></list></block></custom-block></custom-block><block s="reportListIndex"><l></l><block var="filledLines"/></block><l></l></list></block></autolambda><list></list></block><block var="filledLines"/></block><block s="reifyPredicate"><autolambda><block s="reportVariadicLessThan"><list><block s="reportListItem"><l>1</l><l/></block><block s="reportListItem"><l>1</l><l/></block></list></block></autolambda><list></list></block></custom-block></block><block s="doSetVar"><l>result</l><block s="reportListItem"><l>3</l><block s="reportListItem"><l>1</l><block var="orderedLines"/></block></block></block><block s="doDeleteFromList"><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="orderedLines"/></block></block><block var="filledLines"/></block><block s="doIf"><block s="reportVariadicLessThan"><list><custom-block s="lineLength %l"><block s="reportNewList"><list><block var="curPoint"/><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="result"/></block></block></list></block></custom-block><custom-block s="lineLength %l"><block s="reportNewList"><list><block var="curPoint"/><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block var="result"/></block></block></list></block></custom-block></list></block><script><block s="doSetVar"><l>result</l><block s="reportNewList"><list><block s="reportNewList"><list><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="result"/></block></block><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block var="result"/></block></block></list></block><block s="reportNewList"><list><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block var="result"/></block></block><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block var="result"/></block></block></list></block></list></block></block></script><list></list></block><block s="doReport"><block var="result"/></block></script><script><block s="doSetVar"><l>orderedLines</l><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportNewList"><list><block s="reportListIndex"><l></l><block var="filledLines"/></block><l></l></list></block></autolambda><list></list></block><block var="filledLines"/></block></block><block s="doSetVar"><l>relatedFilledLines</l><block s="reportKeep"><block s="reifyPredicate"><autolambda><block s="reportVariadicOr"><list><block s="reportVariadicEquals"><list><block s="reportRound"><block s="reportQuotient"><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><l/></block></block></block></block><l>10000</l></block></block><block s="reportRound"><block s="reportQuotient"><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block var="point"/></block></block><l>10000</l></block></block></list></block><block s="reportVariadicEquals"><list><block s="reportRound"><block s="reportQuotient"><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><l/></block></block></block></block><l>10000</l></block></block><block s="reportRound"><block s="reportQuotient"><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block var="point"/></block></block><l>10000</l></block></block></list></block></list></block></autolambda><list></list></block><block var="orderedLines"/></block></block><block s="doIfElse"><block s="reportListIsEmpty"><block var="relatedFilledLines"/></block><script><block s="doReport"><block s="reportNewList"><list></list></block></block></script><script><block s="doSetVar"><l>curPoint</l><block s="reportListItem"><l>1</l><block var="point"/></block></block><block s="doSetVar"><l>orderedLines</l><custom-block s="$flash sort %l ordering with %predRing"><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportNewList"><list><custom-block s="Min %n %n"><custom-block s="route distance from point %l to point %l lines %l"><block var="point"/><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><l/></block></block></block><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><l/></block></block></block></list></block><block var="lines"/></custom-block><custom-block s="route distance from point %l to point %l lines %l"><block var="point"/><block s="reportNewList"><list><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><l/></block></block></block><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><l/></block></block></block></list></block><block var="lines"/></custom-block></custom-block><block s="reportListItem"><l>1</l><l/></block><block s="reportListItem"><l>2</l><l/></block></list></block></autolambda><list></list></block><block var="relatedFilledLines"/></block><block s="reifyPredicate"><autolambda><block s="reportVariadicLessThan"><list><block s="reportListItem"><l>1</l><l/></block><block s="reportListItem"><l>1</l><l/></block></list></block></autolambda><list></list></block></custom-block></block><block s="doSetVar"><l>orderedLines</l><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportNewList"><list><block s="reportListItem"><l>2</l><l/></block><block s="reportListItem"><l>3</l><l/></block></list></block></autolambda><list></list></block><block s="reportKeep"><block s="reifyPredicate"><autolambda><block s="reportVariadicEquals"><list><block s="reportListItem"><l>1</l><l/></block><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block var="orderedLines"/></block></block></list></block></autolambda><list></list></block><block var="orderedLines"/></block></block></block><block s="doSetVar"><l>orderedLines</l><custom-block s="$flash sort %l ordering with %predRing"><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportNewList"><list><custom-block s="Min %n %n"><custom-block s="length of route from point %l to point %l lines %l"><block var="point"/><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><l/></block></block></block><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><l/></block></block></block></list></block><block var="lines"/></custom-block><custom-block s="length of route from point %l to point %l lines %l"><block var="point"/><block s="reportNewList"><list><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><l/></block></block></block><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><l/></block></block></block></list></block><block var="lines"/></custom-block></custom-block><block s="reportListItem"><l>1</l><l/></block><block s="reportListItem"><l>2</l><l/></block></list></block></autolambda><list></list></block><block var="orderedLines"/></block><block s="reifyPredicate"><autolambda><block s="reportVariadicLessThan"><list><block s="reportListItem"><l>1</l><l/></block><block s="reportListItem"><l>1</l><l/></block></list></block></autolambda><list></list></block></custom-block></block><block s="doSetVar"><l>result</l><block s="reportListItem"><l>3</l><block s="reportListItem"><l>1</l><block var="orderedLines"/></block></block></block><block s="doDeleteFromList"><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="orderedLines"/></block></block><block var="filledLines"/></block></script></block><block s="doDeclareVariables"><list><l>line1Section</l><l>line2Section</l></list></block><block s="doSetVar"><l>line1Section</l><block s="reportRound"><block s="reportQuotient"><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block var="result"/></block></block></block><l>10000</l></block></block></block><block s="doSetVar"><l>line2Section</l><block s="reportRound"><block s="reportQuotient"><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block var="result"/></block></block></block><l>10000</l></block></block></block><block s="doIfElse"><block s="reportVariadicEquals"><list><block var="line1Section"/><block var="line2Section"/></list></block><script><block s="doIf"><block s="reportVariadicLessThan"><list><custom-block s="length of route from point %l to point %l lines %l"><block var="point"/><block s="reportNewList"><list><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="result"/></block></block><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block var="result"/></block></block></list></block><block var="lines"/></custom-block><custom-block s="length of route from point %l to point %l lines %l"><block var="point"/><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block var="result"/></block></block><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block var="result"/></block></block></list></block><block var="lines"/></custom-block></list></block><script><block s="doSetVar"><l>result</l><block s="reportNewList"><list><block s="reportNewList"><list><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="result"/></block></block><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block var="result"/></block></block></list></block><block s="reportNewList"><list><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block var="result"/></block></block><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block var="result"/></block></block></list></block></list></block></block></script><list></list></block></script><script><block s="doIf"><block s="reportVariadicNotEquals"><list><block var="line1Section"/><block s="reportRound"><block s="reportQuotient"><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block var="point"/></block></block><l>10000</l></block></block></list></block><script><block s="doSetVar"><l>result</l><block s="reportNewList"><list><block s="reportNewList"><list><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="result"/></block></block><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block var="result"/></block></block></list></block><block s="reportNewList"><list><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block var="result"/></block></block><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block var="result"/></block></block></list></block></list></block></block></script><list></list></block></script></block><block s="doReport"><block var="result"/></block></script></block></script></block></script></block-definition><block-definition s="intercepted lines, line %&apos;line&apos; lines %&apos;lines&apos;" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%l"></input><input type="%l"></input></inputs><script><block s="doDeclareVariables"><list><l>crossedlines</l><l>crossedpoints</l><l>interceptedlines</l><l>realpoints</l><l>lastpoint</l></list></block><block s="doWarp"><script><block s="doSetVar"><l>crossedlines</l><custom-block s="lines to cross once line %l lines %l"><block var="line"/><block var="lines"/></custom-block></block><block s="doIfElse"><block s="reportVariadicEquals"><list><custom-block s="direction line %l"><block var="line"/></custom-block><l>90</l></list></block><script><block s="doSetVar"><l>crossedpoints</l><custom-block s="$flash sort %l ordering with %predRing"><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportNewList"><list><custom-block s="crossPoint of line1 %l and line2 %l"><block var="line"/><block s="reportListItem"><l>2</l><l/></block></custom-block><l></l></list></block></autolambda><list></list></block><block var="crossedlines"/></block><block s="reifyPredicate"><autolambda><block s="reportVariadicLessThan"><list><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><l/></block></block><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><l/></block></block></list></block></autolambda><list></list></block></custom-block></block></script><script><block s="doSetVar"><l>crossedpoints</l><custom-block s="$flash sort %l ordering with %predRing"><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportNewList"><list><custom-block s="crossPoint of line1 %l and line2 %l"><block var="line"/><block s="reportListItem"><l>2</l><l/></block></custom-block><l></l></list></block></autolambda><list></list></block><block var="crossedlines"/></block><block s="reifyPredicate"><autolambda><block s="reportVariadicLessThan"><list><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><l/></block></block><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><l/></block></block></list></block></autolambda><list></list></block></custom-block></block></script></block><block s="doSetVar"><l>realpoints</l><block s="reportNewList"><list></list></block></block><block s="doSetVar"><l>lastpoint</l><block s="reportListItem"><l>1</l><block var="crossedpoints"/></block></block><block s="doForEach"><l>项</l><block s="reportCDR"><block var="crossedpoints"/></block><script><block s="doIfElse"><block s="reportVariadicEquals"><list><block s="reportListAttribute"><l><option>length</option></l><block var="lastpoint"/></block><l>0</l></list></block><script><block s="doSetVar"><l>lastpoint</l><block var="项"/></block></script><script><block s="doIfElse"><block s="reportVariadicEquals"><list><block s="reportListItem"><l>1</l><block var="lastpoint"/></block><block s="reportListItem"><l>1</l><block var="项"/></block></list></block><script><block s="doIfElse"><block s="reportVariadicLessThan"><list><block s="reportVariadicProduct"><list><block s="reportDifference"><block s="reportModulus"><block s="reportDifference"><custom-block s="direction line %l"><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block var="lastpoint"/></block><custom-block s="far end , point %l line %l"><block s="reportListItem"><l>1</l><block var="lastpoint"/></block><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block var="lastpoint"/></block></block></custom-block></list></block></custom-block><custom-block s="direction line %l"><block var="line"/></custom-block></block><l>360</l></block><l>180</l></block><block s="reportDifference"><block s="reportModulus"><block s="reportDifference"><custom-block s="direction line %l"><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block var="项"/></block><custom-block s="far end , point %l line %l"><block s="reportListItem"><l>1</l><block var="项"/></block><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block var="项"/></block></block></custom-block></list></block></custom-block><custom-block s="direction line %l"><block var="line"/></custom-block></block><l>360</l></block><l>180</l></block></list></block><l>0</l></list></block><script><block s="doAddToList"><block var="lastpoint"/><block var="realpoints"/></block></script><script><block s="doAddToList"><block var="lastpoint"/><block var="realpoints"/></block><block s="doAddToList"><block var="项"/><block var="realpoints"/></block></script></block><block s="doSetVar"><l>lastpoint</l><block s="reportNewList"><list></list></block></block></script><script><block s="doIfElse"><custom-block s="lines %l contain line %l"><block var="lines"/><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block var="lastpoint"/></block><block s="reportListItem"><l>1</l><block var="项"/></block></list></block></custom-block><script><block s="doIfElse"><block s="reportVariadicLessThan"><list><block s="reportVariadicProduct"><list><block s="reportDifference"><block s="reportModulus"><block s="reportDifference"><custom-block s="direction line %l"><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block var="lastpoint"/></block><custom-block s="far end , point %l line %l"><block s="reportListItem"><l>1</l><block var="lastpoint"/></block><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block var="lastpoint"/></block></block></custom-block></list></block></custom-block><custom-block s="direction line %l"><block var="line"/></custom-block></block><l>360</l></block><l>180</l></block><block s="reportDifference"><block s="reportModulus"><block s="reportDifference"><custom-block s="direction line %l"><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block var="项"/></block><custom-block s="far end , point %l line %l"><block s="reportListItem"><l>1</l><block var="项"/></block><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block var="项"/></block></block></custom-block></list></block></custom-block><custom-block s="direction line %l"><block var="line"/></custom-block></block><l>360</l></block><l>180</l></block></list></block><l>0</l></list></block><script><block s="doIfElse"><block s="reportVariadicEquals"><list><block s="reportModulus"><block s="reportListAttribute"><l><option>length</option></l><block var="realpoints"/></block><l>2</l></block><l>1</l></list></block><script><block s="doAddToList"><block var="lastpoint"/><block var="realpoints"/></block></script><script><block s="doAddToList"><block var="项"/><block var="realpoints"/></block></script></block></script><script><block s="doAddToList"><block var="lastpoint"/><block var="realpoints"/></block><block s="doAddToList"><block var="项"/><block var="realpoints"/></block></script></block><block s="doSetVar"><l>lastpoint</l><block s="reportNewList"><list></list></block></block></script><script><block s="doAddToList"><block var="lastpoint"/><block var="realpoints"/></block><block s="doSetVar"><l>lastpoint</l><block var="项"/></block></script></block></script></block></script></block></script></block><block s="doIf"><block s="reportNot"><block s="reportListIsEmpty"><block var="lastpoint"/></block></block><script><block s="doAddToList"><block var="lastpoint"/><block var="realpoints"/></block></script><list></list></block><block s="doDeclareVariables"><list><l>tmpline</l></list></block><block s="doSetVar"><l>interceptedlines</l><block s="reportNewList"><list></list></block></block><block s="doSetVar"><l>tmpline</l><block s="reportNewList"><list></list></block></block><block s="doForEach"><l>项</l><block var="realpoints"/><script><block s="doIfElse"><block s="reportVariadicEquals"><list><block s="reportListAttribute"><l><option>length</option></l><block var="tmpline"/></block><l>1</l></list></block><script><block s="doAddToList"><block var="项"/><block var="tmpline"/></block><block s="doIf"><block s="reportVariadicGreaterThan"><list><custom-block s="lineLength %l"><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block var="tmpline"/></block></block><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block var="tmpline"/></block></block></list></block></custom-block><l>2</l></list></block><script><block s="doAddToList"><block s="reportNewList"><list><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block var="tmpline"/></block></block><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block var="tmpline"/></block></block></list></block><block s="reportNewList"><list><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="tmpline"/></block></block><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block var="tmpline"/></block></block></list></block></list></block><block var="interceptedlines"/></block></script><list></list></block><block s="doSetVar"><l>tmpline</l><block s="reportNewList"><list></list></block></block></script><script><block s="doAddToList"><block var="项"/><block var="tmpline"/></block></script></block></script></block></script></block><block s="doReport"><block var="interceptedlines"/></block></script></block-definition><block-definition s="lines %&apos;lines&apos; contain line %&apos;line&apos;" type="predicate" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%l"></input><input type="%l"></input></inputs><script><block s="doWarp"><script><block s="doForEach"><l>项</l><block var="lines"/><script><block s="doIf"><custom-block s="line %l contains line %l"><block var="项"/><block var="line"/></custom-block><script><block s="doReport"><block s="reportBoolean"><l><bool>true</bool></l></block></block></script><list></list></block></script></block></script></block><block s="doReport"><block s="reportBoolean"><l><bool>false</bool></l></block></block></script><scripts><script x="383" y="72.33333333333333"><block s="reportVariadicOr"><list><block s="reportVariadicEquals"><list><block var="项"/><block var="line"/></list></block><block s="reportVariadicEquals"><list><block s="reportNewList"><list><block s="reportListItem"><l>2</l><block var="项"/></block><block s="reportListItem"><l>1</l><block var="项"/></block></list></block><block var="line"/></list></block></list></block></script></scripts></block-definition><block-definition s="far end , point %&apos;point&apos; line %&apos;line&apos;" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%l"></input><input type="%l"></input></inputs><script><block s="doIfElse"><block s="reportVariadicGreaterThan"><list><custom-block s="lineLength %l"><block s="reportNewList"><list><block var="point"/><block s="reportListItem"><l>1</l><block var="line"/></block></list></block></custom-block><custom-block s="lineLength %l"><block s="reportNewList"><list><block var="point"/><block s="reportListItem"><l>2</l><block var="line"/></block></list></block></custom-block></list></block><script><block s="doReport"><block s="reportListItem"><l>1</l><block var="line"/></block></block></script><script><block s="doReport"><block s="reportListItem"><l>2</l><block var="line"/></block></block></script></block></script></block-definition><block-definition s="get filled lines , frame lines %&apos;lines&apos; direction %&apos;direction&apos; dencity %&apos;dencity&apos;" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%l"></input><input type="%n">0</input><input type="%n">3</input></inputs><script><block s="doDeclareVariables"><list><l>realDirection</l><l>cuttingLines</l><l>filledLines</l></list></block><block s="doWarp"><script><block s="doSetVar"><l>realDirection</l><block s="reportModulus"><block var="direction"/><l>360</l></block></block><block s="doIf"><block s="reportVariadicAnd"><list><block s="reportVariadicGreaterThanOrEquals"><list><block var="realDirection"/><l>180</l></list></block><block s="reportVariadicLessThanOrEquals"><list><block var="realDirection"/><l>270</l></list></block></list></block><script><block s="doSetVar"><l>realDirection</l><block s="reportDifference"><block var="realDirection"/><l>180</l></block></block></script><list></list></block><block s="doIf"><block s="reportVariadicAnd"><list><block s="reportVariadicGreaterThan"><list><block var="realDirection"/><l>90</l></list></block><block s="reportVariadicLessThan"><list><block var="realDirection"/><l>180</l></list></block></list></block><script><block s="doSetVar"><l>realDirection</l><block s="reportVariadicSum"><list><block var="realDirection"/><l>180</l></list></block></block></script><list></list></block><block s="doSetVar"><l>cuttingLines</l><custom-block s="cutting lines, frame lines %l direction %n dencity %n"><block var="lines"/><block var="realDirection"/><block var="dencity"/></custom-block></block><block s="doSetVar"><l>filledLines</l><block s="reportNewList"><list></list></block></block><block s="doForEach"><l>项</l><block var="cuttingLines"/><script><block s="doSetVar"><l>filledLines</l><block s="reportConcatenatedLists"><list><block var="filledLines"/><custom-block s="intercepted lines, line %l lines %l"><block var="项"/><block var="lines"/></custom-block></list></block></block></script></block></script></block><block s="doReport"><block var="filledLines"/></block></script></block-definition><block-definition s="infinity" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doReport"><block s="evaluate"><block s="reportJSFunction"><list></list><l>return Infinity;</l></block><list></list></block></block></script></block-definition><block-definition s="track to closed lines %&apos;track&apos;" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%l"></input></inputs><script><block s="doDeclareVariables"><list><l>points</l><l>lines</l><l>groupId</l></list></block><block s="doWarp"><script><block s="doSetVar"><l>groupId</l><l>0</l></block><block s="doSetVar"><l>points</l><block s="reportNewList"><list></list></block></block><block s="doSetVar"><l>lines</l><block s="reportNewList"><list></list></block></block><block s="doForEach"><l>项</l><block var="track"/><script><block s="doIfElse"><block s="reportVariadicEquals"><list><block var="项"/><l>!</l></list></block><script><block s="doIf"><block s="reportNot"><block s="reportListIsEmpty"><block var="points"/></block></block><script><block s="doChangeVar"><l>groupId</l><l>1</l></block><block s="doAddToList"><custom-block s="number the lines group %n lines %l"><block var="groupId"/><custom-block s="combine lines %l"><custom-block s="points to lines %l"><block var="points"/></custom-block></custom-block></custom-block><block var="lines"/></block><block s="doSetVar"><l>points</l><block s="reportNewList"><list></list></block></block></script><list></list></block></script><script><block s="doAddToList"><block var="项"/><block var="points"/></block></script></block></script></block><block s="doIf"><block s="reportNot"><block s="reportListIsEmpty"><block var="points"/></block></block><script><block s="doChangeVar"><l>groupId</l><l>1</l></block><block s="doAddToList"><custom-block s="number the lines group %n lines %l"><block var="groupId"/><custom-block s="combine lines %l"><custom-block s="points to lines %l"><block var="points"/></custom-block></custom-block></custom-block><block var="lines"/></block></script><list></list></block><block s="doReport"><block var="lines"/></block></script></block></script></block-definition><block-definition s="hasCrossPoint? line1 %&apos;line1&apos; line2 %&apos;line2&apos;" type="predicate" category="sensing"><header></header><code></code><translations>zh_CN:线段1 _ 和线段2 _ 有交点？&#xD;</translations><inputs><input type="%l"></input><input type="%l"></input></inputs><script><block s="doDeclareVariables"><list><l>angle1</l><l>angle2</l><l>point</l><l>direction</l></list></block><block s="doWarp"><script><block s="doSetVar"><l>point</l><block s="reportListItem"><l>1</l><block var="line1"/></block></block><block s="doSetVar"><l>angle1</l><custom-block s="calcAngle start %l end %l"><block var="point"/><block s="reportListItem"><l>1</l><block var="line2"/></block></custom-block></block><block s="doSetVar"><l>angle2</l><custom-block s="calcAngle start %l end %l"><block var="point"/><block s="reportListItem"><l>2</l><block var="line2"/></block></custom-block></block><block s="doSetVar"><l>direction</l><custom-block s="calcAngle start %l end %l"><block var="point"/><block s="reportListItem"><l>2</l><block var="line1"/></block></custom-block></block><block s="doIfElse"><block s="reportVariadicGreaterThan"><list><block var="angle1"/><block var="angle2"/></list></block><script><block s="doIf"><block s="reportVariadicLessThan"><list><block s="reportDifference"><block var="angle1"/><block var="angle2"/></block><l>180</l></list></block><script><block s="doIf"><block s="reportVariadicOr"><list><block s="reportVariadicGreaterThan"><list><block var="direction"/><block var="angle1"/></list></block><block s="reportVariadicLessThan"><list><block var="direction"/><block var="angle2"/></list></block></list></block><script><block s="doReport"><block s="reportBoolean"><l><bool>false</bool></l></block></block></script><list></list></block></script><list></list></block><block s="doIf"><block s="reportVariadicGreaterThan"><list><block s="reportDifference"><block var="angle1"/><block var="angle2"/></block><l>180</l></list></block><script><block s="doIf"><block s="reportVariadicAnd"><list><block s="reportVariadicLessThan"><list><block var="direction"/><block var="angle1"/></list></block><block s="reportVariadicGreaterThan"><list><block var="direction"/><block var="angle2"/></list></block></list></block><script><block s="doReport"><block s="reportBoolean"><l><bool>false</bool></l></block></block></script><list></list></block></script><list></list></block></script><script><block s="doIf"><block s="reportVariadicLessThan"><list><block s="reportDifference"><block var="angle2"/><block var="angle1"/></block><l>180</l></list></block><script><block s="doIf"><block s="reportVariadicOr"><list><block s="reportVariadicGreaterThan"><list><block var="direction"/><block var="angle2"/></list></block><block s="reportVariadicLessThan"><list><block var="direction"/><block var="angle1"/></list></block></list></block><script><block s="doReport"><block s="reportBoolean"><l><bool>false</bool></l></block></block></script><list></list></block></script><list></list></block><block s="doIf"><block s="reportVariadicGreaterThan"><list><block s="reportDifference"><block var="angle2"/><block var="angle1"/></block><l>180</l></list></block><script><block s="doIf"><block s="reportVariadicAnd"><list><block s="reportVariadicLessThan"><list><block var="direction"/><block var="angle2"/></list></block><block s="reportVariadicGreaterThan"><list><block var="direction"/><block var="angle1"/></list></block></list></block><script><block s="doReport"><block s="reportBoolean"><l><bool>false</bool></l></block></block></script><list></list></block></script><list></list></block></script></block><block s="doReport"><block s="reportBoolean"><l><bool>true</bool></l></block></block></script></block></script></block-definition><block-definition s="fill the area %&apos;Track&apos; direction %&apos;direction&apos; dencity %&apos;dencity&apos; goback %&apos;goback&apos;" type="command" category="motion"><header></header><code></code><translations>zh_CN:填充轨迹间区域 _ 方向 _ 间距 _ 回到起点 _&#xD;</translations><inputs><input type="%cs"></input><input type="%n">0</input><input type="%n">3</input><input type="%b">true</input></inputs><script><block s="doDeclareVariables"><list><l>dir</l><l>lines</l><l>allLines</l><l>curFilledLine</l><l>lastFilledLine</l><l>cost</l><l>startPoint</l></list></block><block s="doWarp"><script><block s="doIf"><custom-block s="Is %cmdRing empty?"><block var="Track"/></custom-block><script><block s="doStopThis"><l><option>this block</option></l></block></script><list></list></block><block s="doSetVar"><l>direction</l><custom-block s="translate angle %n"><block var="direction"/></custom-block></block><custom-block s="create %s var %mult%txt"><l>global</l><list><l>filledLines</l></list></custom-block><custom-block s="create %s var %mult%txt"><l>global</l><list><l>glblines</l></list></custom-block><block s="doSetVar"><l>filledLines</l><block s="reportNewList"><list></list></block></block><block s="doSetVar"><l>glblines</l><block s="reportNewList"><list></list></block></block><custom-block s="begin tracking"></custom-block><block s="down"></block><block s="doSetVar"><l>startPoint</l><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportQuotient"><block s="reportRound"><block s="reportVariadicProduct"><list><l></l><l>1000</l></list></block></block><l>1000</l></block></autolambda><list></list></block><block s="reportNewList"><list><block s="xPosition"></block><block s="yPosition"></block></list></block></block></block><block s="doRun"><block var="Track"/><list></list></block><custom-block s="create %s var %mult%txt"><l>global</l><list><l>note:</l></list></custom-block><custom-block s="set var %s to %s"><l>note:</l><l>caculating filled lines...</l></custom-block><custom-block s="show var %s"><l>note:</l></custom-block><block s="doSetVar"><l>lines</l><custom-block s="track to closed lines %l"><custom-block s="my tracks"></custom-block></custom-block></block><block s="doSetVar"><l>glblines</l><custom-block s="copy list %l"><block var="lines"/></custom-block></block><custom-block s="close tracking"></custom-block><block s="doSetVar"><l>dir</l><block s="direction"></block></block><block s="doSetVar"><l>allLines</l><block s="reportNewList"><list></list></block></block><block s="doForEach"><l>项</l><block var="lines"/><script><block s="doSetVar"><l>allLines</l><block s="reportConcatenatedLists"><list><block var="allLines"/><block var="项"/></list></block></block></script></block><block s="doSetVar"><l>filledLines</l><custom-block s="get filled lines , frame lines %l direction %n dencity %n"><block var="allLines"/><block var="direction"/><block var="dencity"/></custom-block></block><custom-block s="delete var %mult%txt"><list><l>note:</l></list></custom-block></script></block><block s="doSetVar"><l>lastFilledLine</l><block s="reportNewList"><list></list></block></block><block s="doSetVar"><l>cost</l><l>0</l></block><block s="doUntil"><block s="reportVariadicEquals"><list><block s="reportListAttribute"><l><option>length</option></l><block var="filledLines"/></block><l>0</l></list></block><script><block s="doSetVar"><l>curFilledLine</l><custom-block s="seek next filledline point %l filled lines %l lines %l (2)"><block s="reportIfElse"><block s="reportListIsEmpty"><block var="lastFilledLine"/></block><block s="reportNewList"><list><block s="reportNewList"><list><block s="xPosition"></block><block s="yPosition"></block></list></block><block s="reportNewList"><list></list></block></list></block><block s="reportNewList"><list><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="lastFilledLine"/></block></block><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block var="lastFilledLine"/></block></block></list></block></block><block var="filledLines"/><block var="lines"/></custom-block></block><block s="doChangeVar"><l>cost</l><l>1</l></block><block s="doIfElse"><block s="reportListIsEmpty"><block var="curFilledLine"/></block><script><block s="doIfElse"><block s="reportVariadicEquals"><list><block var="cost"/><l>1</l></list></block><script><block s="doSetVar"><l>lastFilledLine</l><block s="reportNewList"><list><custom-block s="reverse %l"><block s="reportListItem"><l>1</l><block var="lastFilledLine"/></block></custom-block><custom-block s="reverse %l"><block s="reportListItem"><l>2</l><block var="lastFilledLine"/></block></custom-block></list></block></block><block s="up"></block><block s="doGotoObject"><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="lastFilledLine"/></block></block></block><block s="down"></block></script><script><block s="doSetVar"><l>lastFilledLine</l><block s="reportNewList"><list></list></block></block></script></block></script><script><custom-block s="move from filled line %l to filled line %l frame lines %l"><block var="lastFilledLine"/><block var="curFilledLine"/><block var="lines"/></custom-block><block s="doSetVar"><l>lastFilledLine</l><block var="curFilledLine"/></block><block s="doSetVar"><l>cost</l><l>0</l></block></script></block></script></block><block s="doIf"><block var="goback"/><script><custom-block s="go on border from point %l to point %l"><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportQuotient"><block s="reportRound"><block s="reportVariadicProduct"><list><l></l><l>1000</l></list></block></block><l>1000</l></block></autolambda><list></list></block><block s="reportNewList"><list><block s="xPosition"></block><block s="yPosition"></block></list></block></block><block var="startPoint"/></custom-block></script><list></list></block><block s="setHeading"><block var="dir"/></block></script></block-definition><block-definition s="fill the area enclosed by points %&apos;points&apos; direction %&apos;direction&apos; dencity %&apos;dencity&apos;" type="command" category="motion"><header></header><code></code><translations>zh_CN:填充由点集 _ 围成的区域，方向 _ 间距 _&#xD;</translations><inputs><input type="%l"></input><input type="%n">0</input><input type="%n">3</input></inputs><script><block s="doDeclareVariables"><list><l>lines</l><l>allLines</l><l>curFilledLine</l><l>lastFilledLine</l><l>cost</l></list></block><block s="doWarp"><script><block s="doIf"><block s="reportNot"><block s="reportIsA"><block var="points"/><l><option>list</option></l></block></block><script><block s="doStopThis"><l><option>this block</option></l></block></script><list></list></block><block s="doIf"><block s="reportVariadicLessThan"><list><block s="reportListAttribute"><l><option>length</option></l><block var="points"/></block><l>3</l></list></block><script><block s="doStopThis"><l><option>this block</option></l></block></script><list></list></block><custom-block s="pause tracking"></custom-block><custom-block s="create %s var %mult%txt"><l>global</l><list><l>note:</l></list></custom-block><custom-block s="set var %s to %s"><l>note:</l><l>caculating filled lines...</l></custom-block><custom-block s="show var %s"><l>note:</l></custom-block><custom-block s="create %s var %mult%txt"><l>global</l><list><l>filledLines</l></list></custom-block><custom-block s="create %s var %mult%txt"><l>global</l><list><l>glblines</l></list></custom-block><block s="doSetVar"><l>filledLines</l><block s="reportNewList"><list></list></block></block><block s="doSetVar"><l>glblines</l><block s="reportNewList"><list></list></block></block><block s="doSetVar"><l>lines</l><custom-block s="track to closed lines %l"><block var="points"/></custom-block></block><block s="doSetVar"><l>glblines</l><custom-block s="copy list %l"><block var="lines"/></custom-block></block><block s="doSetVar"><l>allLines</l><block s="reportNewList"><list></list></block></block><block s="doForEach"><l>项</l><block var="lines"/><script><block s="doSetVar"><l>allLines</l><block s="reportConcatenatedLists"><list><block var="allLines"/><block var="项"/></list></block></block></script></block><block s="doSetVar"><l>filledLines</l><custom-block s="get filled lines , frame lines %l direction %n dencity %n"><block var="allLines"/><block var="direction"/><block var="dencity"/></custom-block></block><custom-block s="delete var %mult%txt"><list><l>note:</l></list></custom-block></script></block><block s="doSetVar"><l>lastFilledLine</l><block s="reportNewList"><list></list></block></block><block s="doSetVar"><l>cost</l><l>0</l></block><block s="doUntil"><block s="reportVariadicEquals"><list><block s="reportListAttribute"><l><option>length</option></l><block var="filledLines"/></block><l>0</l></list></block><script><block s="doSetVar"><l>curFilledLine</l><custom-block s="seek next filledline point %l filled lines %l lines %l (2)"><block s="reportIfElse"><block s="reportListIsEmpty"><block var="lastFilledLine"/></block><block s="reportNewList"><list><block s="reportNewList"><list><block s="xPosition"></block><block s="yPosition"></block></list></block><block s="reportNewList"><list></list></block></list></block><block s="reportNewList"><list><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="lastFilledLine"/></block></block><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block var="lastFilledLine"/></block></block></list></block></block><block var="filledLines"/><block var="lines"/></custom-block></block><block s="doChangeVar"><l>cost</l><l>1</l></block><block s="doIfElse"><block s="reportListIsEmpty"><block var="curFilledLine"/></block><script><block s="doIfElse"><block s="reportVariadicEquals"><list><block var="cost"/><l>1</l></list></block><script><block s="doSetVar"><l>lastFilledLine</l><block s="reportNewList"><list><custom-block s="reverse %l"><block s="reportListItem"><l>1</l><block var="lastFilledLine"/></block></custom-block><custom-block s="reverse %l"><block s="reportListItem"><l>2</l><block var="lastFilledLine"/></block></custom-block></list></block></block><custom-block s="go to %l style %cmdRing by %txt"><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="lastFilledLine"/></block></block><block s="reifyScript"><script></script><list></list></block><l></l></custom-block></script><script><block s="doSetVar"><l>lastFilledLine</l><block s="reportNewList"><list></list></block></block></script></block></script><script><custom-block s="move from filled line %l to filled line %l frame lines %l"><block var="lastFilledLine"/><block var="curFilledLine"/><block var="lines"/></custom-block><block s="doSetVar"><l>lastFilledLine</l><block var="curFilledLine"/></block><block s="doSetVar"><l>cost</l><l>0</l></block></script></block></script></block><custom-block s="continue tracking"></custom-block></script></block-definition><block-definition s="length of route from point %&apos;firstPoint&apos; to point %&apos;secondPoint&apos; lines %&apos;lines&apos;" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%l"></input><input type="%l"></input><input type="%l"></input></inputs><script><block s="doDeclareVariables"><list><l>line1</l><l>line2</l><l>point1</l><l>point2</l><l>route1</l><l>route2</l><l>linesInRoute</l><l>closeLine</l><l>length</l><l>lengthOfCloseline</l><l>line1No</l><l>line2No</l><l>lengthRoute1</l></list></block><block s="doWarp"><script><block s="doSetVar"><l>point1</l><block s="reportListItem"><l>1</l><block var="firstPoint"/></block></block><block s="doSetVar"><l>line1</l><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block var="firstPoint"/></block></block></block><block s="doSetVar"><l>line1No</l><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block var="firstPoint"/></block></block></block><block s="doSetVar"><l>point2</l><block s="reportListItem"><l>1</l><block var="secondPoint"/></block></block><block s="doSetVar"><l>line2</l><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block var="secondPoint"/></block></block></block><block s="doSetVar"><l>line2No</l><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block var="secondPoint"/></block></block></block><block s="doIfElse"><block s="reportVariadicNotEquals"><list><block s="reportRound"><block s="reportQuotient"><block var="line1No"/><l>10000</l></block></block><block s="reportRound"><block s="reportQuotient"><block var="line2No"/><l>10000</l></block></block></list></block><script><block s="doReport"><custom-block s="infinity"></custom-block></block></script><script><block s="doIfElse"><block s="reportVariadicEquals"><list><block var="line1No"/><block var="line2No"/></list></block><script><block s="doReport"><custom-block s="lineLength %l"><block s="reportNewList"><list><block var="point1"/><block var="point2"/></list></block></custom-block></block></script><script><block s="doSetVar"><l>closeLine</l><block s="reportListItem"><block s="reportRound"><block s="reportQuotient"><block var="line1No"/><l>10000</l></block></block><block var="lines"/></block></block><block s="doSetVar"><l>length</l><block s="reportListAttribute"><l><option>length</option></l><block var="closeLine"/></block></block><block s="doSetVar"><l>lengthOfCloseline</l><block s="reportListItem"><l>3</l><block s="reportCombine"><block var="closeLine"/><block s="reifyReporter"><autolambda><block s="reportVariadicSum"><list><l></l><l></l></list></block></autolambda><list></list></block></block></block></block><block s="doIfElse"><block s="reportVariadicLessThan"><list><block var="line1No"/><block var="line2No"/></list></block><script><block s="doSetVar"><l>route1</l><block s="reportNewList"><list></list></block></block><block s="doSetVar"><l>linesInRoute</l><block s="reportKeep"><block s="reifyPredicate"><autolambda><block s="reportVariadicAnd"><list><block s="reportVariadicGreaterThan"><list><block s="reportListItem"><l>1</l><l/></block><block var="line1No"/></list></block><block s="reportVariadicLessThan"><list><block s="reportListItem"><l>1</l><l/></block><block var="line2No"/></list></block></list></block></autolambda><list></list></block><block var="closeLine"/></block></block><block s="doAddToList"><block var="point1"/><block var="route1"/></block><block s="doAddToList"><block s="reportListItem"><l>2</l><block var="line1"/></block><block var="route1"/></block><block s="doForEach"><l>item</l><block var="linesInRoute"/><script><block s="doAddToList"><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block var="item"/></block></block><block var="route1"/></block></script></block><block s="doAddToList"><block var="point2"/><block var="route1"/></block><block s="doSetVar"><l>lengthRoute1</l><block s="reportVariadicSum"><list><block s="reportVariadicSum"><list><custom-block s="lineLength %l"><block s="reportNewList"><list><block var="point1"/><block s="reportListItem"><l>2</l><block var="line1"/></block></list></block></custom-block><block s="reportIfElse"><block s="reportListIsEmpty"><block var="linesInRoute"/></block><l>0</l><block s="reportListItem"><l>3</l><block s="reportCombine"><block var="linesInRoute"/><block s="reifyReporter"><autolambda><block s="reportVariadicSum"><list><l></l><l></l></list></block></autolambda><list></list></block></block></block></block></list></block><custom-block s="lineLength %l"><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block var="line2"/></block><block var="point2"/></list></block></custom-block></list></block></block><block s="doIfElse"><block s="reportVariadicLessThan"><list><block var="lengthRoute1"/><block s="reportDifference"><block var="lengthOfCloseline"/><block var="lengthRoute1"/></block></list></block><script><block s="doReport"><block var="lengthRoute1"/></block></script><script><block s="doReport"><block s="reportDifference"><block var="lengthOfCloseline"/><block var="lengthRoute1"/></block></block></script></block></script><script><block s="doSetVar"><l>route1</l><block s="reportNewList"><list></list></block></block><block s="doSetVar"><l>linesInRoute</l><custom-block s="reverse %l"><block s="reportKeep"><block s="reifyPredicate"><autolambda><block s="reportVariadicAnd"><list><block s="reportVariadicGreaterThan"><list><block s="reportListItem"><l>1</l><l/></block><block var="line2No"/></list></block><block s="reportVariadicLessThan"><list><block s="reportListItem"><l>1</l><l/></block><block var="line1No"/></list></block></list></block></autolambda><list></list></block><block var="closeLine"/></block></custom-block></block><block s="doAddToList"><block var="point1"/><block var="route1"/></block><block s="doAddToList"><block s="reportListItem"><l>1</l><block var="line1"/></block><block var="route1"/></block><block s="doForEach"><l>item</l><block var="linesInRoute"/><script><block s="doAddToList"><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block var="item"/></block></block><block var="route1"/></block></script></block><block s="doAddToList"><block var="point2"/><block var="route1"/></block><block s="doSetVar"><l>lengthRoute1</l><block s="reportVariadicSum"><list><block s="reportVariadicSum"><list><custom-block s="lineLength %l"><block s="reportNewList"><list><block var="point1"/><block s="reportListItem"><l>1</l><block var="line1"/></block></list></block></custom-block><block s="reportIfElse"><block s="reportListIsEmpty"><block var="linesInRoute"/></block><l>0</l><block s="reportListItem"><l>3</l><block s="reportCombine"><block var="linesInRoute"/><block s="reifyReporter"><autolambda><block s="reportVariadicSum"><list><l></l><l></l></list></block></autolambda><list></list></block></block></block></block></list></block><custom-block s="lineLength %l"><block s="reportNewList"><list><block s="reportListItem"><l>2</l><block var="line2"/></block><block var="point2"/></list></block></custom-block></list></block></block><block s="doIfElse"><block s="reportVariadicLessThan"><list><block var="lengthRoute1"/><block s="reportDifference"><block var="lengthOfCloseline"/><block var="lengthRoute1"/></block></list></block><script><block s="doReport"><block var="lengthRoute1"/></block></script><script><block s="doReport"><block s="reportDifference"><block var="lengthOfCloseline"/><block var="lengthRoute1"/></block></block></script></block></script></block></script></block></script></block></script></block></script></block-definition><block-definition s="route distance from point %&apos;firstPoint&apos; to point %&apos;secondPoint&apos; lines %&apos;lines&apos;" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%l"></input><input type="%l"></input><input type="%l"></input></inputs><script><block s="doDeclareVariables"><list><l>line1</l><l>line2</l><l>point1</l><l>point2</l><l>route1</l><l>route2</l><l>linesInRoute</l><l>closeLine</l><l>length</l><l>lengthOfCloseline</l><l>line1No</l><l>line2No</l><l>lengthRoute1</l></list></block><block s="doWarp"><script><block s="doSetVar"><l>point1</l><block s="reportListItem"><l>1</l><block var="firstPoint"/></block></block><block s="doSetVar"><l>line1</l><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block var="firstPoint"/></block></block></block><block s="doSetVar"><l>line1No</l><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block var="firstPoint"/></block></block></block><block s="doSetVar"><l>point2</l><block s="reportListItem"><l>1</l><block var="secondPoint"/></block></block><block s="doSetVar"><l>line2</l><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block var="secondPoint"/></block></block></block><block s="doSetVar"><l>line2No</l><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block var="secondPoint"/></block></block></block><block s="doIfElse"><block s="reportVariadicNotEquals"><list><block s="reportRound"><block s="reportQuotient"><block var="line1No"/><l>10000</l></block></block><block s="reportRound"><block s="reportQuotient"><block var="line2No"/><l>10000</l></block></block></list></block><script><block s="doReport"><custom-block s="infinity"></custom-block></block></script><script><block s="doIfElse"><block s="reportVariadicEquals"><list><block var="line1No"/><block var="line2No"/></list></block><script><block s="doReport"><l>0</l></block></script><script><block s="doSetVar"><l>closeLine</l><block s="reportListItem"><block s="reportRound"><block s="reportQuotient"><block var="line1No"/><l>10000</l></block></block><block var="lines"/></block></block><block s="doSetVar"><l>length</l><block s="reportListAttribute"><l><option>length</option></l><block var="closeLine"/></block></block><block s="doIfElse"><block s="reportVariadicLessThan"><list><block var="line1No"/><block var="line2No"/></list></block><script><block s="doSetVar"><l>lengthRoute1</l><block s="reportDifference"><block var="line2No"/><block var="line1No"/></block></block></script><script><block s="doSetVar"><l>lengthRoute1</l><block s="reportDifference"><block var="line1No"/><block var="line2No"/></block></block></script></block><block s="doIfElse"><block s="reportVariadicLessThan"><list><block var="lengthRoute1"/><block s="reportDifference"><block var="length"/><block var="lengthRoute1"/></block></list></block><script><block s="doReport"><block var="lengthRoute1"/></block></script><script><block s="doReport"><block s="reportDifference"><block var="length"/><block var="lengthRoute1"/></block></block></script></block></script></block></script></block></script></block></script></block-definition><block-definition s="trackToVector %&apos;track&apos;" type="reporter" category="motion"><variables><list struct="atomic" id="11527">trackPoints</list></variables><header></header><code></code><translations>zh_CN:轨迹转换为矢量 _&#xD;</translations><inputs><input type="%cs"></input></inputs><script><custom-block s="begin tracking"></custom-block><custom-block s="reset tracking"></custom-block><block s="doRun"><block var="track"/><list></list></block><block s="doSetVar"><l>trackPoints</l><custom-block s="copy list %l"><custom-block s="my tracks"></custom-block></custom-block></block><custom-block s="close tracking"></custom-block><block s="doReport"><custom-block s="pointsToVector %l"><block var="trackPoints"/></custom-block></block></script></block-definition><block-definition s="set %&apos;x&apos; to points of %&apos;Track&apos;" type="command" category="motion"><header></header><code></code><translations>zh_CN:把 _ 设置为以下程序生成的点集 _&#xD;</translations><inputs><input type="%anyUE"></input><input type="%cs"></input></inputs><script><block s="doWarp"><script><custom-block s="begin tracking"></custom-block><custom-block s="reset tracking"></custom-block><block s="down"></block><block s="doRun"><block var="Track"/><list></list></block><block s="doRun"><block s="reifyScript"><script><block s="doSetVar"><l></l><l></l></block></script><list></list></block><list><block var="x"/><block s="reportMap"><block s="reifyReporter"><script></script><list></list></block><custom-block s="my tracks"></custom-block></block></list></block><custom-block s="close tracking"></custom-block></script></block></script></block-definition><block-definition s="reverse %&apos;data&apos;" type="reporter" category="lists"><comment x="0" y="0" w="222.99999999999997" collapsed="false">Reports a new list containing the items of the input list, but in the opposite order.</comment><header></header><code></code><translations>ca:capgira _&#xD;zh_CN:倒置列表 _&#xD;</translations><inputs><input type="%l"></input></inputs><script><block s="doDeclareVariables"><list><l>helper</l></list></block><block s="doSetVar"><l>helper</l><block s="reifyScript"><script><block s="doIf"><block s="reportVariadicEquals"><list><block var="input"/><block s="reportNewList"><list></list></block></list></block><script><block s="doReport"><block var="result"/></block></script><list></list></block><block s="doReport"><block s="evaluate"><block var="helper"/><list><block s="reportCDR"><block var="input"/></block><block s="reportCONS"><block s="reportListItem"><l>1</l><block var="input"/></block><block var="result"/></block></list></block></block></script><list><l>input</l><l>result</l></list></block></block><block s="doWarp"><script><block s="doReport"><block s="evaluate"><block var="helper"/><list><block var="data"/><block s="reportNewList"><list></list></block></list></block></block></script></block></script></block-definition><block-definition s="continue tracking" type="command" category="motion"><header></header><code></code><translations>zh_CN:继续跟踪&#xD;</translations><inputs></inputs><script><block s="doRun"><block s="reportJSFunction"><list></list><l>if (this.trackingOpened &amp;&amp; !this.tracked) {&#xD;    this.tracked = true;&#xD;}</l></block><list></list></block></script></block-definition><block-definition s="pause tracking" type="command" category="motion"><header></header><code></code><translations>zh_CN:暂停跟踪&#xD;</translations><inputs></inputs><script><block s="doRun"><block s="reportJSFunction"><list></list><l>if (this.trackingOpened &amp;&amp; this.tracked) {&#xD;    this.tracked = false;&#xD;}</l></block><list></list></block></script></block-definition><block-definition s="grouped lines %&apos;lines&apos; contrain point %&apos;point&apos;" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%l"></input><input type="%l"></input></inputs><script><block s="doWarp"><script><block s="doForEach"><l>lineGroup</l><block var="lines"/><script><block s="doForEach"><l>line</l><block var="lineGroup"/><script><block s="doIf"><custom-block s="line %l contains point %l"><block s="reportListItem"><l>2</l><block var="line"/></block><block var="point"/></custom-block><script><block s="doReport"><block var="line"/></block></script><list></list></block></script></block></script></block><block s="doReport"><block s="reportNewList"><list></list></block></block></script></block></script></block-definition><block-definition s="route from point %&apos;firstPoint&apos; to point %&apos;secondPoint&apos; lines %&apos;lines&apos;" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%l"></input><input type="%l"></input><input type="%l"></input></inputs><script><block s="doDeclareVariables"><list><l>line1</l><l>line2</l><l>point1</l><l>point2</l><l>route1</l><l>route2</l><l>linesInRoute</l><l>closeLine</l><l>length</l><l>lengthOfCloseline</l><l>line1No</l><l>line2No</l><l>lengthRoute1</l></list></block><block s="doWarp"><script><block s="doSetVar"><l>point1</l><block s="reportListItem"><l>1</l><block var="firstPoint"/></block></block><block s="doSetVar"><l>line1</l><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block var="firstPoint"/></block></block></block><block s="doSetVar"><l>line1No</l><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block var="firstPoint"/></block></block></block><block s="doSetVar"><l>point2</l><block s="reportListItem"><l>1</l><block var="secondPoint"/></block></block><block s="doSetVar"><l>line2</l><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block var="secondPoint"/></block></block></block><block s="doSetVar"><l>line2No</l><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block var="secondPoint"/></block></block></block><block s="doIfElse"><block s="reportVariadicNotEquals"><list><block s="reportRound"><block s="reportQuotient"><block var="line1No"/><l>10000</l></block></block><block s="reportRound"><block s="reportQuotient"><block var="line2No"/><l>10000</l></block></block></list></block><script><block s="doReport"><block s="reportNewList"><list></list></block></block></script><script><block s="doIfElse"><block s="reportVariadicEquals"><list><block var="line1No"/><block var="line2No"/></list></block><script><block s="doReport"><block s="reportNewList"><list><block var="point1"/><block var="point2"/></list></block></block></script><script><block s="doSetVar"><l>closeLine</l><block s="reportListItem"><block s="reportRound"><block s="reportQuotient"><block var="line1No"/><l>10000</l></block></block><block var="lines"/></block></block><block s="doSetVar"><l>length</l><block s="reportListAttribute"><l><option>length</option></l><block var="closeLine"/></block></block><block s="doSetVar"><l>lengthOfCloseline</l><block s="reportListItem"><l>3</l><block s="reportCombine"><block var="closeLine"/><block s="reifyReporter"><autolambda><block s="reportVariadicSum"><list><l></l><l></l></list></block></autolambda><list></list></block></block></block></block><block s="doIfElse"><block s="reportVariadicLessThan"><list><block var="line1No"/><block var="line2No"/></list></block><script><block s="doSetVar"><l>route1</l><block s="reportNewList"><list></list></block></block><block s="doSetVar"><l>linesInRoute</l><block s="reportKeep"><block s="reifyPredicate"><autolambda><block s="reportVariadicAnd"><list><block s="reportVariadicGreaterThan"><list><block s="reportListItem"><l>1</l><l/></block><block var="line1No"/></list></block><block s="reportVariadicLessThan"><list><block s="reportListItem"><l>1</l><l/></block><block var="line2No"/></list></block></list></block></autolambda><list></list></block><block var="closeLine"/></block></block><block s="doAddToList"><block var="point1"/><block var="route1"/></block><block s="doAddToList"><block s="reportListItem"><l>2</l><block var="line1"/></block><block var="route1"/></block><block s="doForEach"><l>item</l><block var="linesInRoute"/><script><block s="doAddToList"><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block var="item"/></block></block><block var="route1"/></block></script></block><block s="doAddToList"><block var="point2"/><block var="route1"/></block><block s="doSetVar"><l>lengthRoute1</l><block s="reportVariadicSum"><list><block s="reportVariadicSum"><list><custom-block s="lineLength %l"><block s="reportNewList"><list><block var="point1"/><block s="reportListItem"><l>2</l><block var="line1"/></block></list></block></custom-block><block s="reportIfElse"><block s="reportListIsEmpty"><block var="linesInRoute"/></block><l>0</l><block s="reportListItem"><l>3</l><block s="reportCombine"><block var="linesInRoute"/><block s="reifyReporter"><autolambda><block s="reportVariadicSum"><list><l></l><l></l></list></block></autolambda><list></list></block></block></block></block></list></block><custom-block s="lineLength %l"><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block var="line2"/></block><block var="point2"/></list></block></custom-block></list></block></block><block s="doIfElse"><block s="reportVariadicLessThan"><list><block var="lengthRoute1"/><block s="reportDifference"><block var="lengthOfCloseline"/><block var="lengthRoute1"/></block></list></block><script><block s="doReport"><block var="route1"/></block></script><script><block s="doSetVar"><l>route2</l><block s="reportNewList"><list></list></block></block><block s="doSetVar"><l>linesInRoute</l><block s="reportConcatenatedLists"><list><custom-block s="reverse %l"><block s="reportKeep"><block s="reifyPredicate"><autolambda><block s="reportVariadicAnd"><list><block s="reportVariadicGreaterThan"><list><block s="reportListItem"><l>1</l><l/></block><block s="reportVariadicProduct"><list><block s="reportRound"><block s="reportQuotient"><block var="line1No"/><l>10000</l></block></block><l>10000</l></list></block></list></block><block s="reportVariadicLessThan"><list><block s="reportListItem"><l>1</l><l/></block><block var="line1No"/></list></block></list></block></autolambda><list></list></block><block var="closeLine"/></block></custom-block><custom-block s="reverse %l"><block s="reportKeep"><block s="reifyPredicate"><autolambda><block s="reportVariadicAnd"><list><block s="reportVariadicGreaterThan"><list><block s="reportListItem"><l>1</l><l/></block><block var="line2No"/></list></block><block s="reportVariadicLessThan"><list><block s="reportListItem"><l>1</l><l/></block><block s="reportVariadicSum"><list><block s="reportVariadicProduct"><list><block s="reportRound"><block s="reportQuotient"><block var="line1No"/><l>10000</l></block></block><l>10000</l></list></block><block s="reportVariadicSum"><list><block var="length"/><l>1</l></list></block></list></block></list></block></list></block></autolambda><list></list></block><block var="closeLine"/></block></custom-block></list></block></block><block s="doAddToList"><block var="point1"/><block var="route2"/></block><block s="doAddToList"><block s="reportListItem"><l>1</l><block var="line1"/></block><block var="route2"/></block><block s="doForEach"><l>item</l><block var="linesInRoute"/><script><block s="doAddToList"><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block var="item"/></block></block><block var="route2"/></block></script></block><block s="doAddToList"><block var="point2"/><block var="route2"/></block><block s="doReport"><block var="route2"/></block></script></block></script><script><block s="doSetVar"><l>route1</l><block s="reportNewList"><list></list></block></block><block s="doSetVar"><l>linesInRoute</l><custom-block s="reverse %l"><block s="reportKeep"><block s="reifyPredicate"><autolambda><block s="reportVariadicAnd"><list><block s="reportVariadicGreaterThan"><list><block s="reportListItem"><l>1</l><l/></block><block var="line2No"/></list></block><block s="reportVariadicLessThan"><list><block s="reportListItem"><l>1</l><l/></block><block var="line1No"/></list></block></list></block></autolambda><list></list></block><block var="closeLine"/></block></custom-block></block><block s="doAddToList"><block var="point1"/><block var="route1"/></block><block s="doAddToList"><block s="reportListItem"><l>1</l><block var="line1"/></block><block var="route1"/></block><block s="doForEach"><l>item</l><block var="linesInRoute"/><script><block s="doAddToList"><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block var="item"/></block></block><block var="route1"/></block></script></block><block s="doAddToList"><block var="point2"/><block var="route1"/></block><block s="doSetVar"><l>lengthRoute1</l><block s="reportVariadicSum"><list><block s="reportVariadicSum"><list><custom-block s="lineLength %l"><block s="reportNewList"><list><block var="point1"/><block s="reportListItem"><l>1</l><block var="line1"/></block></list></block></custom-block><block s="reportIfElse"><block s="reportListIsEmpty"><block var="linesInRoute"/></block><l>0</l><block s="reportListItem"><l>3</l><block s="reportCombine"><block var="linesInRoute"/><block s="reifyReporter"><autolambda><block s="reportVariadicSum"><list><l></l><l></l></list></block></autolambda><list></list></block></block></block></block></list></block><custom-block s="lineLength %l"><block s="reportNewList"><list><block s="reportListItem"><l>2</l><block var="line2"/></block><block var="point2"/></list></block></custom-block></list></block></block><block s="doIfElse"><block s="reportVariadicLessThan"><list><block var="lengthRoute1"/><block s="reportDifference"><block var="lengthOfCloseline"/><block var="lengthRoute1"/></block></list></block><script><block s="doReport"><block var="route1"/></block></script><script><block s="doSetVar"><l>route2</l><block s="reportNewList"><list></list></block></block><block s="doSetVar"><l>linesInRoute</l><block s="reportConcatenatedLists"><list><block s="reportKeep"><block s="reifyPredicate"><autolambda><block s="reportVariadicAnd"><list><block s="reportVariadicGreaterThan"><list><block s="reportListItem"><l>1</l><l/></block><block var="line1No"/></list></block><block s="reportVariadicLessThan"><list><block s="reportListItem"><l>1</l><l/></block><block s="reportVariadicSum"><list><block s="reportVariadicProduct"><list><block s="reportRound"><block s="reportQuotient"><block var="line1No"/><l>10000</l></block></block><l>10000</l></list></block><block s="reportVariadicSum"><list><block var="length"/><l>1</l></list></block></list></block></list></block></list></block></autolambda><list></list></block><block var="closeLine"/></block><block s="reportKeep"><block s="reifyPredicate"><autolambda><block s="reportVariadicAnd"><list><block s="reportVariadicGreaterThan"><list><block s="reportListItem"><l>1</l><l/></block><block s="reportVariadicProduct"><list><block s="reportRound"><block s="reportQuotient"><block var="line1No"/><l>10000</l></block></block><l>10000</l></list></block></list></block><block s="reportVariadicLessThan"><list><block s="reportListItem"><l>1</l><l/></block><block var="line2No"/></list></block></list></block></autolambda><list></list></block><block var="closeLine"/></block></list></block></block><block s="doAddToList"><block var="point1"/><block var="route2"/></block><block s="doAddToList"><block s="reportListItem"><l>2</l><block var="line1"/></block><block var="route2"/></block><block s="doForEach"><l>item</l><block var="linesInRoute"/><script><block s="doAddToList"><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block var="item"/></block></block><block var="route2"/></block></script></block><block s="doAddToList"><block var="point2"/><block var="route2"/></block><block s="doReport"><block var="route2"/></block></script></block></script></block></script></block></script></block></script></block></script></block-definition><block-definition s="choose filling style %&apos;fillingstyle&apos;" type="command" category="embroidery"><header></header><code></code><translations>zh_CN:选择填充方法 _&#xD;</translations><inputs><input type="%txt"><options>arrows&#xD;bricks&#xD;zigzag&#xD;arcs</options></input></inputs><script><block s="doIfElse"><block s="reportVariadicEquals"><list><block var="fillingstyle"/><l></l></list></block><script><custom-block s="set filling style to %cmdRing"><block s="reifyScript"><script></script><list></list></block></custom-block></script><script><block s="doIfElse"><block s="reportVariadicEquals"><list><block var="fillingstyle"/><l>arrows</l></list></block><script><custom-block s="set filling style to %cmdRing"><block s="reifyScript"><script><custom-block s="move %n style %cmdRing by %txt"><l></l><block s="reifyScript"><script><custom-block s="fold line %n width %n direction %txt style %cmdRing"><l></l><l>20</l><l>left</l><block s="reifyScript"><script><custom-block s="arc %n angle %n turn %txt style %cmdRing by %n"><l></l><l>30</l><l>left</l><block s="reifyScript"><script></script><list></list></block><l>6</l></custom-block></script><list></list></block></custom-block></script><list></list></block><l>20</l></custom-block></script><list></list></block></custom-block></script><script><block s="doIfElse"><block s="reportVariadicEquals"><list><block var="fillingstyle"/><l>bricks</l></list></block><script><custom-block s="set filling style to %cmdRing"><block s="reifyScript"><script><custom-block s="move %n style %cmdRing by %txt"><l></l><block s="reifyScript"><script><custom-block s="bar %n width %n direction %txt style %cmdRing"><l></l><l>10</l><l>middle</l><block s="reifyScript"><script></script><list></list></block></custom-block></script><list></list></block><l>12</l></custom-block></script><list></list></block></custom-block></script><script><block s="doIfElse"><block s="reportVariadicEquals"><list><block var="fillingstyle"/><l>zigzag</l></list></block><script><custom-block s="set filling style to %cmdRing"><block s="reifyScript"><script><custom-block s="move %n style %cmdRing by %txt"><l></l><block s="reifyScript"><script><custom-block s="fold line %n width %n direction %txt style %cmdRing"><l></l><block s="reportVariadicProduct"><list><l></l><l>1.5</l></list></block><l>middle</l><block s="reifyScript"><script></script><list></list></block></custom-block></script><list></list></block><l>0</l></custom-block></script><list></list></block></custom-block></script><script><block s="doIf"><block s="reportVariadicEquals"><list><block var="fillingstyle"/><l>arcs</l></list></block><script><custom-block s="set filling style to %cmdRing"><block s="reifyScript"><script><custom-block s="arc %n angle %n turn %txt style %cmdRing by %n"><l></l><block s="reportRandom"><l>30</l><l>60</l></block><l>right</l><block s="reifyScript"><script></script><list></list></block><l>0</l></custom-block></script><list></list></block></custom-block></script><list></list></block></script></block></script></block></script></block></script></block></script></block-definition><block-definition s="go on border from point %&apos;point1&apos; to point %&apos;point2&apos;" type="command" category="motion"><header></header><code></code><translations>zh_CN:在填充区域边界移动 从点 _ 到点 _&#xD;</translations><inputs><input type="%l"></input><input type="%l"></input></inputs><script><block s="doIf"><block s="reportListIsEmpty"><block var="point1"/></block><script><block s="doSetVar"><l>point1</l><block s="reportNewList"><list><block s="xPosition"></block><block s="yPosition"></block></list></block></block></script><list></list></block><block s="doSetVar"><l>point2</l><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportQuotient"><block s="reportRound"><block s="reportVariadicProduct"><list><l></l><l>1000</l></list></block></block><l>1000</l></block></autolambda><list></list></block><block var="point2"/></block></block><block s="doForEach"><l>item</l><block s="reportCDR"><custom-block s="route from point %l to point %l lines %l"><block s="reportNewList"><list><block var="point1"/><custom-block s="grouped lines %l contrain point %l"><block var="glblines"/><block var="point1"/></custom-block></list></block><block s="reportNewList"><list><block var="point2"/><custom-block s="grouped lines %l contrain point %l"><block var="glblines"/><block var="point2"/></custom-block></list></block><block var="glblines"/></custom-block></block><script><block s="doGotoObject"><block var="item"/></block></script></block></script></block-definition><block-definition s="move from filled line %&apos;line1&apos; to filled line %&apos;line2&apos; frame lines %&apos;lines&apos;" type="command" category="motion"><header></header><code></code><translations></translations><inputs><input type="%l"></input><input type="%l"></input><input type="%l"></input></inputs><script><block s="doDeclareVariables"><list><l>tmpLine</l><l>route</l></list></block><block s="doIfElse"><block s="reportListIsEmpty"><block var="line1"/></block><script><block s="doSetVar"><l>tmpLine</l><custom-block s="grouped lines %l contrain point %l"><block var="lines"/><block s="reportNewList"><list><block s="xPosition"></block><block s="yPosition"></block></list></block></custom-block></block><block s="doSetVar"><l>route</l><custom-block s="route from point %l to point %l lines %l"><block s="reportNewList"><list><block s="reportNewList"><list><block s="xPosition"></block><block s="yPosition"></block></list></block><block var="tmpLine"/></list></block><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block var="line2"/></block></block><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block var="line2"/></block></block></list></block><block var="lines"/></custom-block></block><block s="doIfElse"><block s="reportVariadicOr"><list><block s="reportListIsEmpty"><block var="tmpLine"/></block><block s="reportListIsEmpty"><block var="route"/></block></list></block><script><block s="up"></block><block s="doGotoObject"><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block var="line2"/></block></block></block><block s="down"></block><custom-block s="go to %l style %cmdRing by %txt"><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="line2"/></block></block><custom-block s="filling style"></custom-block><l></l></custom-block></script><script><block s="doForEach"><l>项</l><block s="reportCDR"><block var="route"/></block><script><block s="doGotoObject"><block var="项"/></block></script></block><custom-block s="go to %l style %cmdRing by %txt"><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="line2"/></block></block><custom-block s="filling style"></custom-block><l></l></custom-block></script></block></script><script><block s="doSetVar"><l>route</l><custom-block s="route from point %l to point %l lines %l"><block s="reportNewList"><list><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="line1"/></block></block><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block var="line1"/></block></block></list></block><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block var="line2"/></block></block><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block var="line2"/></block></block></list></block><block var="lines"/></custom-block></block><block s="doIfElse"><custom-block s="avoid jumps while filling"></custom-block><script><block s="doForEach"><l>项</l><block s="reportCDR"><block var="route"/></block><script><block s="doGotoObject"><block var="项"/></block></script></block></script><script><block s="doIfElse"><block s="reportVariadicGreaterThan"><list><block s="reportListAttribute"><l><option>length</option></l><block var="route"/></block><l>2</l></list></block><script><block s="up"></block><block s="doGotoObject"><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block var="line2"/></block></block></block><block s="down"></block></script><script><block s="doGotoObject"><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block var="line2"/></block></block></block></script></block></script></block><custom-block s="go to %l style %cmdRing by %txt"><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="line2"/></block></block><custom-block s="filling style"></custom-block><l></l></custom-block></script></block></script><scripts><script x="11.974934895833334" y="976.6666666666666"><block s="reportVariadicAnd"><list><l/><block s="reportVariadicGreaterThan"><list><custom-block s="lineLength %l"><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block var="route"/></block><block s="reportListItem"><l><option>last</option></l><block var="route"/></block></list></block></custom-block><l>20</l></list></block></list></block></script></scripts></block-definition><block-definition s="set filling style to %&apos;fillingtype&apos;" type="command" category="embroidery"><header></header><code></code><translations>zh_CN:设置填充方法为 _&#xD;</translations><inputs><input type="%cmdRing"></input></inputs><script><block s="doRun"><block s="reportJSFunction"><list><l>fillingtype</l></list><l>this.fillingstyle = fillingtype;</l></block><list><block var="fillingtype"/></list></block></script></block-definition><block-definition s="avoid jumps %&apos;followOutline&apos; $nl while filling" type="command" category="embroidery"><header></header><code></code><translations>zh_CN:填充时避免跳线 _ _&#xD;</translations><inputs><input type="%b">true</input></inputs><script><block s="doRun"><block s="reportJSFunction"><list><l>followOutline</l></list><l>this.avoidJumps = followOutline;</l></block><list><block var="followOutline"/></list></block></script></block-definition><block-definition s="avoid jumps while filling" type="predicate" category="embroidery"><header></header><code></code><translations>zh_CN:填充时是否避免跳线&#xD;</translations><inputs></inputs><script><block s="doReport"><block s="evaluate"><block s="reportJSFunction"><list></list><l>return this.avoidJumps == undefined?false:this.avoidJumps;</l></block><list></list></block></block></script></block-definition><block-definition s="filling style" type="reporter" category="embroidery"><header></header><code></code><translations>zh_CN:默认填充方法&#xD;</translations><inputs></inputs><script><block s="doDeclareVariables"><list><l>fillingtype</l></list></block><block s="doSetVar"><l>fillingtype</l><block s="evaluate"><block s="reportJSFunction"><list></list><l>if (this.fillingstyle) {&#xD;    return this.fillingstyle;&#xD;} else {&#xD;    return &apos;None&apos;;&#xD;}</l></block><list></list></block></block><block s="doReport"><block s="reportIfElse"><block s="reportVariadicAnd"><list><block s="reportIsA"><block var="fillingtype"/><l><option>command</option></l></block><block s="reportNot"><custom-block s="Is %cmdRing empty?"><block var="fillingtype"/></custom-block></block></list></block><block var="fillingtype"/><block s="reifyScript"><script><custom-block s="move %n style %cmdRing by %txt"><l></l><block s="reifyScript"><script></script><list></list></block><custom-block s="default stitch length"></custom-block></custom-block></script><list></list></block></block></block></script></block-definition><block-definition s="split tracks %&apos;tracks&apos;" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%l"></input></inputs><script><block s="doDeclareVariables"><list><l>strokes</l><l>stroke</l><l>curPoint</l><l>idx</l></list></block><block s="doWarp"><script><block s="doSetVar"><l>strokes</l><block s="reportNewList"><list></list></block></block><block s="doSetVar"><l>stroke</l><block s="reportNewList"><list></list></block></block><block s="doForEach"><l>item</l><block var="tracks"/><script><block s="doIfElse"><block s="reportVariadicAnd"><list><block s="reportIsA"><block var="item"/><l><option>text</option></l></block><block s="reportVariadicEquals"><list><block var="item"/><l>!</l></list></block></list></block><script><block s="doIf"><block s="reportVariadicGreaterThan"><list><block s="reportListAttribute"><l><option>length</option></l><block var="stroke"/></block><l>1</l></list></block><script><block s="doIf"><block s="reportVariadicAnd"><list><block s="reportVariadicNotEquals"><list><block s="reportListItem"><l>1</l><block var="stroke"/></block><block s="reportListItem"><l><option>last</option></l><block var="stroke"/></block></list></block><block s="reportVariadicLessThan"><list><custom-block s="lineLength %l"><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block var="stroke"/></block><block s="reportListItem"><l><option>last</option></l><block var="stroke"/></block></list></block></custom-block><l>10</l></list></block></list></block><script><block s="doAddToList"><block s="reportListItem"><l>1</l><block var="stroke"/></block><block var="stroke"/></block></script><list></list></block><block s="doAddToList"><block var="stroke"/><block var="strokes"/></block></script><list></list></block><block s="doSetVar"><l>stroke</l><block s="reportNewList"><list></list></block></block></script><script><block s="doSetVar"><l>curPoint</l><block var="item"/></block><block s="doIfElse"><block s="reportListContainsItem"><block var="stroke"/><block var="curPoint"/></block><script><block s="doSetVar"><l>idx</l><block s="reportListIndex"><block var="curPoint"/><block var="stroke"/></block></block><block s="doIf"><block s="reportVariadicGreaterThan"><list><block var="idx"/><l>1</l></list></block><script><block s="doAddToList"><block s="reportListItem"><block s="reportNumbers"><l>1</l><block var="idx"/></block><block var="stroke"/></block><block var="strokes"/></block></script><list></list></block><block s="doAddToList"><block var="curPoint"/><block var="stroke"/></block><block s="doAddToList"><block s="reportListItem"><block s="reportNumbers"><block var="idx"/><block s="reportListAttribute"><l><option>length</option></l><block var="stroke"/></block></block><block var="stroke"/></block><block var="strokes"/></block><block s="doSetVar"><l>stroke</l><block s="reportNewList"><list><block var="curPoint"/></list></block></block></script><script><block s="doAddToList"><block var="curPoint"/><block var="stroke"/></block></script></block></script></block></script></block><block s="doIf"><block s="reportVariadicAnd"><list><block s="reportNot"><block s="reportListIsEmpty"><block var="stroke"/></block></block><block s="reportVariadicGreaterThan"><list><block s="reportListAttribute"><l><option>length</option></l><block var="stroke"/></block><l>1</l></list></block></list></block><script><block s="doIf"><block s="reportVariadicAnd"><list><block s="reportVariadicGreaterThan"><list><block s="reportListAttribute"><l><option>length</option></l><block var="stroke"/></block><l>1</l></list></block><block s="reportVariadicAnd"><list><block s="reportVariadicNotEquals"><list><block s="reportListItem"><l>1</l><block var="stroke"/></block><block s="reportListItem"><l><option>last</option></l><block var="stroke"/></block></list></block><block s="reportVariadicLessThan"><list><custom-block s="lineLength %l"><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block var="stroke"/></block><block s="reportListItem"><l><option>last</option></l><block var="stroke"/></block></list></block></custom-block><l>10</l></list></block></list></block></list></block><script><block s="doAddToList"><block s="reportListItem"><l>1</l><block var="stroke"/></block><block var="stroke"/></block></script><list></list></block><block s="doAddToList"><block var="stroke"/><block var="strokes"/></block><block s="doSetVar"><l>stroke</l><block s="reportNewList"><list></list></block></block></script><list></list></block><block s="doReport"><block var="strokes"/></block></script></block></script></block-definition><block-definition s="smallestCloseRegions %&apos;shapes&apos; %&apos;point&apos;" type="reporter" category="sensing"><header></header><code></code><translations>zh_CN:最小包含区域 路径集 _ 点 _&#xD;</translations><inputs><input type="%l"></input><input type="%l"></input></inputs><script><block s="doDeclareVariables"><list><l>target area</l></list></block><block s="doIf"><block s="reportNot"><block s="reportIsA"><block var="shapes"/><l><option>list</option></l></block></block><script><block s="doReport"><block s="reportNewList"><list></list></block></block></script><list></list></block><custom-block s="create %s var %mult%txt"><l>global</l><list><l>note:</l></list></custom-block><custom-block s="set var %s to %s"><l>note:</l><l>decide target area...</l></custom-block><custom-block s="show var %s"><l>note:</l></custom-block><block s="doSetVar"><l>target area</l><block s="evaluate"><block s="reportJSFunction"><list><l>shapes</l><l>point</l></list><l>function findSmallestClosedRegion(paths, point) {&#xD;    // caculate to collect all the line segments&#xD;    const { segments, vertices } = splitPathsAtIntersections(paths);&#xD;    &#xD;    // build the graph&#xD;    const graph = buildGraph(segments, vertices);&#xD;    &#xD;    // find all the closed cycles&#xD;    let allCycles = findUniqueCycles(graph).map(cycle =&gt; cycle.map(point =&gt; point.split(&apos;,&apos;).map(Number)));    &#xD;    &#xD;    // find all the cycles containing the specified point&#xD;    allCycles = allCycles.filter(cycle =&gt; filterDouble(cycle).length &gt; 1);&#xD;&#xD;    const containingCycles = allCycles.filter(cycle =&gt; {&#xD;        return isPointInPolygon(point, [...cycle,cycle[0]]);&#xD;    });&#xD;&#xD;    // find the cycle with the smallest area&#xD;    if (containingCycles.length === 0) return [];&#xD;    &#xD;    let minArea = Infinity;&#xD;    let smallestCycle = null;&#xD;    &#xD;    for (const cycle of containingCycles) {&#xD;        //const polygon = cycleToPolygon(cycle, segments);&#xD;        const polygon = cycle;&#xD;        const area = calculatePolygonArea(polygon);&#xD;        &#xD;        if (area &lt; minArea) {&#xD;            minArea = area;&#xD;            smallestCycle = cycle;&#xD;        }&#xD;    };&#xD;    const containedCyclesAll = allCycles.filter(cycle =&gt; {&#xD;        return isCycleInCycle(cycle,smallestCycle);&#xD;    });    &#xD;    const containedCycles = containedCyclesAll.filter(cycle =&gt; {&#xD;        return !isCycleInCycles(cycle,containedCyclesAll);&#xD;    });&#xD;&#xD;    return [smallestCycle].concat(containedCycles);&#xD;}&#xD;&#xD;function splitPathsAtIntersections(paths) {&#xD;    const segments = [];&#xD;    const vertices = new Map(); &#xD;    const intersections = new Map();&#xD;    const allOriginalSegments = [];&#xD;&#xD;    for (const path of paths) {&#xD;        for (let i = 1; i &lt; path.length; i++) {&#xD;            allOriginalSegments.push([[parseFloat(path[i-1][0]),parseFloat(path[i-1][1])], [parseFloat(path[i][0]),parseFloat(path[i][1])]]);&#xD;        }&#xD;    }&#xD;  &#xD;    for (let i = 0; i &lt; allOriginalSegments.length; i++) {&#xD;        const seg1 = allOriginalSegments[i];&#xD;        &#xD;        for (let j = i+1; j &lt; allOriginalSegments.length; j++) {&#xD;            const seg2 = allOriginalSegments[j];&#xD;            const intersection = getIntersection(seg1, seg2);&#xD;            if (intersection &amp;&amp; !(isEndpoint(intersection, seg1) &amp;&amp; isEndpoint(intersection, seg2))) {&#xD;                if (!intersections.has(i)) intersections.set(i, []);&#xD;                if (!intersections.has(j)) intersections.set(j, []);&#xD;                &#xD;                intersections.get(i).push(intersection);&#xD;                intersections.get(j).push(intersection);&#xD;            }&#xD;        }&#xD;    }&#xD;   &#xD;    for (let i = 0; i &lt; allOriginalSegments.length; i++) {&#xD;        const seg = allOriginalSegments[i];&#xD;        const intPoints = intersections.get(i) || [];&#xD;        &#xD;        &#xD;        intPoints.push(seg[0]);&#xD;        intPoints.push(seg[1]);&#xD;        &#xD;        intPoints.sort((a, b) =&gt; a[0] === b[0] ? a[1] - b[1] : a[0] - b[0]);&#xD;        &#xD;        for (let j = 1; j &lt; intPoints.length; j++) {&#xD;            if (!pointsEqual(intPoints[j-1], intPoints[j])) {&#xD;                const newSeg = [intPoints[j-1], intPoints[j]];&#xD;                const segIndex = segments.length;&#xD;                segments.push(newSeg);&#xD;                &#xD;                for (const pt of newSeg) {&#xD;                    const key = pt.join(&apos;,&apos;);&#xD;                    if (!vertices.has(key)) vertices.set(key, []);&#xD;                    vertices.get(key).push(segIndex);&#xD;                }&#xD;            }&#xD;        }&#xD;    }&#xD;    return { segments, vertices };&#xD;}&#xD;&#xD;function buildGraph(segments, vertices) {&#xD;    const graph = new Map();&#xD;    &#xD;    // create adjacent table for each vertice&#xD;    for (const [pt, segIndices] of vertices.entries()) {&#xD;        const ptCoords = pt.split(&apos;,&apos;).map(Number);&#xD;        const neighbors = new Set();&#xD;        &#xD;        for (const segIndex of segIndices) {&#xD;            const seg = segments[segIndex];&#xD;            const otherPt = pointsEqual(seg[0], ptCoords) ? seg[1] : seg[0];&#xD;            const otherKey = otherPt.join(&apos;,&apos;);&#xD;            neighbors.add(otherKey);&#xD;        }&#xD;        &#xD;        graph.set(pt, Array.from(neighbors));&#xD;    }&#xD;    console.log(&apos;graph:&apos;);&#xD;    console.log(graph);&#xD;    return graph;&#xD;}&#xD;&#xD;function normalizeCycle(cycle) {&#xD;    let minIndex = 0;&#xD;    for (let i = 1; i &lt; cycle.length; i++) {&#xD;        const currentStr = cycle[i].toString();&#xD;        const minStr = cycle[minIndex].toString();&#xD;        if (currentStr &lt; minStr) minIndex = i;&#xD;    }&#xD;    &#xD;    const rearranged = cycle.slice(minIndex, -1).concat(cycle.slice(0, minIndex));&#xD;    const reversed = [...rearranged].reverse();&#xD;    &#xD;    const rearrangedStr = rearranged.toString();&#xD;    const reversedStr = reversed.toString();&#xD;    &#xD;    return rearrangedStr &lt; reversedStr ? rearranged : reversed;&#xD;}&#xD;&#xD;function findAllCycles(graph) {&#xD;    const cycles = [];&#xD;    const visited = new Set();&#xD;	let deadNodes = new Set();&#xD;    &#xD;    function dfs(node, path, startNode) {&#xD;        visited.add(node);&#xD;        path.push(node);&#xD;        &#xD;		const neighbors = graph.get(node) || [];&#xD;		if (deadNodes.has(node)){&#xD;		    for (const neighbor of neighbors || []) {&#xD;		        if ((graph.get(neighbor) || []).length &lt; 3) {&#xD;					deadNodes.add(neighbor);&#xD;				}&#xD;			}&#xD;		};&#xD;        for (const neighbor of neighbors) {&#xD;            if (neighbor === startNode &amp;&amp; path.length &gt;= 3) {&#xD;                cycles.push([...path, startNode]);&#xD;            }&#xD;            &#xD;            if (!visited.has(neighbor)) {&#xD;                dfs(neighbor, path, startNode);&#xD;            }&#xD;        }&#xD;        &#xD;        path.pop();&#xD;        visited.delete(node);&#xD;    }&#xD;    &#xD;    for (const node of graph.keys()) {&#xD;		deadNodes.add(node);&#xD;        dfs(node, [], node);&#xD;        visited.clear();&#xD;		for (const deadNode of deadNodes){&#xD;			graph.delete(deadNode);&#xD;		}&#xD;		deadNodes.clear();&#xD;    }&#xD;    return cycles;&#xD;}&#xD;&#xD;function findUniqueCycles(graph) {&#xD;    const allCycles = findAllCycles(graph);&#xD;    const cycleMap = new Map();&#xD;&#xD;    for (const cycle of allCycles) {&#xD;        const normalized = normalizeCycle(cycle);&#xD;        const key = normalized.toString();&#xD;        const reversedKey = normalized[0].concat(&apos;,&apos;,normalized.slice(1).reverse().toString());&#xD;        &#xD;        if (!cycleMap.has(key) &amp;&amp; !cycleMap.has(reversedKey)) {&#xD;            cycleMap.set(key, normalized);&#xD;        }&#xD;    }&#xD;    &#xD;    return Array.from(cycleMap.values());&#xD;}&#xD;&#xD;function isPointInPolygon(point, polygon, tolerance=1e-10) {&#xD;    const [x, y] = point;&#xD;    let inside = false;&#xD;  &#xD;    if (polygon.length &gt; 0 &amp;&amp; &#xD;        (polygon[0][0] !== polygon[polygon.length-1][0] || &#xD;         polygon[0][1] !== polygon[polygon.length-1][1])) {&#xD;        polygon = [...polygon, polygon[0]];&#xD;    }&#xD;    &#xD;    for (let i = 0, j = polygon.length - 1; i &lt; polygon.length; j = i++) {&#xD;        const [xi, yi] = polygon[i];&#xD;        const [xj, yj] = polygon[j];&#xD;        &#xD;        if (isPointOnSegment([x, y], [xi, yi], [xj, yj], tolerance)) {&#xD;            return false;&#xD;        }&#xD;        &#xD;        const intersect = ((yi &gt; y) !== (yj &gt; y)) &amp;&amp;&#xD;            (x &lt;= (xj - xi) * (y - yi) / (yj - yi) + xi);&#xD;        &#xD;        if (intersect) inside = !inside;&#xD;    }&#xD;    &#xD;    return inside;&#xD;}&#xD;&#xD;function isPointOnSegment(point, segmentStart, segmentEnd, tolerance=1e-10) {&#xD;    const [x, y] = point;&#xD;    const [x1, y1] = segmentStart;&#xD;    const [x2, y2] = segmentEnd;&#xD;    &#xD;   //check if the point is in the circle&#xD;    if (x &lt; Math.min(x1, x2) || x &gt; Math.max(x1, x2) || &#xD;        y &lt; Math.min(y1, y2) || y &gt; Math.max(y1, y2)) {&#xD;        return false;&#xD;    }&#xD;    &#xD;    // check if the point is on the border&#xD;    return Math.abs((x - x1) * (y2 - y) - (y - y1) * (x2 - x)) &lt; tolerance;&#xD;}&#xD;&#xD;function isPointInPolygons(point,polygons,tolerance=1e-10) {&#xD;    for (const polygon of polygons) {&#xD;        if (isPointInPolygon(point,polygon,tolerance)) {&#xD;            return true;&#xD;        }&#xD;    }&#xD;    return false;	&#xD;}&#xD;&#xD;function isCycleInCycle(cycle1,cycle2) {&#xD;    const key1 = cycle1.toString();&#xD;    const key2 = cycle2.toString();&#xD;    const cycle = [...cycle2,cycle2[0]];&#xD;    if (key1 == key2) {&#xD;        return false;&#xD;    }&#xD;	   let count = 0;&#xD;    for (i=0;i&lt;cycle1.length;i++) {&#xD;        if (!isPointInPolygon(cycle1[i],cycle)) {&#xD;            count++;&#xD;        }&#xD;    }&#xD;	   if (count &lt; 2) {&#xD;        return true;&#xD;	   } else {&#xD;		    return false;&#xD;	   }&#xD;}&#xD;&#xD;function isCycleInCycles(cycle,cycles) {&#xD;    for (let i = 0; i&lt; cycles.length; i++) {&#xD;        if (isCycleInCycle(cycle,cycles[i])) {&#xD;            return true;&#xD;        }  &#xD;    }&#xD;    return false;&#xD;}&#xD;&#xD;function calculatePolygonArea(polygon) {&#xD;    let area = 0;&#xD;    const n = polygon.length;&#xD;    &#xD;    for (let i = 0; i &lt; n; i++) {&#xD;        const [x1, y1] = polygon[i];&#xD;        const [x2, y2] = polygon[(i + 1) % n];&#xD;        area += x1 * y2 - x2 * y1;&#xD;    }&#xD;    &#xD;    return Math.abs(area) / 2;&#xD;}&#xD;&#xD;function findPolygonTrajectoryIntersections(polygon, trajectory) {&#xD;    const intersections = [];&#xD;    &#xD;    if (polygon.length &gt; 0 &amp;&amp; &#xD;        (polygon[0][0] !== polygon[polygon.length-1][0] || &#xD;         polygon[0][1] !== polygon[polygon.length-1][1])) {&#xD;        polygon = [...polygon, polygon[0]];&#xD;    }&#xD;&#xD;    for (let i = 0; i &lt; trajectory.length - 1; i++) {&#xD;        const t1 = trajectory[i];&#xD;        const t2 = trajectory[i+1];&#xD;        &#xD;        for (let j = 0; j &lt; polygon.length - 1; j++) {&#xD;            const p1 = polygon[j];&#xD;            const p2 = polygon[j+1];&#xD;            &#xD;            const intersection = getIntersection(&#xD;                [t1, t2], [p1, p2]&#xD;            );&#xD;            &#xD;            if (intersection) {&#xD;                intersections.push(intersection);&#xD;            }&#xD;        }&#xD;    }&#xD;    &#xD;    return intersections;&#xD;}&#xD;    &#xD;function getIntersection(seg1, seg2) {&#xD;    const [p1, p2] = seg1;&#xD;    const [p3, p4] = seg2;&#xD;    &#xD;    const x1 = p1[0], y1 = p1[1];&#xD;    const x2 = p2[0], y2 = p2[1];&#xD;    const x3 = p3[0], y3 = p3[1];&#xD;    const x4 = p4[0], y4 = p4[1];&#xD;    &#xD;    const denom = (y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1);&#xD;    &#xD;    if (denom === 0) return null; // 平行或共线&#xD;    &#xD;    const ua = ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) / denom;&#xD;    const ub = ((x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3)) / denom;&#xD;    &#xD;    if (ua &gt;= 0 &amp;&amp; ua &lt;= 1 &amp;&amp; ub &gt;= 0 &amp;&amp; ub &lt;= 1) {&#xD;        return [&#xD;            roundToN(x1 + ua * (x2 - x1),10),&#xD;            roundToN(y1 + ua * (y2 - y1),10)&#xD;        ];&#xD;    }&#xD;    &#xD;    return null;&#xD;}&#xD;&#xD;function isEndpoint(point, segment) {&#xD;    return pointsEqual(point, segment[0]) || pointsEqual(point, segment[1]);&#xD;}&#xD;&#xD;function pointsEqual(p1, p2) {&#xD;    return Math.abs(p1[0] - p2[0]) &lt; 1e-11 &amp;&amp; Math.abs(p1[1] - p2[1]) &lt; 1e-11;&#xD;}&#xD;&#xD;function roundToN(num, n) {&#xD;    const factor = Math.pow(10, n);&#xD;    return Math.round(num * factor) / factor;&#xD;}&#xD;&#xD;function isShapeClosed(line) {&#xD;    const start = line[0];&#xD;    const end = line[line.length-1];&#xD;    return  roundToN(start[0],8) === roundToN(end[0],8) &amp;&amp; roundToN(start[1],8) === roundToN(end[1],8);&#xD;}&#xD;&#xD;function distanceOf(pt1,pt2) {&#xD;    return Math.sqrt((pt2[0]-pt1[0])**2 + (pt2[1]-pt1[1])**2);&#xD;}&#xD;&#xD;function filterDouble(path) {&#xD;    if (path.length === 0) {&#xD;        return [];&#xD;    }&#xD;    let result = [path[0]];&#xD;    for(let i=1;i&lt;path.length;i++){&#xD;        if ( distanceOf(result[result.length-1],path[i]) &gt; 0.1 ) {&#xD;            result.push(path[i]);&#xD;        }   &#xD;    }&#xD;    return result;&#xD;}&#xD;&#xD;function splitPathsAtIntersectionsForMergedPolygons(paths) {&#xD;    const segments = [];&#xD;    const vertices = new Map(); &#xD;    const intersections = new Map();&#xD;    const allOriginalSegments = [];&#xD;&#xD;    for (const path of paths) {&#xD;        for (let i = 1; i &lt; path.length; i++) {&#xD;            allOriginalSegments.push([[parseFloat(path[i-1][0]),parseFloat(path[i-1][1])], [parseFloat(path[i][0]),parseFloat(path[i][1])]]);&#xD;        }&#xD;    }&#xD;  &#xD;    for (let i = 0; i &lt; allOriginalSegments.length; i++) {&#xD;        const seg1 = allOriginalSegments[i];&#xD;        &#xD;        for (let j = i+1; j &lt; allOriginalSegments.length; j++) {&#xD;            const seg2 = allOriginalSegments[j];&#xD;            const intersection = getIntersection(seg1, seg2);&#xD;            if (intersection &amp;&amp; !isEndpoint(intersection, seg1) &amp;&amp; !isEndpoint(intersection, seg2)) {&#xD;                if (!intersections.has(i)) intersections.set(i, []);&#xD;                if (!intersections.has(j)) intersections.set(j, []);&#xD;                &#xD;                intersections.get(i).push(intersection);&#xD;                intersections.get(j).push(intersection);&#xD;            }&#xD;        }&#xD;    }&#xD;&#xD;    const removedSegments = [];   &#xD;    for (let i = 0; i &lt; allOriginalSegments.length; i++) {&#xD;        const seg = allOriginalSegments[i];&#xD;        const intPoints = intersections.get(i) || [];&#xD;        &#xD;        &#xD;        intPoints.push(seg[0]);&#xD;        intPoints.push(seg[1]);&#xD;        &#xD;        intPoints.sort((a, b) =&gt; a[0] === b[0] ? a[1] - b[1] : a[0] - b[0]);&#xD; &#xD;        for (let j = 1; j &lt; intPoints.length; j++) {&#xD;            if (!pointsEqual(intPoints[j-1], intPoints[j])) {&#xD;				            if (!(isPointInPolygons(intPoints[j-1],paths)) &amp;&amp; !(isPointInPolygons(intPoints[j],paths))){&#xD;                    const newSeg = [intPoints[j-1], intPoints[j]];&#xD;                    const segIndex = segments.length;&#xD;                    segments.push(newSeg);&#xD;                &#xD;                    for (const pt of newSeg) {&#xD;                        const key = pt.join(&apos;,&apos;);&#xD;                        if (!vertices.has(key)) vertices.set(key, []);&#xD;                        vertices.get(key).push(segIndex);&#xD;                    }&#xD;				            } else {&#xD;                    removedSegments.push([intPoints[j-1], intPoints[j]]);&#xD;                }&#xD;            }&#xD;        }&#xD;    }&#xD;    return { segments, vertices };&#xD;}&#xD;&#xD;function borderOfMergedPolygons(polygons){&#xD;    // caculate to collect all the line segments&#xD;    const { segments, vertices } = splitPathsAtIntersectionsForMergedPolygons(polygons);&#xD;    // build the graph&#xD;    const graph = buildGraph(segments, vertices);	&#xD;	   allCycles = findUniqueCycles(graph).map(cycle =&gt; cycle.map(point =&gt; point.split(&apos;,&apos;).map(Number)));&#xD;    allCycles = allCycles.map(cycle =&gt; [...cycle,cycle[0]]);&#xD;	return allCycles;&#xD;}&#xD;&#xD;function normalizeLine(path) {&#xD;    if (path.length &lt; 2) return [path];&#xD;    const segments = [];&#xD;    const intersections = new Map();&#xD;    const allOriginalSegments = [];&#xD;    let newPoints = [];&#xD;    let result = [];&#xD;&#xD;    for (let i = 1; i &lt; path.length; i++) {&#xD;        allOriginalSegments.push([[parseFloat(path[i-1][0]),parseFloat(path[i-1][1])], [parseFloat(path[i][0]),parseFloat(path[i][1])]]);&#xD;    }&#xD;&#xD;    for (let i = 0; i &lt; allOriginalSegments.length; i++) {&#xD;        const seg1 = allOriginalSegments[i];&#xD;        &#xD;        for (let j = i+1; j &lt; allOriginalSegments.length; j++) {&#xD;            const seg2 = allOriginalSegments[j];&#xD;            const intersection = getIntersection(seg1, seg2);&#xD;            if (intersection &amp;&amp; !(isEndpoint(intersection, seg1) &amp;&amp; isEndpoint(intersection, seg2))) {&#xD;                if (!intersections.has(i)) intersections.set(i, []);&#xD;                if (!intersections.has(j)) intersections.set(j, []);&#xD;                &#xD;                intersections.get(i).push(intersection);&#xD;                intersections.get(j).push(intersection);&#xD;            }&#xD;       }&#xD;    }&#xD;    for (let i = 0; i &lt; allOriginalSegments.length; i++) {&#xD;        const seg = allOriginalSegments[i];&#xD;        const intPoints = intersections.get(i) || [];&#xD;        &#xD;        &#xD;        intPoints.push(seg[0]);&#xD;        intPoints.push(seg[1]);&#xD;        &#xD;        intPoints.sort((a, b) =&gt; {&#xD;            if (seg[0][0] &lt; seg[1][0]) {&#xD;                return a[0] - b[0];&#xD;            } else if (seg[0][0] &gt; seg[1][0]) {&#xD;                return b[0] - a[0];&#xD;            } else if (seg[0][1] &lt; seg[1][1]) {&#xD;                return a[1] - b[1];&#xD;            } else {&#xD;                return b[1] - a[1];&#xD;            } &#xD;        });&#xD;        &#xD;        for (let j = 0; j &lt; intPoints.length-1; j++) {&#xD;            if (!pointsEqual(intPoints[j], intPoints[j+1])) {&#xD;                if (newPoints.length === 0 || !pointsEqual(intPoints[j],newPoints[newPoints.length-1])) {&#xD;                    newPoints.push(intPoints[j]);&#xD;                }&#xD;            }&#xD;        }&#xD;        if (i === allOriginalSegments.length-1){&#xD;            newPoints.push(intPoints[intPoints.length-1]);&#xD;        } &#xD;    }&#xD;&#xD;	   const tolerance = 1e-6; &#xD;    let currentPath = [];&#xD;    for (let i=0;i&lt;newPoints.length;i++) {&#xD;	       const curPoint = newPoints[i];&#xD;		      const pointExists = currentPath.some(p =&gt; JSON.stringify(p) === JSON.stringify(curPoint));&#xD;		      if (pointExists) {&#xD;            const index = currentPath.findIndex(p =&gt; &#xD;                Math.abs(p[0] - curPoint[0]) &lt; tolerance &amp;&amp; &#xD;                Math.abs(p[1] - curPoint[1]) &lt; tolerance&#xD;            );&#xD;            if (index &gt; 0) {&#xD;                result.push(currentPath.slice(0,index+1));&#xD;            }&#xD;			         currentPath.push(curPoint);&#xD;            result.push(currentPath.slice(index));&#xD;            currentPath = [curPoint];&#xD;        } else {&#xD;            currentPath.push(curPoint);&#xD;        }		&#xD;	   }&#xD;	   if (currentPath.length &gt; 1) {&#xD;		      result.push(currentPath);&#xD;   	}&#xD; &#xD;    return result;&#xD;}&#xD;&#xD;if (shapes.length === 0) {&#xD;    return new List([]);&#xD;}&#xD;&#xD;var rawlines = shapes.asArray().map(shape =&gt; shape.asArray().map(p =&gt; p.asArray()));&#xD;var lines = [];&#xD;let lineParts;&#xD;for (const line of rawlines) {&#xD;	   const newline = [line[0]];&#xD;    for (let i=1;i&lt;line.length-1;i++) {&#xD;		      if (!isPointOnSegment(line[i],line[i-1],line[i+1])){&#xD;			        newline.push(line[i]);&#xD;		      }&#xD;	   }&#xD;	   newline.push(line[line.length-1]);&#xD;    if (isShapeClosed(newline) &amp;&amp; newline.length &lt; 50) {&#xD;        fnl = filterDouble(newline);&#xD;        if (fnl.length &gt; 1) {&#xD;            lines.push(newline);&#xD;        }&#xD;    } else {&#xD;        lineParts = normalizeLine(newline);&#xD;        for (const lp of lineParts) {&#xD;            const flp = filterDouble(lp);&#xD;            if (flp.length &gt; 1) {&#xD;                lines.push(flp);&#xD;            }&#xD;        }&#xD;    }&#xD;};&#xD;console.log(&apos;lines:&apos;);&#xD;console.log(lines);&#xD;var innerPoint = [parseFloat(point.asArray()[0]),parseFloat(point.asArray()[1])];&#xD;var disclosedLines = lines.filter(line =&gt; !pointsEqual(line[0],line[line.length-1]));&#xD;var closedLines = lines.filter(line =&gt; pointsEqual(line[0],line[line.length-1]));&#xD;var li = 0;&#xD;var closeRegion = findSmallestClosedRegion([lines[0]], innerPoint);&#xD;while (closeRegion.length === 0 &amp;&amp; li &lt; lines.length -1 ) {&#xD;    li++;&#xD;    closeRegion = findSmallestClosedRegion([lines[li]], innerPoint);&#xD;};&#xD;&#xD;if (closeRegion.length !== 0) {&#xD;    var linesRest = lines.filter((_, index) =&gt; index !== li);   &#xD;    var relatedStrokes = linesRest.filter(stroke =&gt; {&#xD;                             let pointIn = stroke.filter(point =&gt; isPointInPolygon(point,closeRegion[0]));&#xD;                             let intersections = findPolygonTrajectoryIntersections(closeRegion[0], stroke);                             &#xD;                             const pointInUni = [&#xD;                                 ...new Map(pointIn.map(p =&gt; [p.join(&apos;,&apos;), p])).values()&#xD;                             ];&#xD;                             const intersectionsUni = [&#xD;                                 ...new Map(intersections.map(p =&gt; [p.join(&apos;,&apos;), p])).values()&#xD;                             ];&#xD;                             if (pointInUni.length &gt; 0 || intersectionsUni.length &gt; 1) {&#xD;                                 return true;&#xD;                             }else{&#xD;                                 return false;&#xD;                             };&#xD;                         });&#xD;&#xD;    let seperatedStrokes = [];&#xD;    var smallestCycle = closeRegion;&#xD;    for (const stroke of relatedStrokes) {&#xD;        let intersections = findPolygonTrajectoryIntersections(smallestCycle[0], stroke);&#xD;        let pointIn = stroke.filter(point =&gt; isPointInPolygon(point,smallestCycle[0]));&#xD;        const pointInUni = [&#xD;            ...new Map(pointIn.map(p =&gt; [p.join(&apos;,&apos;), p])).values()&#xD;        ];&#xD;        const intersectionsUni = [&#xD;            ...new Map(intersections.map(p =&gt; [p.join(&apos;,&apos;), p])).values()&#xD;        ];&#xD;        const pointInCount = pointInUni.length;&#xD;        const intersectionsCount = intersectionsUni.length;&#xD;        const strokeIsClosed = pointsEqual(stroke[0],stroke[stroke.length-1]);&#xD;        if ( intersectionsCount &gt; 1 &amp;&amp; strokeIsClosed){&#xD;            console.log(&apos;stroke:&apos;);&#xD;            console.log(stroke);&#xD;            smallestCycle = smallestCycle.map(cycle =&gt; [...cycle,cycle[0]]);&#xD;            smallestCycle = findSmallestClosedRegion([...smallestCycle,stroke], innerPoint);&#xD;        } else {&#xD;            &#xD;            seperatedStrokes.push(stroke);&#xD;        }     &#xD;    }&#xD;    if (seperatedStrokes.length &gt; 0){&#xD;        seperatedStrokes = seperatedStrokes.concat(smallestCycle.map(cycle =&gt; [...cycle,cycle[0]]));&#xD;        smallestCycle = findSmallestClosedRegion(seperatedStrokes, innerPoint);&#xD;    }    &#xD;} else {&#xD;	   const bordersOfClosedLines = borderOfMergedPolygons(closedLines);&#xD;    var smallestCycle  = findSmallestClosedRegion(disclosedLines.concat(bordersOfClosedLines), innerPoint);&#xD;};&#xD;&#xD;if (smallestCycle.length === 0) {&#xD;    return new List([]);&#xD;};&#xD;&#xD;&#xD;let result = [];&#xD;for (const cycle of smallestCycle) {&#xD;    for (const point of cycle) {&#xD;        result.push(point);&#xD;    }&#xD;    result.push(cycle[0]);&#xD;    result.push(&apos;!&apos;);&#xD;};&#xD;result.pop();&#xD;&#xD;return new List(result.map(p =&gt; {&#xD;    if (p != &apos;!&apos;) {&#xD;        return new List(p);&#xD;    }else{&#xD;        return &apos;!&apos;;&#xD;    }&#xD;}));&#xD;&#xD;</l></block><list><block var="shapes"/><block var="point"/></list></block></block><custom-block s="delete var %mult%txt"><list><l>note:</l></list></custom-block><block s="doReport"><block var="target area"/></block></script></block-definition><block-definition s="delete var %&apos;_names&apos;" type="command" category="variables"><comment x="0" y="0" w="217" collapsed="false">This block deletes all the variables with the names given (inside input list).&#xD;&#xD;Each name will make only one variable deletion, and this will be the variable found following the scope order: &apos;script&apos; -&gt; &apos;sprite&apos; -&gt; &apos;global&apos;.&#xD;&#xD;If we have a &quot;testing&quot; sprite variable and also a &quot;testing&quot; global one, deleting &quot;testing&quot; will delete only the sprite one (Yes! we can also do &quot;delete var (testing, testing)&quot; to delete both.&#xD;&#xD;If one variable does not exists (in any scope) an error happens, stopping block action in that point. You can check it before with the &quot;does var (name) exists?&quot;block. </comment><header></header><code></code><translations>pt:remove as variáveis _&#xD;ca:esborra les variables _&#xD;es:borrar variables _&#xD;de:löschen var _&#xD;</translations><inputs><input type="%mult%txt"></input></inputs><script><block s="doWarp"><script><block s="doForEach"><l>_item</l><block var="_names"/><script><block s="doApplyExtension"><l>err_ignore</l><list><custom-block s="var %s"><block var="_item"/></custom-block></list></block><block s="doApplyExtension"><l>var_delete(name)</l><list><block var="_item"/></list></block></script></block></script></block></script></block-definition><block-definition s="show var %&apos;_name&apos;" type="command" category="variables"><comment x="0" y="0" w="181" collapsed="false">This block turns on (show) the watcher view on stage (if it was not already activated) of the variable with the given name (slot input).&#xD;&#xD;It can only access to the closest variable scope (if there different variables with the same name in different scopes) following the order &apos;script&apos; -&gt; &apos;sprite&apos; -&gt; &apos;global&apos;.&#xD;&#xD;No errors if that variable does not exist.</comment><header></header><code></code><translations>ca:mostra la variable _&#xD;es:mostrar variable _&#xD;pt:mostra a variável _&#xD;de:zeige var _&#xD;</translations><inputs><input type="%s"><options>§_getVarNamesDict</options></input></inputs><script><block s="doApplyExtension"><l>var_show(name)</l><list><block var="_name"/></list></block></script></block-definition><variables><variable name="unit_size"><l>2048</l></variable><variable name="chars_geometry_1"><list id="2"><item><list struct="atomic" id="3">0,M703 1198q143 0 229.5 -105t86.5 -314q0 -297 -149.5 -552.5t-362.5 -255.5q-125 0 -211.5 109t-86.5 297q0 221 86 432.5t194 300t214 88.5zM685 1139q-62 0 -126.5 -82.5t-119 -302t-54.5 -418.5q0 -160 46.5 -233t106.5 -73q53 0 105 53q77 79 139 297.5t62 439.5 q0 171 -52 256q-39 63 -107 63z</list></item><item><list struct="atomic" id="4">1,M856 1209h32l-138 -540l-115 -501q-17 -63 -17 -85q0 -17 17 -27.5t77 -16.5q45 -4 88 -12l-20 -50q-215 23 -300 23q-124 0 -269 -23l17 50q52 14 119 28q66 13 90 40q33 35 69 168l108 413q53 236 53 267q0 35 -29 35q-22 0 -201 -80l-20 50q260 124 318 164.5 t121 96.5z</list></item><item><list struct="atomic" id="5">2,M403 898l-51 25q79 157 163.5 217.5t189.5 60.5q126 0 201 -80t75 -187q0 -66 -27 -134t-89 -142q-40 -49 -220 -203q-242 -210 -340 -339q131 6 270 6q45 0 78 -1q73 -3 100 14t89 114h69q-81 -112 -141 -275q-71 13 -150 19.5t-166 6.5q-103 0 -303 -13l20 63 q91 135 272 305q179 168 231 235q75 97 109 183q26 64 26 124q0 90 -49 144t-121 54q-60 0 -117.5 -43t-118.5 -154z</list></item><item><list struct="atomic" id="6">3,M426 964l-41 29q102 116 150 147q87 56 177 56q92 0 145 -47t53 -121q0 -156 -236 -331q81 -4 123 -29t68.5 -76.5t26.5 -122.5q0 -193 -195 -359q-167 -142 -343 -142q-79 0 -142.5 36t-63.5 89q0 22 16.5 38.5t38.5 16.5q30 0 69 -37q51 -49 76 -61q35 -17 62 -17 q78 0 174 92q142 134 142 296q0 81 -44.5 129.5t-114.5 48.5q-51 0 -116 -23l7 62q128 45 230 159q72 80 72 162q0 62 -31.5 97t-85.5 35q-114 0 -217 -127z</list></item><item><list struct="atomic" id="7">4,M932 408l-21 -105h-155l-72 -333h-141l72 333q-325 2 -414 -3q-12 -1 -19 -1q-29 0 -29 21q0 8 24 49q114 194 326.5 421.5t445.5 413.5h28l-42 -161l-88 -350l-67 -285h152zM637 408q9 50 40 174l97 391q-195 -185 -285.5 -287.5t-214.5 -277.5h363z</list></item><item><list struct="atomic" id="8">5,M1019 1225h55l-71 -148q-10 -15 -31.5 -23.5t-93.5 -8.5q-214 0 -290 -11q-17 -43 -26 -72t-9 -44q0 -38 59 -63q106 -44 150 -85t70 -104t26 -146q0 -213 -168 -379.5t-374 -166.5q-96 0 -147 31q-36 23 -36 63q0 26 16 43t38 17q14 0 22 -3t40 -24q41 -28 66.5 -36 t62.5 -8q138 0 247.5 116t109.5 258q0 95 -54 171t-155 117q-42 18 -56 35t-14 43q0 29 33 132l68 212q38 19 103 24l214 4q73 3 98 14.5t47 41.5z</list></item><item><list struct="atomic" id="9">6,M1093 1200l-12 -60q-166 -7 -282 -61.5t-197.5 -154t-131.5 -264.5q56 46 113 68.5t115 22.5q114 0 184 -80t70 -230q0 -206 -121 -346q-105 -122 -268 -122q-138 0 -226.5 105t-88.5 292q0 222 115 420t302.5 304.5t427.5 105.5zM451 582q-27 -156 -27 -257 q0 -158 48 -227.5t120 -69.5q78 0 124 75q61 97 61 285q0 155 -42 219.5t-103 64.5q-38 0 -83.5 -22.5t-97.5 -67.5z</list></item><item><list struct="atomic" id="10">7,M429 922h-51q4 14 24 76q38 121 53 188q107 -17 350 -17q165 0 321 4q-334 -425 -419 -552q-148 -220 -200 -341q-25 -58 -39 -162q-14 -105 -36 -134t-57 -29q-31 0 -54 26t-23 64q0 94 70 221q100 183 453 617l130 161h-376q-67 0 -89.5 -17.5t-56.5 -104.5z</list></item><item><list struct="atomic" id="11">8,M741 671q170 -170 170 -320q0 -145 -122.5 -261.5t-298.5 -116.5q-144 0 -218.5 78.5t-74.5 171.5q0 62 31 126.5t97 125.5q51 48 234 160q-107 121 -107 248q0 129 99 222.5t243 93.5q106 0 172.5 -58t66.5 -137t-61 -155q-80 -100 -231 -178zM696 724 q140 97 182.5 155.5t42.5 109.5q0 59 -43.5 101.5t-108.5 42.5q-77 0 -131 -54t-54 -130q0 -105 112 -225zM602 590q-160 -112 -214.5 -194t-54.5 -168q0 -82 57 -138.5t141 -56.5q61 0 118 33.5t91.5 95t34.5 123.5q0 57 -33.5 123.5t-139.5 181.5z</list></item><item><list struct="atomic" id="12">9,M147 -26l12 59q166 7 282 62t197.5 154t131.5 265q-55 -46 -112 -69t-116 -23q-114 0 -184 80.5t-70 230.5q0 205 121 345q105 122 268 122q138 0 226.5 -105t88.5 -292q0 -221 -115 -419.5t-302.5 -305t-427.5 -104.5zM789 591q27 156 27 257q0 159 -48 228t-120 69 q-78 0 -124 -74q-61 -98 -61 -286q0 -155 42 -219t103 -64q39 0 84 22.5t97 66.5z</list></item><item><list struct="atomic" id="13">!,M433 330h-58q65 477 93 808q1 19 9 27q15 14 57 25q69 18 96 18q21 0 21 -21q0 -14 -8 -37q-13 -38 -88 -326zM379 216q39 0 65.5 -29.5t26.5 -74.5q0 -65 -31 -102t-78 -37q-39 0 -65.5 27.5t-26.5 70.5q0 63 37 110q27 35 72 35z</list></item><item><list struct="atomic" id="14">&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;,M565 683l78 384q16 80 38 105.5t52 25.5q20 0 31 -11t11 -31q0 -13 -20 -72l-136 -391q-12 -36 -32 -36q-27 0 -22 26zM306 683l77 384q17 80 38.5 105.5t52.5 25.5q20 0 31 -11t11 -31q0 -13 -20 -72l-136 -391q-12 -36 -32 -36q-27 0 -22 26z</list></item><item><list struct="atomic" id="15">#,M476 27l113 350h-244l36 110h244l78 244h-245l37 110h244l107 336h116l-107 -336h228l107 336h116l-108 -336h245l-36 -110h-244l-78 -244h244l-36 -110h-244l-113 -350h-116l113 350h-228l-113 -350h-116zM741 487h228l78 244h-228z</list></item><item><list struct="atomic" id="16">$,M768 1332h64l-34 -141h22q78 0 128.5 -36t50.5 -77q0 -25 -19 -44t-44 -19q-19 0 -33 7q-9 4 -47 38q-33 30 -79 41l-109 -425q97 -86 135 -155t38 -138q0 -136 -96.5 -250t-250.5 -147l-66 -255h-64l64 244q-25 -2 -48 -2q-119 0 -162.5 27.5t-43.5 70.5q0 27 19 47 t43 20q21 0 80 -32q44 -24 58 -28q28 -8 74 -12l122 482q-92 83 -123 141.5t-31 131.5q0 126 89 229t226 131zM713 1107q-91 -19 -139 -77.5t-48 -132.5q0 -76 89 -171zM514 70q104 20 163.5 85.5t59.5 147.5q0 47 -18 82.5t-94 116.5z</list></item><item><list struct="atomic" id="17">%,M489 -7q85 142 146 252l366 667q88 163 151 286q24 -7 80 -14q-92 -149 -174 -298l-321 -585q-88 -160 -164 -316q-19 4 -51 6q-11 0 -33 2zM645 1198q83 0 135.5 -57.5t52.5 -162.5q0 -175 -108 -310q-87 -110 -205 -110q-82 0 -135.5 58.5t-53.5 155.5q0 156 89.5 291 t224.5 135zM631 1156q-63 0 -117.5 -125.5t-54.5 -277.5q0 -78 24 -115t55 -37q56 0 101 97q66 142 66 304q0 78 -26 122q-20 32 -48 32zM1206 625q83 0 135.5 -57.5t52.5 -162.5q0 -175 -108 -310q-87 -110 -205 -110q-82 0 -135.5 58.5t-53.5 155.5q0 156 89.5 291 t224.5 135zM1192 583q-63 0 -117.5 -125.5t-54.5 -277.5q0 -78 24 -115t55 -37q56 0 101 97q66 142 66 304q0 78 -26 122q-20 32 -48 32z</list></item><item><list struct="atomic" id="18">&amp;,M1509 1138q-29 -59 -47.5 -115t-58.5 -223q-68 -286 -115 -388q-65 -139 -191 -257q127 -139 198 -179t141 -40q78 0 132 43.5t54 94.5q0 19 -12 50q-13 35 -13 52q0 28 17 45.5t43 17.5q28 0 46 -20.5t18 -58.5q0 -118 -96.5 -208.5t-227.5 -90.5q-58 0 -115.5 21.5 t-109.5 63.5q-35 29 -140 151q-159 -126 -340 -126q-199 0 -329 126t-130 313q0 181 126 307t300 126q95 0 143.5 -37t48.5 -87q0 -114 -208 -163q89 -34 167 -98q102 -82 241 -247q43 51 71 98.5t55 123.5q18 47 57 203q36 145 51 188q33 95 66.5 167.5t78.5 146.5 q-179 1 -252 -33q-104 -48 -104 -136q0 -26 14 -93q5 -25 5 -41q0 -24 -15.5 -40t-39.5 -16q-28 0 -47 24t-19 69q0 93 58.5 181.5t153.5 130t270 41.5q28 0 52 -1q87 -5 97 -5q39 0 59 16.5t20 42.5q0 10 -6 36q-6 24 -6 34q0 26 16 43t40 17q25 0 43 -21t18 -57 q0 -73 -70 -129t-208 -63zM471 596q140 -3 191 26t51 77q0 35 -25 57.5t-67 22.5q-99 0 -180 -86.5t-81 -201.5q0 -90 60 -185t159 -152t204 -57q102 0 207 60q-167 201 -196 229q-57 55 -132 102t-191 92v16z</list></item><item><list struct="atomic" id="19">&apos;,M374 683l77 384q17 80 38.5 105.5t52.5 25.5q20 0 31 -11t11 -31q0 -13 -20 -72l-136 -391q-12 -36 -32 -36q-27 0 -22 26z</list></item><item><list struct="atomic" id="20">(,M971 1389q0 -16 -36 -31q-61 -26 -200.5 -162.5t-235.5 -305t-155 -380t-59 -409.5q0 -121 16 -219t47 -180q48 -128 77 -177q10 -17 10 -25q0 -21 -17 -21q-13 0 -32 25q-82 106 -141 296.5t-59 376.5q0 245 85.5 461t222 402t333.5 311q95 60 123 60q21 0 21 -22z</list></item><item><list struct="atomic" id="21">),M-145 -499q0 17 36 32q61 26 200.5 162.5t235.5 305t155 380t59 409.5q0 121 -16 219t-47 180q-48 128 -77 177q-10 17 -10 25q0 21 17 21q13 0 32 -25q82 -106 141 -296.5t59 -376.5q0 -246 -85.5 -461.5t-222 -402t-333.5 -310.5q-95 -61 -123 -61q-21 0 -21 22z</list></item><item><list struct="atomic" id="22">*,M658 1412q20 -118 64 -240q33 -5 53 -5q63 0 195 17q10 -24 17 -49q-117 -64 -213 -141q30 -102 95 -223q-19 -15 -40 -29q-104 86 -198 152q-89 -53 -196 -152q-25 14 -45 33q63 121 98 219q-103 78 -208 141q7 25 17 49q121 -14 182 -14q20 0 63 2q44 130 60 240l28 1 q9 0 28 -1zM634 1152q-43 0 -73.5 -30.5t-30.5 -73.5t30.5 -74t73.5 -31q44 0 74.5 31t30.5 74t-30.5 73.5t-74.5 30.5z</list></item><item><list struct="atomic" id="23">+,M661 643v385h111v-385h387v-111h-387v-391h-111v391h-387v111h387z</list></item><item><list struct="atomic" id="24">&quot;&quot;&quot;&quot;,&quot;&quot;&quot;&quot;,M56 -311l-19 65q91 70 140 138q32 45 32 74t-24 74q-24 46 -24 76q0 38 27 66t64 28q41 0 70.5 -33.5t29.5 -80.5q0 -54 -30 -122.5t-91 -133.5q-83 -90 -175 -151z</list></item><item><list struct="atomic" id="25">-,M194 460h463l-24 -99h-465z</list></item><item><list struct="atomic" id="26">.,M258 216q39 0 65.5 -29.5t26.5 -74.5q0 -65 -31 -102t-78 -37q-39 0 -65.5 27.5t-26.5 70.5q0 63 37 110q27 35 72 35z</list></item><item><list struct="atomic" id="27">/,M-23 -384l991 1769h104l-991 -1769h-104z</list></item><item><list struct="atomic" id="28">:,M401 832q39 0 65.5 -29t26.5 -74q0 -66 -31 -102.5t-78 -36.5q-39 0 -65.5 27.5t-26.5 70.5q0 62 37 109q27 35 72 35zM258 216q39 0 65.5 -29.5t26.5 -74.5q0 -65 -31 -102t-78 -37q-39 0 -65.5 27.5t-26.5 70.5q0 63 37 110q27 35 72 35z</list></item><item><list struct="atomic" id="29">;,M413 832q38 0 65 -29t27 -74q0 -66 -31 -102.5t-78 -36.5q-39 0 -65.5 27.5t-26.5 70.5q0 62 37 109q27 35 72 35zM54 -311l-19 65q91 70 140 138q32 45 32 74t-24 74q-24 46 -24 76q0 38 27 66t64 28q41 0 70.5 -33.5t29.5 -80.5q0 -54 -30 -122.5t-91 -133.5 q-83 -90 -175 -151z</list></item><item><list struct="atomic" id="30">&lt;,M1115 231v-108l-893 410v95l893 409v-107l-751 -351z</list></item><item><list struct="atomic" id="31">=,M1159 815v-113h-885v113h885zM1159 473v-113h-885v113h885z</list></item><item><list struct="atomic" id="32">&gt;,M331 231l751 348l-751 351v107l893 -409v-95l-893 -410v108z</list></item><item><list struct="atomic" id="33">?,M340 329h-64q18 198 46 253q19 39 87 61q201 66 272 141q70 74 70 164q0 72 -38 114t-94 42q-48 0 -121 -55q-31 -23 -39 -27q-13 -5 -28 -5q-25 0 -43.5 18.5t-18.5 43.5q0 44 51 82t128 38q120 0 204 -88.5t84 -223.5q0 -137 -95 -242q-60 -68 -223 -129 q-124 -47 -143.5 -68.5t-34.5 -118.5zM288 216q39 0 65.5 -29.5t26.5 -74.5q0 -65 -31 -102t-78 -37q-39 0 -65.5 27.5t-26.5 70.5q0 63 37 110q27 35 72 35z</list></item><item><list struct="atomic" id="34">@,M1131 1010l57 13q-42 -145 -82 -301.5t-61 -277.5q-7 -35 -7 -50q0 -21 9.5 -32.5t24.5 -11.5q38 0 99 51q86 72 134.5 173t48.5 204q0 157 -101.5 258t-263.5 101q-156 0 -289 -84.5t-222.5 -258t-89.5 -351.5q0 -117 54 -225q41 -81 130 -132.5t194 -51.5 q226 0 475 201l34 -40q-255 -227 -553 -227q-218 0 -340.5 119t-122.5 324q0 208 105 393.5t284.5 294.5t364.5 109q132 0 244 -56t171.5 -145t59.5 -182q0 -146 -98 -290.5t-260 -228.5q-116 -60 -182 -60q-23 0 -35.5 12.5t-12.5 33.5q0 28 39 149q-88 -98 -163 -147 t-137 -49q-40 0 -72.5 44.5t-32.5 116.5q0 127 84.5 276t195.5 223t240 74q21 0 60 -3zM1028 879q-42 9 -69 9q-76 0 -139.5 -45t-110.5 -154t-47 -221q0 -54 20 -79.5t55 -25.5q36 0 70 20q48 28 85.5 77.5t49.5 87.5l34 134z</list></item><item><list struct="atomic" id="35">A,M1299 44l-10 -57q-36 -3 -63 -3q-39 0 -94 6q-94 10 -119 10q-42 0 -129 -13q31 78 52 164q15 61 32 210q-117 1 -363 -5q-254 -388 -372.5 -487.5t-225.5 -99.5q-56 0 -83.5 21.5t-27.5 55.5q0 26 16 43t40 17q14 0 38 -5q60 -14 80 -14q67 0 148 76q132 124 390 520 q292 448 473 652q-247 -22 -308 -42q-84 -27 -126 -80t-42 -108q0 -18 13 -51q14 -37 14 -54q0 -22 -17 -39t-41 -17q-34 0 -54.5 25.5t-20.5 76.5q0 72 37.5 139.5t107.5 113t175 69.5q54 13 190 23q118 10 148 19q47 13 90 51q-30 -123 -43 -215l-78 -578l-45 -414 q74 -19 133 -19q39 0 85 9zM977 435q48 406 96 593q-127 -168 -157 -212l-257 -381q83 -3 237 -3q38 0 81 3z</list></item><item><list struct="atomic" id="36">B,M642 959l12 48q114 8 246 40q-35 -103 -51 -166l-54 -223q177 0 266.5 88.5t89.5 210.5q0 85 -64.5 137t-192.5 52q-181 0 -345 -86t-255.5 -224.5t-91.5 -277.5q0 -38 10.5 -70.5t30.5 -59.5q12 -16 53 -44q46 -32 57 -47.5t11 -36.5t-15.5 -36.5t-37.5 -15.5 q-57 0 -115.5 83t-58.5 205q0 168 100.5 325.5t284.5 252.5t405 95q180 0 273.5 -71t93.5 -173q0 -97 -63 -176.5t-191 -122.5q88 -14 139 -47.5t78.5 -84.5t27.5 -117q0 -108 -63.5 -204.5t-187 -160t-257.5 -63.5q-39 0 -167 8q-61 3 -128 3q-102 0 -181 -16l15 55 q105 6 149.5 50.5t83.5 196.5l148 581q9 37 9 56q0 15 -12.5 26.5t-31.5 11.5q-8 0 -20 -2zM779 598l-51 -201q-39 -156 -75 -240q-21 -50 -54 -85q90 -22 155 -22q175 0 264.5 108t89.5 241q0 66 -33.5 113.5t-88 66.5t-207.5 19z</list></item><item><list struct="atomic" id="37">C,M1192 764h-54q5 78 5 125q0 141 -58.5 196.5t-147.5 55.5q-119 0 -247 -96.5t-220 -301t-92 -420.5q0 -209 85.5 -320.5t214.5 -111.5q175 0 321 210q15 21 31 21q13 0 22 -8.5t9 -19.5q0 -27 -66.5 -106t-167.5 -131.5t-199 -52.5q-118 0 -219 61.5t-157 175.5t-56 271 q0 219 114.5 436t286.5 335t336 118q59 0 117 -13q25 -6 206 -69q-57 -172 -64 -355z</list></item><item><list struct="atomic" id="38">D,M650 962l10 43q109 9 257 44q-43 -111 -76 -252l-66 -279q-71 -302 -160 -456q86 -17 152 -17q175 0 305 73.5t206.5 214.5t76.5 311q0 223 -130 358.5t-340 135.5q-177 0 -334 -84t-248.5 -222.5t-91.5 -269.5q0 -128 112 -188q32 -18 41.5 -31t9.5 -32 q0 -24 -18.5 -42.5t-42.5 -18.5q-53 0 -103 70q-68 98 -68 201q0 172 102.5 332.5t285.5 255.5t407 95q276 0 439.5 -147.5t163.5 -370.5q0 -207 -114 -380.5t-275.5 -247t-322.5 -73.5q-52 0 -180 10q-108 8 -205 8q-45 0 -137 -3l23 49q92 5 114.5 16t38.5 37 q29 46 79 200l69 261l80 326q6 24 6 41q0 16 -10 25.5t-28 9.5q-7 0 -28 -3z</list></item><item><list struct="atomic" id="39">E,M1312 959h-53q8 51 8 81q0 40 -33.5 52.5t-252.5 12.5l-146 -1l-111 -442h207q98 0 120.5 14.5t32.5 72.5h57q-32 -121 -57 -266h-51q5 47 5 73q0 11 -14 27q-7 8 -26 11q-27 5 -84 5h-205q-89 -340 -185 -533q93 29 165 29q120 0 294 -38q92 -21 125 -21q44 0 71 22 t27 50q0 16 -13 52q-8 25 -8 47q0 23 18.5 41t44.5 18q31 0 51.5 -24t20.5 -64q0 -85 -74.5 -149t-196.5 -64q-64 0 -162 11q-215 24 -328 24q-148 0 -346 -24l16 55q118 33 139 48.5t35 45.5q48 95 124.5 381t155.5 604q-120 0 -227 -57t-167 -148.5t-60 -192.5 q0 -43 8.5 -75t38.5 -90q19 -35 19 -57t-18.5 -39t-45.5 -17q-39 0 -62 39q-34 57 -34 155q0 210 159 377t463 167h343q178 0 263 23q-40 -166 -51 -236z</list></item><item><list struct="atomic" id="40">F,M1363 932h-54q17 84 17 108q0 33 -23 49t-87 16l-64 -1l-21 1h-200q-6 -23 -32 -117q-54 -194 -82 -318h195q71 0 92 14t35 71h54q-31 -126 -54 -263h-55q7 57 7 67q0 24 -24 36q-14 7 -76 9h-191q-29 -139 -76 -300t-81 -249q80 -13 143 -13q41 0 81 7l-17 -57 q-29 -4 -54 -4q-22 0 -138 7q-69 5 -117 5q-97 0 -207 -18l12 55q89 19 117.5 40t43.5 51q31 61 116 378l153 599q-134 -4 -234.5 -60t-160 -150.5t-59.5 -191.5q0 -39 10 -80q5 -23 28 -66q29 -53 29 -74t-17 -36.5t-44 -15.5q-40 0 -65 42q-34 56 -34 159q0 201 157 370 q157 168 414 168h384q64 0 141 8q23 2 99 21q-51 -209 -61 -267z</list></item><item><list struct="atomic" id="41">G,M1331 796h-54q5 47 5 83q0 135 -69.5 197t-171.5 62q-141 0 -283 -95.5t-232.5 -266.5t-90.5 -357q0 -189 89.5 -278t200.5 -89q66 0 126.5 17.5t115.5 51.5q46 157 46 209q0 25 -18.5 39.5t-65.5 14.5q-16 0 -77 -5l9 49q44 8 89 8q36 0 89 -2q41 -1 61 -1q36 0 110 6 q39 3 67 4l-11 -51q-50 1 -71 -21.5t-44 -117.5q-82 -341 -162 -493.5t-182 -219t-220 -66.5q-100 0 -161.5 45.5t-61.5 95.5q0 27 19.5 46t44.5 19q34 0 77 -48q49 -54 76.5 -70t58.5 -16q63 0 111 49q98 97 193 449q-66 -36 -134 -54.5t-139 -18.5q-176 0 -277 93 q-135 124 -135 346q0 202 102.5 380t285 293t346.5 115q89 0 209 -28q121 -27 184 -28q-55 -190 -55 -346z</list></item><item><list struct="atomic" id="42">H,M1380 45l-13 -57q-51 -6 -78 -6q-43 0 -114 7q-76 7 -130 7q-43 0 -89 -14q41 115 93 320l77 300l-270 -10q-71 -4 -146 -11q-68 -267 -140 -395t-164.5 -188.5t-177.5 -60.5q-83 0 -142 40q-43 28 -43 70q0 25 17 42.5t41 17.5q39 0 80 -55q25 -33 40.5 -42.5t34.5 -9.5 q78 0 146.5 126t200.5 623l98 366q-200 0 -300.5 -66t-100.5 -149q0 -28 27 -71q24 -40 24 -65q0 -29 -18.5 -47.5t-46.5 -18.5q-35 0 -60 33.5t-25 97.5q0 116 84 205t244 126q92 21 367 21q-74 -146 -165 -516q264 0 416 19q87 290 153 404.5t148.5 165.5t184.5 51 q88 0 135.5 -33.5t47.5 -76.5q0 -25 -17 -41t-44 -16q-35 0 -79 50q-45 50 -80 50q-75 0 -148 -139q-130 -248 -301 -1047q17 -2 48 -7q57 -10 92 -10q41 0 93 10z</list></item><item><list struct="atomic" id="43">I,M970 1183l-17 -54q-113 -7 -150 -28q-24 -14 -40 -42q-19 -36 -111 -382q-30 -114 -153 -623q70 -23 177 -20l-16 -48q-32 -1 -128 8q-69 6 -161 6q-127 0 -233 -19l12 53q110 17 167 44q14 7 22 17q15 18 32.5 72.5t119.5 445.5q30 113 122 494q-69 2 -169 -19l19 55 q42 11 86 15.5t199 8.5q145 4 222 16z</list></item><item><list struct="atomic" id="44">J,M1004 1180q-73 -162 -155 -451l-149 -521q-71 -250 -198 -366q-128 -117 -279 -117q-100 0 -161 45t-61 99q0 25 18 44t41 19q34 0 73 -41q53 -55 83 -70q42 -21 76 -21q36 0 62 16q43 26 75 81.5t132 369.5q84 262 163 544l87 304l-48 2q-159 0 -263 -76.5t-104 -161.5 q0 -30 26 -69q24 -36 24 -57q0 -26 -19.5 -45.5t-46.5 -19.5q-35 0 -57.5 31t-22.5 91q0 112 79.5 205.5t214.5 136.5q90 29 273 29q26 0 137 -1z</list></item><item><list struct="atomic" id="45">K,M1551 1180l-6 -25q-81 -20 -134 -50t-143 -109q-239 -209 -416 -321q51 -63 87 -141t125 -359q80 -251 163 -339t169 -88q83 0 113 88q18 52 31 64q18 16 40 16q24 0 41 -16.5t17 -39.5q0 -60 -71 -116t-180 -56q-94 0 -178.5 48t-154.5 151t-143 319q-68 204 -105 279.5 t-103 159.5l-106 -405q-32 -123 -40 -176q68 -29 122 -29q13 0 37 2l-13 -50q-20 -1 -25 -1q-33 0 -94 7q-64 7 -105 7q-83 0 -263 -32l6 48q96 19 135 52.5t62 105.5q53 162 138 487l122 463q-198 -12 -313 -90q-89 -59 -89 -132q0 -26 25 -66q23 -36 23 -58 q0 -27 -20 -47.5t-47 -20.5q-31 0 -55.5 31t-24.5 82q0 139 138.5 250.5t481.5 111.5h65q-55 -143 -72 -207l-80 -303q74 28 172.5 95.5t189.5 143.5q167 140 190 170q7 10 7 17q0 8 -20.5 14.5t-115.5 8.5l13 56q128 -12 210 -12q84 0 194 12z</list></item><item><list struct="atomic" id="46">L,M98 -17l12 54q105 20 140.5 46t64 92.5t77.5 274.5q65 275 118 396q81 182 201.5 270t243.5 88q79 0 133 -40t54 -83q0 -24 -16.5 -41t-39.5 -17q-30 0 -73 39q-48 42 -74.5 55t-51.5 13q-29 0 -57 -16q-39 -22 -83.5 -83.5t-92.5 -182.5q-31 -82 -79 -270 q-75 -299 -114 -397q-28 -70 -68 -116q143 32 228 32q53 0 98 -6.5t157 -32.5q97 -23 136 -23q38 0 64.5 23.5t26.5 53.5q0 19 -14 53q-13 32 -13 51q0 27 16 42.5t42 15.5q30 0 51 -26.5t21 -72.5q0 -87 -72 -150t-195 -63q-61 0 -157 9q-324 29 -424 29q-147 0 -260 -17z</list></item><item><list struct="atomic" id="47">M,M944 -42l-80 1076q-26 -272 -96 -507.5t-159 -364t-182 -180.5t-184 -52q-55 0 -84.5 22.5t-29.5 54.5q0 27 21.5 47t54.5 20q24 0 69 -11q41 -11 68 -11q47 0 98 35q77 52 152.5 186.5t135 375t74.5 469.5q-227 0 -369 -113q-113 -90 -113 -201q0 -49 54 -118 q29 -37 29 -60q0 -26 -16.5 -43t-39.5 -17q-39 0 -69 44q-41 59 -41 140q0 114 76.5 218.5t212 159t317.5 55.5q98 0 157 18q-3 -90 -3 -97q0 -9 3 -41l59 -760q241 421 471 693q163 193 284 261q-69 -190 -148 -501l-122 -480q-10 -40 -27 -117l-24 -107q76 -18 139 -18 q51 0 109 12l-13 -58q-51 -9 -79 -9q-41 0 -118 9q-63 8 -112 8q-52 0 -118 -20q55 144 115 387l77 306q49 198 85 272q-80 -91 -247 -334q-134 -196 -300 -496z</list></item><item><list struct="atomic" id="48">N,M915 1204l28 -117q39 -160 77 -280t195 -555q15 55 60 244q58 246 77 309q56 185 108 272t116 125t145 38q65 0 99.5 -25t34.5 -60q0 -25 -18.5 -44t-43.5 -19q-18 0 -42 10q-50 20 -60 23q-18 4 -39 4q-49 0 -84 -33q-62 -58 -136.5 -291t-189.5 -745l-34 -149 q-114 251 -154 356q-54 141 -123 356l-110 346q-20 -120 -93.5 -404.5t-87.5 -327.5q-46 -135 -98.5 -207t-115 -105t-137.5 -33q-94 0 -154 42q-46 31 -46 79q0 21 17 37.5t41 16.5q31 0 67 -33q64 -59 117 -59q57 0 112 51q82 78 158 327q92 301 177 764q-35 0 -134 -20 t-165.5 -56.5t-102 -95t-35.5 -122.5q0 -32 9 -65q6 -22 26 -54q23 -37 23 -56q0 -24 -17.5 -41t-43.5 -17q-38 0 -65 39.5t-27 120.5q0 134 67.5 228t180.5 142q72 30 278 58q76 10 143 26z</list></item><item><list struct="atomic" id="49">O,M899 1197q126 0 227.5 -58.5t157.5 -167t56 -252.5q0 -188 -101 -373t-247 -279t-324 -94q-205 0 -331.5 128t-126.5 337q0 200 101 386.5t248 279.5t340 93zM826 1125q-116 0 -213.5 -68.5t-159.5 -214t-62 -337.5q0 -220 97 -339.5t242 -119.5q108 0 204.5 71 t159 223.5t62.5 350.5q0 205 -95.5 319.5t-234.5 114.5z</list></item><item><list struct="atomic" id="50">P,M627 957l12 45q145 14 248 40q-25 -70 -54 -183l-74 -281l92 -6q64 -3 139.5 32t135 123t59.5 190q0 101 -72.5 160t-221.5 59q-170 0 -333 -84.5t-251.5 -216t-88.5 -259.5q0 -63 23 -109.5t82 -91.5q49 -36 49 -70q0 -22 -16 -37t-38 -15q-59 0 -114 81t-55 205 q0 227 174 414q228 246 612 246q146 0 239.5 -38t140 -104t46.5 -143q0 -98 -65.5 -192.5t-193 -152.5t-283.5 -58q-24 0 -75 3l-79 -311q-20 -79 -45 -156q78 -19 136 -19q73 0 157 28l-12 -56q-78 -21 -132 -21q-52 0 -152 11q-80 10 -130 10q-97 0 -199 -23l12 53 q104 17 142 49q54 45 88 181l151 599q10 42 10 59q0 16 -13 28.5t-31 12.5q-7 0 -20 -2z</list></item><item><list struct="atomic" id="51">Q,M781 -17q90 -84 167 -162q139 -140 194 -181q78 -58 135 -79.5t104 -21.5q40 0 72 12t58 36q15 14 39 61q26 51 66 51q20 0 35 -15.5t15 -36.5q0 -54 -81 -104q-113 -70 -258 -70q-97 0 -158 20q-84 28 -159.5 81t-201.5 184q-115 118 -150.5 149.5t-70.5 52.5 q-19 12 -91 40q-140 56 -213 168t-73 270q0 272 187 516t483 244q141 0 242 -56.5t159.5 -166.5t58.5 -248q0 -245 -158.5 -473t-400.5 -271zM826 1125q-116 0 -213.5 -68.5t-159.5 -214t-62 -337.5q0 -220 97 -339.5t242 -119.5q108 0 204.5 71t159 223.5t62.5 350.5 q0 205 -95.5 319.5t-234.5 114.5z</list></item><item><list struct="atomic" id="52">R,M737 572l-134 -531q48 -7 77 -7q44 0 109 15l-10 -49q-67 -14 -104 -14q-39 0 -115 7q-67 7 -111 7q-80 0 -185 -23l15 56q110 28 143 55q50 43 77 151l140 559q26 107 26 126q0 18 -12.5 27t-49.5 8l13 48q101 1 242 37q-12 -38 -31 -112l-75 -295q48 -10 81 -10 q125 0 214 87.5t89 207.5q0 93 -71.5 153t-194.5 60q-157 0 -307 -76t-225 -188.5t-75 -235.5q0 -93 77 -160q39 -33 48 -48t9 -32q0 -21 -15.5 -36.5t-37.5 -15.5q-54 0 -96 63q-54 82 -54 202q0 154 85 287t257.5 220t363.5 87q178 0 293 -67t115 -198q0 -123 -105.5 -229 t-290.5 -136q46 -92 59 -124q21 -54 64 -182q101 -301 209 -424q80 -90 173 -90q96 0 123 87q16 55 30 68q19 18 43 18t40.5 -17t16.5 -41q0 -62 -68 -118t-175 -56q-97 0 -185.5 47t-172 154t-145.5 257q-31 75 -91 275q-36 122 -45 146l-25 2q-9 0 -26 -2z</list></item><item><list struct="atomic" id="53">S,M1029 811h-52q11 105 11 159q0 77 -41.5 121.5t-112.5 44.5q-110 0 -192 -79.5t-82 -178.5q0 -53 22.5 -96t99.5 -120q141 -138 185 -216t44 -152q0 -109 -66.5 -210t-196 -166.5t-273.5 -65.5q-142 0 -239.5 74t-97.5 156q0 44 25.5 73t58.5 29q34 0 56 -27 q14 -16 28 -72q16 -68 39 -98.5t63.5 -50t88.5 -19.5q143 0 250 96.5t107 213.5q0 40 -13.5 79.5t-49.5 89.5q-25 34 -111 120q-85 84 -107 115q-31 45 -46 90.5t-15 90.5q0 91 61 183t158.5 146.5t221.5 54.5q62 0 153 -19q52 -10 90 -15q-22 -65 -34 -122.5t-33 -228.5z</list></item><item><list struct="atomic" id="54">T,M991 57l-14 -57q-69 -15 -113 -15q-42 0 -139 9q-73 6 -131 6q-100 0 -206 -18l14 55q101 10 147 42q33 23 56.5 78.5t106.5 387.5l128 530l7 25q-59 2 -89 2q-185 0 -293.5 -40t-163 -116t-54.5 -164q0 -31 11 -57q8 -18 44 -58q34 -37 34 -68q0 -27 -20 -46t-48 -19 q-42 0 -68 40q-38 59 -38 150q0 122 75.5 237t207.5 178t321 63q90 0 287 -26q140 -18 203 -18t89 21t26 56q0 7 -3 28q-3 19 -3 25q0 27 18 45t43 18q30 0 49.5 -22t19.5 -59q0 -76 -81 -131t-271 -55q-68 0 -145 6q-10 -36 -63 -244l-87 -346l-53 -211l-55 -241 q67 -8 111 -8q67 0 140 17z</list></item><item><list struct="atomic" id="55">U,M928 1195q-101 -178 -199 -453q-69 -195 -69 -326q0 -146 70.5 -227t176.5 -81q100 0 188 50q117 66 216.5 201t162.5 323.5t63 352.5q0 114 -49 216q-26 52 -29 62q-4 14 -4 30q0 30 18.5 49t45.5 19q47 0 74 -50q39 -68 39 -211q0 -306 -134 -609t-309.5 -433 t-368.5 -130q-157 0 -241 104.5t-84 257.5q0 126 39 258q51 173 211 517q-125 3 -224 -30.5t-142.5 -85.5t-43.5 -103q0 -21 23 -57q24 -41 24 -64q0 -29 -18 -48t-45 -19q-33 0 -57.5 30t-24.5 78q0 77 45 154.5t116.5 124.5t176.5 69q52 11 216 20q112 6 137 11z</list></item><item><list struct="atomic" id="56">V,M643 -41l-36 484q-11 148 -11 195q0 135 38.5 248.5t136.5 243.5q-117 0 -238.5 -56t-178 -129t-56.5 -147q0 -34 21 -72q27 -48 27 -73q0 -23 -14 -37t-36 -14q-32 0 -56 33q-30 44 -30 109q0 122 92 235t252 167q103 35 300 48q53 4 108 10q-135 -198 -176 -330.5 t-41 -359.5q0 -174 18 -318l192 205l164 168q248 255 334 402q65 111 65 202q0 50 -23 110q-15 38 -15 58q0 27 20.5 47t48.5 20q38 0 64 -39t26 -122q0 -81 -34 -171.5t-143 -230.5t-337 -371q-239 -242 -482 -515z</list></item><item><list struct="atomic" id="57">W,M1228 -88l20 644q7 214 40 402q-58 -71 -146 -212q-263 -423 -567 -794q-22 133 -35.5 311t-13.5 312q0 189 35.5 301.5t134.5 246.5q-188 -21 -298.5 -119t-110.5 -201q0 -38 21 -77q25 -47 25 -63q0 -26 -16.5 -43t-40.5 -17q-32 0 -52 29q-27 38 -27 98q0 91 52.5 186 t139.5 156.5t198 89.5q61 15 205 31q49 6 97 13q-217 -304 -217 -614q0 -97 15 -387q59 71 107 137q33 46 172 255q224 340 335 479q78 96 176 179q-96 -377 -96 -1083l251 311q101 126 204.5 293.5t136.5 267.5q21 65 21 123q0 57 -26 120q-16 40 -16 58q0 27 19.5 45.5 t49.5 18.5q38 0 60 -34q32 -46 32 -122q0 -101 -69.5 -266t-308.5 -482q-308 -405 -507 -593z</list></item><item><list struct="atomic" id="58">X,M440 1100l12 59q35 8 84 8q98 0 119 2q40 2 111 12q0 -186 59 -414q145 199 299 362q95 102 178 143q59 29 125 29q48 0 71 -17.5t23 -45.5t-21 -44t-89 -22q-95 -10 -154 -39.5t-138 -114.5q-130 -141 -272 -333q49 -144 73 -281t24 -267q0 -39 -2 -84q44 -11 87 -11 q40 0 108 6l-12 -57q-40 -3 -52 -3q-27 0 -86 6q-50 6 -83 6q-32 0 -116 -9q12 69 12 122q0 119 -15 226.5t-45 203.5l-162 -227q-210 -291 -319 -373t-202 -82q-34 0 -53.5 18t-19.5 43q0 26 20 43.5t76 24.5q107 14 184 73q102 78 261 297l191 264q-97 306 -97 490 q-42 2 -61 2q-52 0 -118 -16z</list></item><item><list struct="atomic" id="59">Y,M1090 59l-21 -59q-62 -16 -106 -16q-47 0 -124 8q-73 8 -116 8q-61 0 -187 -14l17 51q94 24 118 52t80 239.5t56 278.5q0 134 -52 275t-130 228q-147 -54 -210.5 -101.5t-102 -116.5t-38.5 -121q0 -51 46 -95q39 -38 39 -67q0 -26 -15.5 -43t-38.5 -17q-41 0 -69 40 q-38 55 -38 132q0 111 62 209t173 164q65 39 214 83q55 16 99 33q84 -101 135 -237.5t70 -338.5q186 390 354.5 548.5t274.5 158.5q33 0 54 -19t21 -47q0 -29 -24.5 -47t-95.5 -23q-70 -5 -108 -28q-75 -46 -176.5 -170t-200.5 -310t-151 -387.5t-56 -262.5q47 -8 93 -8 q70 0 154 20z</list></item><item><list struct="atomic" id="60">Z,M1127 1047q-65 -15 -134 -15q-111 0 -262 43q-93 26 -118 26q-43 0 -65.5 -17.5t-22.5 -42.5q0 -28 32 -52q33 -26 41.5 -40t8.5 -34q0 -25 -18 -43t-43 -18q-40 0 -69 37t-29 100q0 88 66 150t163 62q62 0 148 -13q196 -30 292 -30q98 0 187 45q25 12 35 12 q13 0 23.5 -9t10.5 -18q0 -31 -93 -114q-97 -86 -182 -175l-500 -518l-286 -309q216 62 326 62q158 0 339 -66q100 -36 140 -36q46 0 68.5 20t22.5 58q0 20 -10 46q-12 31 -12 45q0 28 20 49t47 21q30 0 51.5 -24.5t21.5 -65.5q0 -97 -77 -160t-175 -63q-59 0 -206 19 q-168 21 -361 21q-223 0 -298 -31q-30 -12 -45 -12q-11 0 -21 9q-7 8 -7 20q0 29 38 65q41 39 152 155q91 97 282 288l300 306q110 112 219 247z</list></item><item><list struct="atomic" id="61">[,M523 1377h302l-15 -63h-191l-363 -1596h187l-14 -62h-300z</list></item><item><list struct="atomic" id="62">,M962 -384h-104l-430 1769h104z</list></item><item><list struct="atomic" id="63">],M368 -344h-302l14 62h192l363 1596h-188l15 63h300z</list></item><item><list struct="atomic" id="64">^,M616 841h-112l200 328h107l199 -328h-112l-141 200z</list></item><item><list struct="atomic" id="65">_,M-12 -154h1048v-102h-1048v102z</list></item><item><list struct="atomic" id="66">a,M856 858l66 14l-75 -253q-45 -151 -85 -348q-22 -107 -22 -138t25 -31q16 0 51 21q62 37 119 92l32 -39q-114 -104 -146 -126q-64 -44 -122 -65q-38 -14 -74 -14q-26 0 -39 12t-13 35q0 15 8 41l40 136q-86 -103 -205 -177q-73 -46 -134 -46q-58 0 -89 41q-42 55 -42 144 q0 106 56.5 236t151.5 236t200 156q81 38 208 38q32 0 65 -4zM732 705q-54 11 -91 11q-90 0 -157 -49.5t-124.5 -178t-57.5 -256.5q0 -68 23 -98t60 -30q69 0 148 74.5t116 214.5z</list></item><item><list struct="atomic" id="67">b,M478 666q81 89 159.5 130.5t138.5 41.5q70 0 112 -56t42 -169q0 -164 -77 -321t-190.5 -239t-221.5 -82q-92 0 -147 54t-55 140q0 69 27 192l118 529q43 194 108 295.5t171 162t201 60.5q57 0 83.5 -19.5t26.5 -52.5q0 -30 -24 -50t-68 -20q-33 0 -114 15q-36 7 -64 7 q-50 0 -81 -54q-23 -42 -63 -213zM675 727q-49 0 -116.5 -59t-127.5 -208.5t-60 -293.5q0 -54 34.5 -90.5t80.5 -36.5q111 0 198 175.5t87 349.5q0 79 -33 129q-23 34 -63 34z</list></item><item><list struct="atomic" id="68">c,M723 217l21 -58q-238 -187 -402 -187q-87 0 -126.5 62t-39.5 157q0 158 84 325t204 256q94 69 212 69q74 0 112 -28t38 -68q0 -31 -20 -50.5t-56 -19.5q-35 0 -90 32q-57 34 -95 34q-49 0 -97.5 -44.5t-92.5 -172.5t-44 -257q0 -95 37 -147q27 -40 76 -40q117 0 279 137z</list></item><item><list struct="atomic" id="69">d,M944 207l28 -38q-134 -113 -199 -150q-90 -51 -142 -51q-24 0 -39 13.5t-15 30.5t11 56l35 122q-120 -129 -200 -175t-144 -46q-53 0 -89 46.5t-36 136.5q0 142 97.5 326.5t217 273t218.5 88.5q22 0 66 -7q47 195 90 284.5t111 154.5t155.5 100.5t163.5 35.5q40 0 64 -21 t24 -53q0 -31 -22 -50.5t-60 -19.5q-25 0 -93 10t-93 10q-35 0 -61.5 -21.5t-50.5 -92.5q-16 -45 -73 -287l-142 -604q-25 -107 -25 -142q0 -38 29 -38q18 0 42 13q34 19 132 95zM732 723q-80 18 -113 18q-67 0 -131 -52.5t-123.5 -203.5t-59.5 -263q0 -51 27.5 -83.5 t62.5 -32.5q42 0 96 37q77 55 122 134q27 50 73 245z</list></item><item><list struct="atomic" id="70">e,M698 251l33 -44q-245 -233 -420 -233q-71 0 -108.5 48t-37.5 154q0 214 130 426q146 241 349 241q71 0 108.5 -35.5t37.5 -97.5q0 -65 -45 -128t-161 -131q-58 -33 -248 -119q-9 -54 -9 -103q0 -71 22.5 -99t65.5 -28q41 0 90 23q66 31 193 126zM348 396q161 72 242 155 q55 58 55 115q0 43 -22.5 68.5t-58.5 25.5q-37 0 -72 -28q-47 -37 -79 -112q-46 -110 -65 -224z</list></item><item><list struct="atomic" id="71">f,M208 776h239q59 250 135 372t198 192.5t230 70.5q61 0 92 -24t31 -57q0 -30 -21 -50t-55 -20q-35 0 -132 21q-48 10 -75 10q-66 0 -119 -81.5t-85 -220.5l-50 -213h264l-16 -71h-267l-158 -638q-73 -291 -233.5 -441t-348.5 -150q-63 0 -95.5 24.5t-32.5 60.5 q0 31 22.5 49.5t64.5 18.5q21 0 62 -5q70 -9 134 -9q99 0 144 46.5t90 227.5l203 816h-239z</list></item><item><list struct="atomic" id="72">g,M847 848l81 18q-73 -234 -134 -469q-44 -168 -61 -280q-9 -56 -10 -142q-2 -144 -32 -232q-42 -123 -156.5 -198t-271.5 -75q-135 0 -212.5 63.5t-77.5 145.5q0 81 62 151q46 53 192 128q74 39 139 80q-74 -38 -115 -38q-37 0 -65.5 34.5t-28.5 91.5q0 184 109.5 365.5 t263.5 272.5q95 56 238 56q28 0 69 -2zM735 700q-48 9 -85 9q-95 0 -163 -50t-116 -168q-67 -167 -67 -281q0 -47 26.5 -79t59.5 -32q40 0 99 38.5t96.5 96.5t76.5 200zM599 155q-68 -61 -262 -195q-171 -116 -210 -167q-39 -52 -39 -110q0 -57 50.5 -102.5t122.5 -45.5 q68 0 132 33.5t111.5 97t65.5 143.5t19 212q1 29 10 134z</list></item><item><list struct="atomic" id="73">h,M977 212l26 -37q-92 -102 -189 -162q-66 -41 -109 -41q-35 0 -56.5 28t-21.5 87q0 40 16.5 116.5t93.5 328.5q34 124 34 145q0 34 -34 34q-42 0 -105 -42q-88 -58 -156 -148q-43 -58 -69 -172l-80 -348h-149q48 175 74 286l147 642q40 177 105.5 272.5t171 152.5 t208.5 57q43 0 68 -21t25 -53q0 -27 -24.5 -47.5t-66.5 -20.5q-24 0 -62 5q-86 12 -119 12q-46 0 -75 -37t-60 -174l-112 -494q119 125 259 211q82 51 132 51q39 0 61 -23.5t22 -65.5q0 -34 -8 -68q-13 -59 -61 -214q-65 -214 -76.5 -266t-11.5 -93q0 -16 5.5 -24t16.5 -8 q24 0 90 57q37 31 90 74z</list></item><item><list struct="atomic" id="74">i,M600 1271q31 0 51 -20.5t20 -52.5q0 -44 -30.5 -77.5t-68.5 -33.5q-30 0 -50 21t-20 55q0 45 29 76.5t69 31.5zM206 609l-44 34q100 110 182.5 156.5t140.5 46.5q32 0 49 -14t17 -38q0 -29 -65 -246q-106 -355 -106 -428q0 -14 7 -23.5t15 -9.5q32 0 164 124l39 -38 q-137 -129 -200 -165t-103 -36q-35 0 -55.5 22t-20.5 61q0 125 150 611q7 23 7 41q0 20 -18 20q-20 0 -45.5 -16t-113.5 -102z</list></item><item><list struct="atomic" id="75">j,M611 1271q31 0 51 -20.5t20 -52.5q0 -44 -30.5 -77.5t-67.5 -33.5q-31 0 -51 21t-20 55q0 45 29.5 76.5t68.5 31.5zM213 601l-38 43q85 92 183.5 147t151.5 55q22 0 36.5 -13.5t14.5 -34.5q0 -26 -32 -142l-173 -631q-87 -322 -192 -435.5t-246 -113.5q-70 0 -107.5 26.5 t-37.5 60.5q0 24 17.5 41t42.5 17q28 0 80 -26q60 -30 92 -30q54 0 87 50q33 49 99 316q68 273 115 444l70 252q20 61 20 76q0 8 -6.5 14t-13.5 6q-39 0 -163 -122z</list></item><item><list struct="atomic" id="76">k,M329 0h-149l131 545q95 405 124.5 499t71 155t104 109t135 73.5t127.5 25.5q52 0 77.5 -20t25.5 -53q0 -28 -23 -48t-58 -20q-44 0 -133 15q-29 6 -51 6q-31 0 -58.5 -22t-49 -78.5t-60.5 -234.5l-71 -320q96 109 199 168q78 44 149 44q50 0 84.5 -37.5t34.5 -94.5 q0 -107 -111 -191t-339 -90q77 -34 123 -74.5t90.5 -112t114.5 -239.5q83 -200 154 -266q70 -66 154 -66q49 0 81 21.5t32 43.5q0 14 -10 38q-11 26 -11 44q0 23 18 41t42 18q28 0 48 -22.5t20 -59.5q0 -72 -66 -128t-172 -56q-109 0 -195 55t-161 176q-43 70 -150 319 q-50 118 -90 177q-31 46 -85 91zM434 473q135 -1 218.5 26t119 72t35.5 98q0 38 -20.5 61t-49.5 23q-94 0 -288 -210z</list></item><item><list struct="atomic" id="77">l,M590 241l34 -36q-78 -88 -184.5 -160.5t-175.5 -72.5q-31 0 -51 23.5t-20 64.5q0 80 62 332l108 439q59 238 99 319q62 123 175.5 191t239.5 68q43 0 67.5 -20.5t24.5 -49.5q0 -32 -24 -52.5t-70 -20.5q-30 0 -85 10q-48 8 -89 8t-62 -17q-29 -24 -52.5 -101t-76.5 -304 l-99 -419q-74 -315 -74 -329q0 -32 23 -32q22 0 64 26q83 52 166 133z</list></item><item><list struct="atomic" id="78">m,M201 611l-30 40q99 99 188 146t140 47q21 0 31.5 -9t10.5 -25q0 -20 -16 -77q-23 -84 -32 -133q240 244 367 244q33 0 50 -18t17 -57q0 -42 -30 -143q114 119 198 168.5t131 49.5q42 0 65 -24t23 -74q0 -30 -10 -71t-73 -250q-79 -259 -79 -309q0 -34 28 -34q19 0 37 12 q59 42 121 104l33 -36q-21 -17 -79 -70q-80 -72 -110 -90q-58 -34 -98 -34q-30 0 -53 29.5t-23 81.5q0 48 14 112.5t82 289.5q51 169 51 205q0 34 -30 34q-25 0 -67 -25q-86 -52 -144 -127q-40 -52 -70 -165q-67 -247 -100 -403h-142l149 611q16 66 16 76q0 16 -8 24.5 t-23 8.5q-27 0 -84 -42q-99 -71 -142.5 -137.5t-74.5 -202.5l-77 -338h-143l113 477q50 207 50 225q0 23 -18 23q-39 0 -159 -114z</list></item><item><list struct="atomic" id="79">n,M204 607l-34 35q128 122 204 162t130 40q21 0 33 -9t12 -21q0 -9 -5 -32l-45 -201q102 113 256 211q82 51 135 51q39 0 61 -25t22 -72q0 -31 -9 -70q-16 -65 -84 -283q-64 -204 -64 -271q0 -20 6 -30t17 -10q29 0 91 56q44 40 88 74l25 -36q-92 -102 -191 -164 q-63 -40 -104 -40q-38 0 -59 27.5t-21 89.5q0 89 111 443q34 126 34 147q0 31 -37 31q-40 0 -103 -42q-94 -62 -157 -146q-40 -54 -67 -172l-81 -349h-149q42 150 73 287l89 380q5 23 5 33q0 27 -20 27q-16 0 -46 -21q-62 -41 -116 -100z</list></item><item><list struct="atomic" id="80">o,M670 841q98 0 163 -78t65 -217q0 -222 -156 -398.5t-330 -176.5q-107 0 -172.5 70t-65.5 191q0 210 120 388q151 221 376 221zM585 766q-85 0 -164.5 -121.5t-79.5 -335.5q0 -130 49 -205q36 -55 96 -55q84 0 153 104q88 135 88 335q0 150 -40.5 214t-101.5 64z</list></item><item><list struct="atomic" id="81">p,M189 593l-39 40q91 109 181 161t156 52q25 0 39.5 -12.5t14.5 -36.5q0 -29 -6.5 -59.5t-40.5 -144.5q153 153 209 189q94 61 172 61q51 0 86 -48t35 -145q0 -242 -151 -460t-334 -218q-72 0 -144 39l-85 -330q-8 -30 -8 -49q0 -37 28 -53q43 -25 181 -41l-13 -50 q-161 13 -253 13q-95 0 -246 -13l13 50q76 8 110.5 42t55.5 121l181 759q51 212 51 236q0 26 -25 26q-44 0 -168 -129zM391 121q79 -79 162 -79q120 0 210.5 187t90.5 365q0 57 -25.5 86.5t-68.5 29.5q-48 0 -108 -47q-93 -73 -142 -145q-35 -52 -66 -180z</list></item><item><list struct="atomic" id="82">q,M892 879h69q-53 -157 -139 -508l-173 -724q-4 -22 -4 -41q0 -27 20.5 -41.5t114.5 -28.5l-17 -55q-103 20 -211 20q-99 0 -271 -20l13 55q94 7 132.5 27t62.5 62t55 169l97 412q-99 -115 -214 -183q-87 -52 -150 -52q-50 0 -85.5 47.5t-35.5 138.5q0 224 182 456.5 t406 232.5q47 0 113 -14zM763 711q-72 20 -126 20q-88 0 -156.5 -52t-123.5 -188.5t-55 -267.5q0 -58 26 -90t65 -32q35 0 89 38q100 70 151 145q36 52 72 199z</list></item><item><list struct="atomic" id="83">r,M359 0h-149l70 269q51 198 89 376q9 44 9 55q0 24 -22 24q-15 0 -46 -20.5t-112 -101.5l-31 35q96 103 191.5 154.5t146.5 51.5q18 0 28.5 -8.5t10.5 -21.5t-13 -69l-43 -179q101 159 228 272q61 54 102 54q30 0 50 -19.5t20 -45.5q0 -27 -19.5 -46t-97.5 -45 q-74 -25 -120.5 -60t-102 -107t-77.5 -125.5t-67 -248.5z</list></item><item><list struct="atomic" id="84">s,M613 842q89 0 137.5 -34.5t48.5 -79.5q0 -27 -20.5 -47t-49.5 -20q-19 0 -33 8.5t-40 42.5q-49 65 -97 65q-41 0 -72.5 -31.5t-31.5 -78.5q0 -41 20 -79.5t101 -124.5q111 -118 111 -224t-90 -185.5t-232 -79.5q-119 0 -177 48.5t-58 119.5q0 35 22 58t54 23 q28 0 48 -18.5t20 -43.5q0 -10 -2 -26q-1 -13 -1 -22q0 -33 28 -56q27 -23 74 -23q54 0 95 18.5t64 56t23 74.5q0 36 -21.5 72t-96.5 119q-104 116 -104 223q0 98 79 171.5t201 73.5z</list></item><item><list struct="atomic" id="85">t,M454 995l159 61l-72 -280h207l-16 -71h-207l-88 -335q-41 -151 -41 -210q0 -27 11.5 -39t31.5 -12q31 0 95 37q84 49 160 111l38 -46q-219 -165 -293 -202t-119 -37q-37 0 -58.5 27t-21.5 88q0 72 38 220l103 398h-162l18 71h161z</list></item><item><list struct="atomic" id="86">u,M850 814h142l-94 -349q-83 -304 -83 -346q0 -19 9 -29t20 -10q17 0 40 15q33 23 125 116l33 -37q-201 -209 -296 -209q-32 0 -54.5 24.5t-22.5 69.5q0 52 22 139q-89 -102 -220 -179q-87 -51 -151 -51q-35 0 -55 23t-20 73q0 39 9 84q13 63 66 253q67 241 67 289 q0 28 -20 28q-18 0 -49 -18.5t-106 -89.5l-44 35q134 120 204.5 157.5t113.5 37.5q24 0 39 -17.5t15 -54.5q0 -69 -72 -339q-64 -243 -64 -277q0 -21 13.5 -36t29.5 -15q56 0 159 92.5t135 210.5z</list></item><item><list struct="atomic" id="87">v,M635 746q-77 -123 -106.5 -217t-29.5 -187q0 -86 38 -269q221 168 313 314.5t92 252.5q0 31 -23 78q-25 50 -25 74q0 26 18 45.5t43 19.5q33 0 53 -28.5t20 -96.5q0 -213 -151 -415q-185 -248 -469 -382q-7 47 -28 150q-41 207 -41 288q0 107 50 207.5t148 174.5 q-176 -3 -252 -39q-54 -26 -54 -61q0 -14 14 -47q9 -23 9 -39t-13.5 -28.5t-33.5 -12.5q-26 0 -44 22t-18 59q0 59 39 106.5t135 74.5t254 25q64 28 81 28q16 0 29 -13t13 -28q0 -31 -61 -56z</list></item><item><list struct="atomic" id="88">w,M587 813q46 32 70 32q19 0 31 -12.5t12 -30.5q0 -39 -59 -54l-77 -151q-29 -63 -43.5 -126t-14.5 -129q0 -83 40 -266q154 102 287 273q-1 43 -1 63q0 220 65 347q43 84 95 84q31 0 51.5 -26.5t20.5 -78.5q0 -42 -16 -97q-27 -90 -64 -165q0 -252 38 -400q120 82 233 206 q83 91 126 189.5t43 161.5q0 31 -22 80q-25 57 -25 83t19 44.5t46 18.5q33 0 52.5 -31.5t19.5 -112.5q0 -206 -179 -432t-437 -349q-32 109 -59 324q-136 -136 -169 -163q-66 -55 -127.5 -93.5t-131.5 -67.5q-7 57 -32 184q-35 179 -35 256q0 104 50.5 204.5t151.5 176.5 q-181 -5 -258 -42q-52 -25 -52 -60q0 -13 12 -42q11 -27 11 -40q0 -18 -13 -31t-33 -13q-26 0 -44 23t-18 65q0 80 72 130q104 73 364 68z</list></item><item><list struct="atomic" id="89">x,M268 639l-29 40q106 90 185 132q53 29 79 29q38 0 61 -38q33 -54 65 -236q124 182 219 251t159 69q33 0 53 -19t20 -47q0 -31 -28 -51q-20 -14 -109 -20q-73 -4 -128 -49q-88 -73 -170 -213l64 -299q41 -197 86 -292t110 -146q37 -29 82 -29q64 0 93 78q19 51 61 51 q20 0 35 -16.5t15 -41.5q0 -49 -55.5 -90t-142.5 -41q-96 0 -183.5 60.5t-151 194t-117.5 424.5q-20 -27 -64 -90q-126 -178 -195 -229t-132 -51q-44 0 -73 24.5t-29 58.5q0 28 19 48.5t44 20.5q26 0 53 -34q23 -30 44 -30q14 0 31 9q25 14 67 60q60 65 92 112l124 183 l-41 187q-16 76 -32.5 97.5t-36.5 21.5q-15 0 -42 -16q-58 -33 -102 -73z</list></item><item><list struct="atomic" id="90">y,M171 638l-32 47l74 50q108 74 152 95q25 12 46 12t40 -24q88 -111 148 -299.5t60 -365.5q0 -23 -2 -70q169 311 169 494q0 38 -17 101q-18 70 -18 100q0 29 18.5 48t46.5 19q35 0 56.5 -27t21.5 -77q0 -129 -59 -321.5t-185.5 -414t-231 -329t-202 -154t-184.5 -46.5 q-66 0 -99.5 24.5t-33.5 58.5q0 30 26 51.5t70 21.5q34 0 93 -13q63 -14 86 -14q61 0 129 51q93 70 147.5 167t54.5 196q0 139 -40.5 334t-114.5 298q-37 53 -79 53q-49 0 -140 -66z</list></item><item><list struct="atomic" id="91">z,M806 737q-91 -25 -167 -25q-42 0 -93 5q-71 8 -95 8q-30 0 -46 -14t-16 -36q0 -34 36 -37q45 -5 45 -41q0 -17 -14 -30.5t-32 -13.5q-36 0 -66.5 35.5t-30.5 88.5q0 68 57 117t141 49q44 0 119 -12q121 -19 174 -19q54 0 101 36q22 16 36 16q12 0 20.5 -7.5t8.5 -14.5 q0 -10 -11 -22q-34 -42 -155 -158l-310 -297q-136 -130 -226 -210q57 6 89 6q45 0 82 -7.5t119 -34.5q107 -37 174 -37q42 0 64.5 19.5t22.5 49.5q0 17 -16 48q-14 30 -14 46q0 24 16 41t40 17q29 0 48.5 -23.5t19.5 -60.5q0 -56 -41 -117.5t-103 -94.5t-153 -33 q-75 0 -219 43q-120 35 -176 35q-34 0 -79 -36q-26 -22 -45 -22q-37 0 -37 18q0 17 21 41q56 66 284 273q154 140 270 255z</list></item><item><list struct="atomic" id="92">{,M862 1378l-8 -34q-130 -11 -181 -74q-67 -85 -125 -354q-48 -229 -61 -264q-24 -67 -60 -103q-27 -27 -77 -41q69 -42 69 -112q0 -29 -8 -68q-4 -26 -50 -201q-50 -190 -58.5 -238.5t-8.5 -86.5q0 -52 41 -86t123 -37l-8 -38q-155 3 -213.5 45.5t-58.5 118.5q0 83 74 359 q52 199 52 236q0 44 -20.5 69.5t-75.5 38.5q59 7 96.5 36t53.5 68q11 28 63 249q62 262 85 323q36 97 112.5 144t243.5 50z</list></item><item><list struct="atomic" id="93">|,M667 -499v1907h111v-1907h-111z</list></item><item><list struct="atomic" id="94">},M-78 -359l7 34q131 11 181 74q68 84 125 354q49 229 62 264q24 67 60 103q27 26 77 41q-69 41 -69 112q0 29 7 68q5 26 51 200q49 190 58 239t9 86q0 53 -41 86.5t-123 37.5l8 38q155 -4 213.5 -46t58.5 -118q0 -83 -74 -359q-53 -199 -53 -236q0 -44 21 -69.5t75 -38.5 q-58 -7 -96 -36t-53 -68q-11 -28 -63 -249q-62 -262 -85 -324q-36 -96 -112.5 -143t-243.5 -50z</list></item><item><list struct="atomic" id="95">&#126;,M1104 734l62 -69q-61 -106 -122.5 -149t-124.5 -43q-27 0 -61.5 9.5t-175.5 65.5q-110 44 -152 44q-50 0 -91.5 -32t-95.5 -126l-62 72q71 121 127 162t123 41q62 0 216 -64q135 -55 173 -55q98 0 184 144z</list></item></list></variable><variable name="filledLines"><list struct="atomic" id="96"></list></variable><variable name="glblines"><list id="97"><item><list id="98"><item><list id="99"><item><l>10001</l></item><item><list id="100"><item><list struct="atomic" id="101">-107.81,17.075</list></item><item><list struct="atomic" id="102">-113.332,9.04</list></item></list></item><item><l>9.749549169064172</l></item></list></item><item><list id="103"><item><l>10002</l></item><item><list id="104"><item><ref id="102"></ref></item><item><list struct="atomic" id="105">-117.932,0.709</list></item></list></item><item><l>9.516593981041751</l></item></list></item><item><list id="106"><item><l>10003</l></item><item><list id="107"><item><ref id="105"></ref></item><item><list struct="atomic" id="108">-121.72,-8.021</list></item></list></item><item><l>9.516398688579624</l></item></list></item><item><list id="109"><item><l>10004</l></item><item><list id="110"><item><ref id="108"></ref></item><item><list struct="atomic" id="111">-124.661,-17.071</list></item></list></item><item><l>9.515880463730092</l></item></list></item><item><list id="112"><item><l>10005</l></item><item><list id="113"><item><ref id="111"></ref></item><item><list struct="atomic" id="114">-125.277,-19.842</list></item></list></item><item><l>2.838643514074986</l></item></list></item><item><list id="115"><item><l>10006</l></item><item><list id="116"><item><ref id="114"></ref></item><item><list struct="atomic" id="117">-128.671,-14.091</list></item></list></item><item><l>6.677816783949672</l></item></list></item><item><list id="118"><item><l>10007</l></item><item><list id="119"><item><ref id="117"></ref></item><item><list struct="atomic" id="120">-132.707,-5.472</list></item></list></item><item><l>9.517166437548521</l></item></list></item><item><list id="121"><item><l>10008</l></item><item><list id="122"><item><ref id="120"></ref></item><item><list struct="atomic" id="123">-135.905,3.491</list></item></list></item><item><l>9.516436990807014</l></item></list></item><item><list id="124"><item><l>10009</l></item><item><list id="125"><item><ref id="123"></ref></item><item><list struct="atomic" id="126">-138.236,12.717</list></item></list></item><item><l>9.515914932364621</l></item></list></item><item><list id="127"><item><l>10010</l></item><item><list id="128"><item><ref id="126"></ref></item><item><list struct="atomic" id="129">-139.68,22.123</list></item></list></item><item><l>9.51619524810205</l></item></list></item><item><list id="130"><item><l>10011</l></item><item><list id="131"><item><ref id="129"></ref></item><item><list struct="atomic" id="132">-135.4,30.623</list></item></list></item><item><l>9.516743140381587</l></item></list></item><item><list id="133"><item><l>10012</l></item><item><list id="134"><item><ref id="132"></ref></item><item><list struct="atomic" id="135">-130.332,38.677</list></item></list></item><item><l>9.515857291910178</l></item></list></item><item><list id="136"><item><l>10013</l></item><item><list id="137"><item><ref id="135"></ref></item><item><list struct="atomic" id="138">-124.521,46.213</list></item></list></item><item><l>9.516250154341254</l></item></list></item><item><list id="139"><item><l>10014</l></item><item><list id="140"><item><ref id="138"></ref></item><item><list struct="atomic" id="141">-118.019,53.163</list></item></list></item><item><l>9.517273979454403</l></item></list></item><item><list id="142"><item><l>10015</l></item><item><list id="143"><item><ref id="141"></ref></item><item><list struct="atomic" id="144">-113.014,57.584</list></item></list></item><item><l>6.677968703131226</l></item></list></item><item><list id="145"><item><l>10016</l></item><item><list id="146"><item><ref id="144"></ref></item><item><list struct="atomic" id="147">-113.284,54.758</list></item></list></item><item><l>2.8388687887959896</l></item></list></item><item><list id="148"><item><l>10017</l></item><item><list id="149"><item><ref id="147"></ref></item><item><list struct="atomic" id="150">-113.284,45.242</list></item></list></item><item><l>9.516000000000005</l></item></list></item><item><list id="151"><item><l>10018</l></item><item><list id="152"><item><ref id="150"></ref></item><item><list struct="atomic" id="153">-112.38,35.769</list></item></list></item><item><l>9.51603620211693</l></item></list></item><item><list id="154"><item><l>10019</l></item><item><list id="155"><item><ref id="153"></ref></item><item><list struct="atomic" id="156">-110.579,26.424</list></item></list></item><item><l>9.516965167531085</l></item></list></item><item><list id="157"><item><l>10020</l></item><item><list id="158"><item><ref id="156"></ref></item><item><list struct="atomic" id="159">-107.81,17.075</list></item></list></item><item><l>9.750444195009782</l></item></list></item></list></item></list></variable></variables></blocks>