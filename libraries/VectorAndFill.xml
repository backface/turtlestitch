<blocks app="TurtleStitch 2.7, http://www.turtlestitch.org" version="2"><block-definition s="delete var %&apos;_names&apos;" type="command" category="variables"><comment x="0" y="0" w="217" collapsed="false">This block deletes all the variables with the names given (inside input list).&#xD;&#xD;Each name will make only one variable deletion, and this will be the variable found following the scope order: &apos;script&apos; -&gt; &apos;sprite&apos; -&gt; &apos;global&apos;.&#xD;&#xD;If we have a &quot;testing&quot; sprite variable and also a &quot;testing&quot; global one, deleting &quot;testing&quot; will delete only the sprite one (Yes! we can also do &quot;delete var (testing, testing)&quot; to delete both.&#xD;&#xD;If one variable does not exists (in any scope) an error happens, stopping block action in that point. You can check it before with the &quot;does var (name) exists?&quot;block. </comment><header></header><code></code><translations>pt:remove as variáveis _&#xD;ca:esborra les variables _&#xD;es:borrar variables _&#xD;de:löschen var _&#xD;</translations><inputs><input type="%mult%txt"></input></inputs><script><block s="doWarp"><script><block s="doForEach"><l>_item</l><block var="_names"/><script><block s="doApplyExtension"><l>err_ignore</l><list><custom-block s="var %s"><block var="_item"/></custom-block></list></block><block s="doApplyExtension"><l>var_delete(name)</l><list><block var="_item"/></list></block></script></block></script></block></script></block-definition><block-definition s="show var %&apos;_name&apos;" type="command" category="variables"><comment x="0" y="0" w="181" collapsed="false">This block turns on (show) the watcher view on stage (if it was not already activated) of the variable with the given name (slot input).&#xD;&#xD;It can only access to the closest variable scope (if there different variables with the same name in different scopes) following the order &apos;script&apos; -&gt; &apos;sprite&apos; -&gt; &apos;global&apos;.&#xD;&#xD;No errors if that variable does not exist.</comment><header></header><code></code><translations>ca:mostra la variable _&#xD;es:mostrar variable _&#xD;pt:mostra a variável _&#xD;de:zeige var _&#xD;</translations><inputs><input type="%s"><options>§_getVarNamesDict</options></input></inputs><script><block s="doApplyExtension"><l>var_show(name)</l><list><block var="_name"/></list></block></script></block-definition><block-definition s="copy list %&apos;l&apos;" type="reporter" category="lists"><header></header><code></code><translations>zh_CN:复制列表 _&#xD;</translations><inputs><input type="%l"></input></inputs><script><block s="doReport"><block s="reportMap"><block s="reifyScript"><script><block s="doReport"><l></l></block></script><list></list></block><block var="l"/></block></block></script></block-definition><block-definition s="begin tracking" type="command" category="motion"><header></header><code></code><translations>zh_CN:开始跟踪&#xD;</translations><inputs></inputs><script><block s="doRun"><block s="reportJSFunction"><list></list><l>if (this.tracked) {&#xD;    this.tracks = new List();&#xD;    return;&#xD;} else {&#xD;    this.tracked = true;&#xD;    this.tracks = new List();&#xD;}&#xD;if (!this.trackingOpened) {&#xD;this.backupSetPosition = this.setPosition;&#xD;this.trackingOpened = true;&#xD;this.down = function() {&#xD;    var len;&#xD;    this.isDown = true;&#xD;    if (this.tracked) {&#xD;        len = this.tracks.length();&#xD;        if (this.tracks.at(len) == &apos;!&apos;) {&#xD;            this.tracks.add(new List([this.xPosition(),this.yPosition()]));&#xD;        }&#xD;    }    &#xD;}    &#xD;this.setPosition = function (aPoint, justMe) {&#xD;    var len,lastX,lastY;&#xD;    if (this.tracked) {&#xD;        len = this.tracks.length();&#xD;        if (len == 0 &amp;&amp; this.isDown) {&#xD;            this.tracks.add(new List([this.xPosition(),this.yPosition()]));&#xD;        }&#xD;        if (len == 0 &amp;&amp; !this.isDown) {&#xD;            this.tracks.add(&apos;!&apos;);&#xD;        }&#xD;    }                &#xD;    this.backupSetPosition(aPoint, justMe); &#xD;    if (this.tracked) {  &#xD;        len = this.tracks.length();&#xD;        if (this.isDown) {&#xD;            if (this.tracks.at(len) == &apos;!&apos;){&#xD;                this.tracks.add(new List([this.xPosition(),this.yPosition()]));   &#xD;            }else{ &#xD;                lastX = this.tracks.at(len).at(1);&#xD;                lastY = this.tracks.at(len).at(2);&#xD;                if (lastX != this.xPosition() || lastY != this.yPosition()) {&#xD;                    this.tracks.add(new List([this.xPosition(),this.yPosition()]));&#xD;                }&#xD;            }&#xD;        }else{&#xD;            if (len != 0 &amp;&amp; this.tracks.at(len) != &apos;!&apos;)&#xD;            {&#xD;                lastX = this.tracks.at(len).at(1);&#xD;                lastY = this.tracks.at(len).at(2); &#xD;                if (lastX != this.xPosition() || lastY != this.yPosition()) &#xD;                {&#xD;                    this.tracks.add(&apos;!&apos;);&#xD;                }&#xD;            }    &#xD;        }&#xD;    }&#xD;}&#xD;}</l></block><list></list></block></script></block-definition><block-definition s="my tracks" type="reporter" category="motion"><header></header><code></code><translations>zh_CN:我的轨迹&#xD;</translations><inputs></inputs><script><block s="doDeclareVariables"><list><l>tracks</l></list></block><block s="doSetVar"><l>tracks</l><block s="evaluate"><block s="reportJSFunction"><list></list><l>return this.tracks == undefined?new List([]):this.tracks;</l></block><list></list></block></block><block s="doIf"><block s="reportNot"><block s="reportListIsEmpty"><block var="tracks"/></block></block><script><block s="doSetVar"><l>tracks</l><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportIfElse"><block s="reportIsA"><l></l><l><option>list</option></l></block><block s="reportNewList"><list><block s="reportQuotient"><block s="reportRound"><block s="reportProduct"><block s="reportListItem"><l>1</l><l/></block><block s="reportPower"><l>10</l><l>10</l></block></block></block><block s="reportPower"><l>10</l><l>10</l></block></block><block s="reportQuotient"><block s="reportRound"><block s="reportProduct"><block s="reportListItem"><l>2</l><l/></block><block s="reportPower"><l>10</l><l>10</l></block></block></block><block s="reportPower"><l>10</l><l>10</l></block></block></list></block><l></l></block></autolambda><list></list></block><block var="tracks"/></block></block></script></block><block s="doReport"><block var="tracks"/></block></script></block-definition><block-definition s="reset tracking" type="command" category="motion"><header></header><code></code><translations>zh_CN:重置轨迹&#xD;</translations><inputs></inputs><script><block s="doRun"><block s="reportJSFunction"><list></list><l>if (this.tracked) {&#xD;    this.tracks.clear();&#xD;}</l></block><list></list></block></script></block-definition><block-definition s="points to lines %&apos;points&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%l"></input></inputs><script><block s="doDeclareVariables"><list><l>lines</l><l>lastpoint</l><l>firstpoint</l></list></block><block s="doWarp"><script><block s="doSetVar"><l>points</l><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportNewList"><list><block s="reportQuotient"><block s="reportRound"><block s="reportProduct"><block s="reportListItem"><l>1</l><l/></block><l>1000</l></block></block><l>1000</l></block><block s="reportQuotient"><block s="reportRound"><block s="reportProduct"><block s="reportListItem"><l>2</l><l/></block><l>1000</l></block></block><l>1000</l></block></list></block></autolambda><list></list></block><block var="points"/></block></block><block s="doIfElse"><block s="reportLessThan"><block s="reportListAttribute"><l><option>length</option></l><block var="points"/></block><l>2</l></block><script><block s="doReport"><block s="reportNewList"><list></list></block></block></script><script><block s="doSetVar"><l>lines</l><block s="reportNewList"><list></list></block></block><block s="doSetVar"><l>lastpoint</l><block s="reportListItem"><l>1</l><block var="points"/></block></block><block s="doSetVar"><l>firstpoint</l><block s="reportListItem"><l>1</l><block var="points"/></block></block><block s="doForEach"><l>项</l><block s="reportCDR"><block var="points"/></block><script><block s="doAddToList"><block s="reportNewList"><list><block var="lastpoint"/><block var="项"/></list></block><block var="lines"/></block><block s="doSetVar"><l>lastpoint</l><block var="项"/></block></script></block><block s="doIf"><block s="reportNot"><block s="reportEquals"><block var="lastpoint"/><block var="firstpoint"/></block></block><script><block s="doAddToList"><block s="reportNewList"><list><block var="lastpoint"/><block var="firstpoint"/></list></block><block var="lines"/></block></script></block></script></block><block s="doReport"><block var="lines"/></block></script></block></script></block-definition><block-definition s="has one crosspoint? line1 %&apos;line1&apos; line2 %&apos;line2&apos;" type="predicate" category="sensing"><header></header><code></code><translations>zh_CN:线段1 _ 和线段2 _ 有一个交点？&#xD;</translations><inputs><input type="%l"></input><input type="%l"></input></inputs><script><block s="doDeclareVariables"><list><l>angle1</l><l>angle2</l><l>point</l><l>direction</l></list></block><block s="doWarp"><script><block s="doSetVar"><l>point</l><block s="reportListItem"><l>1</l><block var="line1"/></block></block><block s="doSetVar"><l>angle1</l><custom-block s="calcAngle start %l end %l"><block var="point"/><block s="reportListItem"><l>1</l><block var="line2"/></block></custom-block></block><block s="doSetVar"><l>angle2</l><custom-block s="calcAngle start %l end %l"><block var="point"/><block s="reportListItem"><l>2</l><block var="line2"/></block></custom-block></block><block s="doSetVar"><l>direction</l><custom-block s="calcAngle start %l end %l"><block var="point"/><block s="reportListItem"><l>2</l><block var="line1"/></block></custom-block></block><block s="doIf"><block s="reportEquals"><block s="reportModulus"><block s="reportSum"><block var="angle1"/><l>360</l></block><l>360</l></block><block s="reportModulus"><block s="reportSum"><block var="angle2"/><l>360</l></block><l>360</l></block></block><script><block s="doReport"><block s="reportBoolean"><l><bool>false</bool></l></block></block></script></block><block s="doIfElse"><block s="reportGreaterThan"><block var="angle1"/><block var="angle2"/></block><script><block s="doIf"><block s="reportLessThan"><block s="reportDifference"><block var="angle1"/><block var="angle2"/></block><l>180</l></block><script><block s="doIf"><block s="reportOr"><block s="reportGreaterThan"><block var="direction"/><block var="angle1"/></block><block s="reportLessThan"><block var="direction"/><block var="angle2"/></block></block><script><block s="doReport"><block s="reportBoolean"><l><bool>false</bool></l></block></block></script></block></script></block><block s="doIf"><block s="reportGreaterThan"><block s="reportDifference"><block var="angle1"/><block var="angle2"/></block><l>180</l></block><script><block s="doIf"><block s="reportAnd"><block s="reportLessThan"><block var="direction"/><block var="angle1"/></block><block s="reportGreaterThan"><block var="direction"/><block var="angle2"/></block></block><script><block s="doReport"><block s="reportBoolean"><l><bool>false</bool></l></block></block></script></block></script></block></script><script><block s="doIf"><block s="reportLessThan"><block s="reportDifference"><block var="angle2"/><block var="angle1"/></block><l>180</l></block><script><block s="doIf"><block s="reportOr"><block s="reportGreaterThan"><block var="direction"/><block var="angle2"/></block><block s="reportLessThan"><block var="direction"/><block var="angle1"/></block></block><script><block s="doReport"><block s="reportBoolean"><l><bool>false</bool></l></block></block></script></block></script></block><block s="doIf"><block s="reportGreaterThan"><block s="reportDifference"><block var="angle2"/><block var="angle1"/></block><l>180</l></block><script><block s="doIf"><block s="reportAnd"><block s="reportLessThan"><block var="direction"/><block var="angle2"/></block><block s="reportGreaterThan"><block var="direction"/><block var="angle1"/></block></block><script><block s="doReport"><block s="reportBoolean"><l><bool>false</bool></l></block></block></script></block></script></block></script></block><block s="doReport"><block s="reportBoolean"><l><bool>true</bool></l></block></block></script></block></script></block-definition><block-definition s="combine lines %&apos;lines&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%l"></input></inputs><script><block s="doDeclareVariables"><list><l>result</l><l>lastline</l><l>tmplines</l></list></block><block s="doWarp"><script><block s="doIf"><block s="reportEquals"><block s="reportListAttribute"><l><option>length</option></l><block var="lines"/></block><l>1</l></block><script><block s="doReport"><block var="lines"/></block></script></block><block s="doSetVar"><l>result</l><block s="reportNewList"><list></list></block></block><block s="doSetVar"><l>lastline</l><block s="reportListItem"><l>1</l><block var="lines"/></block></block><block s="doSetVar"><l>tmplines</l><block s="reportCDR"><block var="lines"/></block></block><block s="doForEach"><l>项</l><block var="tmplines"/><script><block s="doIfElse"><block s="reportAnd"><block s="reportEquals"><block s="reportListItem"><l>2</l><block var="lastline"/></block><block s="reportListItem"><l>1</l><block var="项"/></block></block><custom-block s="line %l contains point %l"><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block var="lastline"/></block><block s="reportListItem"><l>2</l><block var="项"/></block></list></block><block s="reportListItem"><l>1</l><block var="项"/></block></custom-block></block><script><block s="doSetVar"><l>lastline</l><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block var="lastline"/></block><block s="reportListItem"><l>2</l><block var="项"/></block></list></block></block></script><script><block s="doAddToList"><block var="lastline"/><block var="result"/></block><block s="doSetVar"><l>lastline</l><block var="项"/></block></script></block></script></block><block s="doIfElse"><block s="reportAnd"><block s="reportEquals"><block s="reportListItem"><l>2</l><block var="lastline"/></block><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block var="result"/></block></block></block><custom-block s="line %l contains point %l"><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block var="lastline"/></block><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="result"/></block></block></list></block><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block var="result"/></block></block></custom-block></block><script><block s="doReplaceInList"><l>1</l><block var="result"/><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block var="lastline"/></block><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="result"/></block></block></list></block></block></script><script><block s="doAddToList"><block var="lastline"/><block var="result"/></block></script></block></script></block><block s="doReport"><block var="result"/></block></script></block-definition><block-definition s="crossPoint of line1 %&apos;line1&apos; and line2 %&apos;line2&apos;" type="reporter" category="sensing"><header></header><code></code><translations>zh_CN:线段1 _ 和线段2 _ 的交点&#xD;</translations><inputs><input type="%l"></input><input type="%l"></input></inputs><script><block s="doDeclareVariables"><list><l>angle1</l><l>angle2</l><l>includedAngle1</l><l>edgeLength</l><l>includedAngle2</l><l>angle3</l><l>angle4</l><l>point</l><l>vDistance</l><l>includeAngle3</l><l>distance</l><l>hypotenuse</l><l>crossPoint</l></list></block><block s="doWarp"><script><block s="doIf"><block s="reportNot"><custom-block s="hasCrossPoint? line1 %l line2 %l"><block var="line1"/><block var="line2"/></custom-block></block><script><block s="doReport"><block s="reportNewList"><list></list></block></block></script></block><block s="doSetVar"><l>point</l><block s="reportListItem"><l>1</l><block var="line1"/></block></block><block s="doSetVar"><l>angle1</l><custom-block s="calcAngle start %l end %l"><block s="reportListItem"><l>1</l><block var="line2"/></block><block s="reportListItem"><l>2</l><block var="line2"/></block></custom-block></block><block s="doSetVar"><l>angle2</l><custom-block s="calcAngle start %l end %l"><block s="reportListItem"><l>1</l><block var="line2"/></block><block var="point"/></custom-block></block><block s="doSetVar"><l>angle3</l><custom-block s="calcAngle start %l end %l"><block var="point"/><block s="reportListItem"><l>1</l><block var="line2"/></block></custom-block></block><block s="doSetVar"><l>angle4</l><custom-block s="calcAngle start %l end %l"><block var="point"/><block s="reportListItem"><l>2</l><block var="line1"/></block></custom-block></block><block s="doSetVar"><l>includedAngle1</l><block s="reportMonadic"><l><option>abs</option></l><block s="reportDifference"><block var="angle2"/><block var="angle1"/></block></block></block><block s="doSetVar"><l>includedAngle2</l><block s="reportMonadic"><l><option>abs</option></l><block s="reportDifference"><block var="angle3"/><block var="angle4"/></block></block></block><block s="doIf"><block s="reportGreaterThan"><block var="includedAngle1"/><l>180</l></block><script><block s="doSetVar"><l>includedAngle1</l><block s="reportDifference"><l>360</l><block var="includedAngle1"/></block></block></script></block><block s="doIf"><block s="reportGreaterThan"><block var="includedAngle2"/><l>180</l></block><script><block s="doSetVar"><l>includedAngle2</l><block s="reportDifference"><l>360</l><block var="includedAngle2"/></block></block></script></block><block s="doSetVar"><l>includeAngle3</l><block s="reportDifference"><l>180</l><block s="reportSum"><block var="includedAngle1"/><block var="includedAngle2"/></block></block></block><block s="doSetVar"><l>edgeLength</l><block s="reportMonadic"><l><option>sqrt</option></l><block s="reportSum"><block s="reportProduct"><block s="reportDifference"><block s="reportListItem"><l>2</l><block var="point"/></block><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="line2"/></block></block></block><block s="reportDifference"><block s="reportListItem"><l>2</l><block var="point"/></block><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="line2"/></block></block></block></block><block s="reportProduct"><block s="reportDifference"><block s="reportListItem"><l>1</l><block var="point"/></block><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block var="line2"/></block></block></block><block s="reportDifference"><block s="reportListItem"><l>1</l><block var="point"/></block><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block var="line2"/></block></block></block></block></block></block></block><block s="doSetVar"><l>vDistance</l><block s="reportProduct"><block var="edgeLength"/><block s="reportMonadic"><l><option>sin</option></l><block var="includedAngle1"/></block></block></block><block s="doSetVar"><l>distance</l><block s="reportMonadic"><l><option>abs</option></l><block s="reportQuotient"><block var="vDistance"/><block s="reportMonadic"><l><option>cos</option></l><block s="reportDifference"><l>90</l><block var="includeAngle3"/></block></block></block></block></block><block s="doSetVar"><l>hypotenuse</l><block s="reportMonadic"><l><option>sqrt</option></l><block s="reportDifference"><block s="reportSum"><block s="reportProduct"><block var="distance"/><block var="distance"/></block><block s="reportProduct"><block var="edgeLength"/><block var="edgeLength"/></block></block><block s="reportProduct"><l>2</l><block s="reportProduct"><block s="reportProduct"><block var="edgeLength"/><block var="distance"/></block><block s="reportMonadic"><l><option>cos</option></l><block var="includedAngle2"/></block></block></block></block></block></block><block s="doSetVar"><l>crossPoint</l><block s="reportNewList"><list><block s="reportSum"><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block var="line2"/></block></block><block s="reportProduct"><block var="hypotenuse"/><block s="reportMonadic"><l><option>cos</option></l><block var="angle1"/></block></block></block><block s="reportSum"><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="line2"/></block></block><block s="reportProduct"><block var="hypotenuse"/><block s="reportMonadic"><l><option>sin</option></l><block var="angle1"/></block></block></block></list></block></block><block s="doReport"><block var="crossPoint"/></block></script></block></script></block-definition><block-definition s="direction line %&apos;line&apos;" type="reporter" category="sensing"><header></header><code></code><translations>zh_CN:线段 _ 的方向&#xD;</translations><inputs><input type="%l"></input></inputs><script><block s="doReport"><custom-block s="calcAngle start %l end %l"><block s="reportListItem"><l>1</l><block var="line"/></block><block s="reportListItem"><l>2</l><block var="line"/></block></custom-block></block></script></block-definition><block-definition s="$flash remove duplicates from %&apos;data&apos;" type="reporter" category="lists"><comment x="0" y="0" w="209" collapsed="false">Reports a new list whose items are the same as in the input list, except that if two or more equal items appear in the input list, only the first one is kept in the result.</comment><header></header><code></code><translations>ca:elimina els duplicats de _&#xD;</translations><inputs><input type="%l"></input></inputs><script><block s="doReport"><block s="reportAtomicKeep"><block s="reifyPredicate"><autolambda><block s="reportEquals"><block s="reportListIndex"><block var="value"/><block var="list"/></block><block var="index"/></block></autolambda><list><l>value</l><l>index</l><l>list</l></list></block><block var="data"/></block></block></script><scripts><script x="14.000000000000002" y="164.2222222222222"><block s="doWarp"><script><block s="doIf"><block s="reportEquals"><block var="data"/><block s="reportNewList"><list></list></block></block><script><block s="doReport"><block s="reportNewList"><list></list></block></block></script></block><block s="doIfElse"><block s="reportListContainsItem"><block s="reportCDR"><block var="data"/></block><block s="reportListItem"><l>1</l><block var="data"/></block></block><script><block s="doReport"><custom-block s="$flash remove duplicates from %l"><block s="reportCDR"><block var="data"/></block></custom-block></block></script><script><block s="doReport"><block s="reportCONS"><block s="reportListItem"><l>1</l><block var="data"/></block><custom-block s="$flash remove duplicates from %l"><block s="reportCDR"><block var="data"/></block></custom-block></block></block></script></block></script></block></script></scripts></block-definition><block-definition s="line %&apos;line&apos; contains point %&apos;point&apos;" type="predicate" category="sensing"><header></header><code></code><translations>zh_CN:线段 _ 包含 点 _&#xD;</translations><inputs><input type="%l"></input><input type="%l"></input></inputs><script><block s="doReport"><block s="reportEquals"><block s="reportRound"><block s="reportProduct"><custom-block s="lineLength %l"><block var="line"/></custom-block><l>100</l></block></block><block s="reportRound"><block s="reportProduct"><block s="reportSum"><custom-block s="lineLength %l"><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block var="line"/></block><block var="point"/></list></block></custom-block><custom-block s="lineLength %l"><block s="reportNewList"><list><block var="point"/><block s="reportListItem"><l>2</l><block var="line"/></block></list></block></custom-block></block><l>100</l></block></block></block></block></script></block-definition><block-definition s="line %&apos;line1&apos; contains line %&apos;line2&apos;" type="predicate" category="sensing"><header></header><code></code><translations>zh_CN:线段 _ 包含 线段 _&#xD;</translations><inputs><input type="%l"></input><input type="%l"></input></inputs><script><block s="doReport"><block s="reportAnd"><custom-block s="line %l contains point %l"><block var="line1"/><block s="reportListItem"><l>1</l><block var="line2"/></block></custom-block><custom-block s="line %l contains point %l"><block var="line1"/><block s="reportListItem"><l>2</l><block var="line2"/></block></custom-block></block></block></script></block-definition><block-definition s="diamond stitch length %&apos;length&apos; width %&apos;width&apos;" type="command" category="embroidery"><header></header><code></code><translations>zh_CN:钻石针 齿距 _ 宽度 _&#xD;</translations><inputs><input type="%n">10</input><input type="%n">12</input></inputs><script><block s="doDeclareVariables"><list><l>a</l><l>l</l></list></block><block s="doWarp"><script><block s="doSetVar"><l>a</l><block s="reportMonadic"><l><option>atan</option></l><block s="reportQuotient"><block var="width"/><block var="length"/></block></block></block><block s="doSetVar"><l>l</l><block s="reportQuotient"><block s="reportQuotient"><block var="length"/><l>2</l></block><block s="reportMonadic"><l><option>cos</option></l><block var="a"/></block></block></block><block s="turnLeft"><block var="a"/></block><block s="doRepeat"><l>2</l><script><block s="forward"><block var="l"/></block><block s="turn"><block s="reportProduct"><l>2</l><block var="a"/></block></block><block s="forward"><block var="l"/></block><block s="turn"><block s="reportDifference"><l>180</l><block s="reportProduct"><l>2</l><block var="a"/></block></block></block></script></block><block s="turn"><block var="a"/></block><block s="forward"><block var="length"/></block></script></block></script></block-definition><block-definition s="maxmin xy of lines %&apos;lines&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%l"></input></inputs><script><block s="doDeclareVariables"><list><l>xy</l><l>tmplist</l><l>points</l></list></block><block s="doWarp"><script><block s="doSetVar"><l>points</l><block s="reportNewList"><list></list></block></block><block s="doSetVar"><l>xy</l><block s="reportNewList"><list></list></block></block><block s="doForEach"><l>项</l><block var="lines"/><script><block s="doSetVar"><l>points</l><block s="reportConcatenatedLists"><list><block var="points"/><block s="reportListItem"><l>2</l><block var="项"/></block></list></block></block></script></block><block s="doSetVar"><l>tmplist</l><custom-block s="$flash sort %l ordering with %predRing"><block var="points"/><block s="reifyPredicate"><autolambda><block s="reportLessThan"><block s="reportListItem"><l>1</l><l/></block><block s="reportListItem"><l>1</l><l/></block></block></autolambda><list></list></block></custom-block></block><block s="doAddToList"><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block var="tmplist"/></block></block><block var="xy"/></block><block s="doAddToList"><block s="reportListItem"><l>1</l><block s="reportListItem"><l><option>last</option></l><block var="tmplist"/></block></block><block var="xy"/></block><block s="doSetVar"><l>tmplist</l><custom-block s="$flash sort %l ordering with %predRing"><block var="points"/><block s="reifyPredicate"><autolambda><block s="reportLessThan"><block s="reportListItem"><l>2</l><l/></block><block s="reportListItem"><l>2</l><l/></block></block></autolambda><list></list></block></custom-block></block><block s="doAddToList"><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="tmplist"/></block></block><block var="xy"/></block><block s="doAddToList"><block s="reportListItem"><l>2</l><block s="reportListItem"><l><option>last</option></l><block var="tmplist"/></block></block><block var="xy"/></block></script></block><block s="doReport"><block var="xy"/></block></script></block-definition><block-definition s="cutting lines, frame lines %&apos;lines&apos; direction %&apos;direction&apos; dencity %&apos;dencity&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%l"></input><input type="%n">0</input><input type="%n">3</input></inputs><script><block s="doDeclareVariables"><list><l>bound</l><l>edgeLines</l><l>cuttingLines</l><l>y1</l><l>y2</l><l>x</l></list></block><block s="doWarp"><script><block s="doSetVar"><l>bound</l><custom-block s="maxmin xy of lines %l"><block var="lines"/></custom-block></block><block s="doSetVar"><l>edgeLines</l><custom-block s="edge cutting lines, lines %l direction %s"><block var="lines"/><block var="direction"/></custom-block></block><block s="doSetVar"><l>cuttingLines</l><block s="reportNewList"><list></list></block></block><block s="doIfElse"><block s="reportEquals"><block var="direction"/><l>90</l></block><script><block s="doSetVar"><l>x</l><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block var="edgeLines"/></block></block></block></block><block s="doChangeVar"><l>x</l><block var="dencity"/></block><block s="doUntil"><block s="reportGreaterThan"><block var="x"/><block s="reportDifference"><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block s="reportListItem"><l><option>last</option></l><block var="edgeLines"/></block></block></block><l>1</l></block></block><script><block s="doAddToList"><block s="reportNewList"><list><block s="reportNewList"><list><block var="x"/><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block var="edgeLines"/></block></block></block></list></block><block s="reportNewList"><list><block var="x"/><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="edgeLines"/></block></block></block></list></block></list></block><block var="cuttingLines"/></block><block s="doChangeVar"><l>x</l><block var="dencity"/></block></script></block></script><script><block s="doSetVar"><l>y1</l><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block var="edgeLines"/></block></block></block></block><block s="doSetVar"><l>y2</l><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="edgeLines"/></block></block></block></block><block s="doChangeVar"><l>y1</l><block s="reportRound"><block s="reportQuotient"><block var="dencity"/><block s="reportMonadic"><l><option>cos</option></l><block var="direction"/></block></block></block></block><block s="doChangeVar"><l>y2</l><block s="reportRound"><block s="reportQuotient"><block var="dencity"/><block s="reportMonadic"><l><option>cos</option></l><block var="direction"/></block></block></block></block><block s="doUntil"><block s="reportGreaterThan"><block var="y1"/><block s="reportDifference"><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block s="reportListItem"><l><option>last</option></l><block var="edgeLines"/></block></block></block><l>1</l></block></block><script><block s="doAddToList"><block s="reportNewList"><list><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block var="edgeLines"/></block></block></block><block var="y1"/></list></block><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="edgeLines"/></block></block></block><block var="y2"/></list></block></list></block><block var="cuttingLines"/></block><block s="doChangeVar"><l>y1</l><block s="reportRound"><block s="reportQuotient"><block var="dencity"/><block s="reportMonadic"><l><option>cos</option></l><block var="direction"/></block></block></block></block><block s="doChangeVar"><l>y2</l><block s="reportRound"><block s="reportQuotient"><block var="dencity"/><block s="reportMonadic"><l><option>cos</option></l><block var="direction"/></block></block></block></block></script></block></script></block></script></block><block s="doReport"><block var="cuttingLines"/></block></script></block-definition><block-definition s="edge cutting lines, lines %&apos;lines&apos; direction %&apos;direction&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%l"></input><input type="%s">0</input></inputs><script><block s="doDeclareVariables"><list><l>xy</l><l>points</l><l>tmplist</l><l>minX</l><l>maxX</l><l>minY</l><l>maxY</l></list></block><block s="doWarp"><script><block s="doSetVar"><l>xy</l><custom-block s="maxmin xy of lines %l"><block var="lines"/></custom-block></block><block s="doSetVar"><l>minX</l><block s="reportListItem"><l>1</l><block var="xy"/></block></block><block s="doSetVar"><l>maxX</l><block s="reportListItem"><l>2</l><block var="xy"/></block></block><block s="doSetVar"><l>minY</l><block s="reportListItem"><l>3</l><block var="xy"/></block></block><block s="doSetVar"><l>maxY</l><block s="reportListItem"><l>4</l><block var="xy"/></block></block><block s="doIfElse"><block s="reportEquals"><block var="direction"/><l>90</l></block><script><block s="doReport"><block s="reportNewList"><list><block s="reportNewList"><list><block s="reportNewList"><list><block var="minX"/><block var="minY"/></list></block><block s="reportNewList"><list><block var="minX"/><block var="maxY"/></list></block></list></block><block s="reportNewList"><list><block s="reportNewList"><list><block var="maxX"/><block var="minY"/></list></block><block s="reportNewList"><list><block var="maxX"/><block var="maxY"/></list></block></list></block></list></block></block></script><script><block s="doSetVar"><l>points</l><block s="reportNewList"><list></list></block></block><block s="doForEach"><l>项</l><block var="lines"/><script><block s="doSetVar"><l>points</l><custom-block s="$flash remove duplicates from %l"><block s="reportConcatenatedLists"><list><block var="points"/><block s="reportListItem"><l>2</l><block var="项"/></block></list></block></custom-block></block></script></block><block s="doSetVar"><l>tmplist</l><custom-block s="$flash sort %l ordering with %predRing"><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportNewList"><list><block s="reportSum"><block s="reportProduct"><block s="reportDifference"><block var="minX"/><block s="reportListItem"><l>1</l><l/></block></block><block s="reportMonadic"><l><option>tan</option></l><block var="direction"/></block></block><block s="reportListItem"><l>2</l><l/></block></block><block s="reportSum"><block s="reportProduct"><block s="reportDifference"><block var="maxX"/><block s="reportListItem"><l>1</l><l/></block></block><block s="reportMonadic"><l><option>tan</option></l><block var="direction"/></block></block><block s="reportListItem"><l>2</l><l/></block></block></list></block></autolambda><list></list></block><block var="points"/></block><block s="reifyPredicate"><autolambda><block s="reportLessThan"><block s="reportListItem"><l>1</l><l/></block><block s="reportListItem"><l>1</l><l/></block></block></autolambda><list></list></block></custom-block></block></script></block></script></block><block s="doReport"><block s="reportNewList"><list><block s="reportNewList"><list><block s="reportNewList"><list><block var="minX"/><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block var="tmplist"/></block></block></list></block><block s="reportNewList"><list><block var="maxX"/><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="tmplist"/></block></block></list></block></list></block><block s="reportNewList"><list><block s="reportNewList"><list><block var="minX"/><block s="reportListItem"><l>1</l><block s="reportListItem"><l><option>last</option></l><block var="tmplist"/></block></block></list></block><block s="reportNewList"><list><block var="maxX"/><block s="reportListItem"><l>2</l><block s="reportListItem"><l><option>last</option></l><block var="tmplist"/></block></block></list></block></list></block></list></block></block></script></block-definition><block-definition s="lines to cross once line %&apos;line&apos; lines %&apos;lines&apos;" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%l"></input><input type="%l"></input></inputs><script><block s="doDeclareVariables"><list><l>result</l></list></block><block s="doWarp"><script><block s="doSetVar"><l>result</l><block s="reportNewList"><list></list></block></block><block s="doForEach"><l>项</l><block var="lines"/><script><block s="doIf"><custom-block s="has one crosspoint? line1 %l line2 %l"><block var="line"/><block s="reportListItem"><l>2</l><block var="项"/></block></custom-block><script><block s="doAddToList"><block var="项"/><block var="result"/></block></script></block></script></block><block s="doReport"><block var="result"/></block></script></block></script></block-definition><block-definition s="close tracking" type="command" category="motion"><header></header><code></code><translations>zh_CN:取消跟踪&#xD;</translations><inputs></inputs><script><block s="doRun"><block s="reportJSFunction"><list></list><l>if (this.trackingOpened) {&#xD;    this.trackingOpened = false;&#xD;    this.tracked = false;&#xD;    this.setPosition = this.backupSetPosition;&#xD;    this.down = function() {&#xD;        this.isDown = true;&#xD;    }&#xD;}</l></block><list></list></block></script></block-definition><block-definition s="number the lines group %&apos;groupid&apos; lines %&apos;lines&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%n">1</input><input type="%l"></input></inputs><script><block s="doWarp"><script><block s="doReport"><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportNewList"><list><block s="reportSum"><block s="reportProduct"><block var="groupid"/><l>10000</l></block><block s="reportListIndex"><l></l><block var="lines"/></block></block><l></l><custom-block s="lineLength %l"><l/></custom-block></list></block></autolambda><list></list></block><block var="lines"/></block></block></script></block></script></block-definition><block-definition s="fill x: %&apos;x&apos; y: %&apos;y&apos; direction %&apos;direction&apos; dencity %&apos;dencity&apos;" type="command" category="motion"><header></header><code></code><translations>zh_CN:填充 x: _ y: _ 方向 _ 间距 _&#xD;</translations><inputs><input type="%n">0</input><input type="%n">0</input><input type="%n">0</input><input type="%n">3</input></inputs><script><block s="doDeclareVariables"><list><l>tracks</l></list></block><block s="doSetVar"><l>tracks</l><custom-block s="split tracks %l"><custom-block s="my tracks"></custom-block></custom-block></block><block s="doIf"><block s="reportNot"><block s="reportListIsEmpty"><block var="tracks"/></block></block><script><custom-block s="fill the area enclosed by points %l direction %n dencity %n"><custom-block s="smallestCloseRegions %l %l"><block var="tracks"/><block s="reportNewList"><list><block var="x"/><block var="y"/></list></block></custom-block><custom-block s="translate angle %n"><block var="direction"/></custom-block><block var="dencity"/></custom-block></script></block></script></block-definition><block-definition s="Min %&apos;number1&apos; %&apos;number2&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%n">1</input><input type="%n">2</input></inputs><script><block s="doReport"><block s="reportIfElse"><block s="reportLessThan"><block var="number1"/><block var="number2"/></block><block var="number1"/><block var="number2"/></block></block></script></block-definition><block-definition s="seek next filledline point %&apos;point&apos; filled lines %&apos;filledLines&apos; lines %&apos;lines&apos; (2)" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%l"></input><input type="%l"></input><input type="%l"></input></inputs><script><block s="doDeclareVariables"><list><l>curPoint</l><l>orderedLines</l><l>result</l><l>relatedFilledLines</l></list></block><block s="doWarp"><script><block s="doIfElse"><block s="reportListIsEmpty"><block s="reportListItem"><l>2</l><block var="point"/></block></block><script><block s="doSetVar"><l>curPoint</l><block s="reportListItem"><l>1</l><block var="point"/></block></block><block s="doSetVar"><l>orderedLines</l><custom-block s="$flash sort %l ordering with %predRing"><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportNewList"><list><custom-block s="Min %n %n"><custom-block s="lineLength %l"><block s="reportNewList"><list><block var="curPoint"/><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><l/></block></block></list></block></custom-block><custom-block s="lineLength %l"><block s="reportNewList"><list><block var="curPoint"/><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><l/></block></block></list></block></custom-block></custom-block><block s="reportListIndex"><l></l><block var="filledLines"/></block><l></l></list></block></autolambda><list></list></block><block var="filledLines"/></block><block s="reifyPredicate"><autolambda><block s="reportLessThan"><block s="reportListItem"><l>1</l><l/></block><block s="reportListItem"><l>1</l><l/></block></block></autolambda><list></list></block></custom-block></block><block s="doSetVar"><l>result</l><block s="reportListItem"><l>3</l><block s="reportListItem"><l>1</l><block var="orderedLines"/></block></block></block><block s="doDeleteFromList"><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="orderedLines"/></block></block><block var="filledLines"/></block><block s="doIf"><block s="reportLessThan"><custom-block s="lineLength %l"><block s="reportNewList"><list><block var="curPoint"/><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="result"/></block></block></list></block></custom-block><custom-block s="lineLength %l"><block s="reportNewList"><list><block var="curPoint"/><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block var="result"/></block></block></list></block></custom-block></block><script><block s="doSetVar"><l>result</l><block s="reportNewList"><list><block s="reportNewList"><list><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="result"/></block></block><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block var="result"/></block></block></list></block><block s="reportNewList"><list><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block var="result"/></block></block><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block var="result"/></block></block></list></block></list></block></block></script></block><block s="doReport"><block var="result"/></block></script><script><block s="doSetVar"><l>orderedLines</l><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportNewList"><list><block s="reportListIndex"><l></l><block var="filledLines"/></block><l></l></list></block></autolambda><list></list></block><block var="filledLines"/></block></block><block s="doSetVar"><l>relatedFilledLines</l><block s="reportKeep"><block s="reifyPredicate"><autolambda><block s="reportOr"><block s="reportEquals"><block s="reportRound"><block s="reportQuotient"><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><l/></block></block></block></block><l>10000</l></block></block><block s="reportRound"><block s="reportQuotient"><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block var="point"/></block></block><l>10000</l></block></block></block><block s="reportEquals"><block s="reportRound"><block s="reportQuotient"><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><l/></block></block></block></block><l>10000</l></block></block><block s="reportRound"><block s="reportQuotient"><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block var="point"/></block></block><l>10000</l></block></block></block></block></autolambda><list></list></block><block var="orderedLines"/></block></block><block s="doIfElse"><block s="reportListIsEmpty"><block var="relatedFilledLines"/></block><script><block s="doReport"><block s="reportNewList"><list></list></block></block></script><script><block s="doSetVar"><l>curPoint</l><block s="reportListItem"><l>1</l><block var="point"/></block></block><block s="doSetVar"><l>orderedLines</l><custom-block s="$flash sort %l ordering with %predRing"><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportNewList"><list><custom-block s="Min %n %n"><custom-block s="route distance from point %l to point %l lines %l"><block var="point"/><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><l/></block></block></block><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><l/></block></block></block></list></block><block var="lines"/></custom-block><custom-block s="route distance from point %l to point %l lines %l"><block var="point"/><block s="reportNewList"><list><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><l/></block></block></block><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><l/></block></block></block></list></block><block var="lines"/></custom-block></custom-block><block s="reportListItem"><l>1</l><l/></block><block s="reportListItem"><l>2</l><l/></block></list></block></autolambda><list></list></block><block var="relatedFilledLines"/></block><block s="reifyPredicate"><autolambda><block s="reportLessThan"><block s="reportListItem"><l>1</l><l/></block><block s="reportListItem"><l>1</l><l/></block></block></autolambda><list></list></block></custom-block></block><block s="doSetVar"><l>orderedLines</l><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportNewList"><list><block s="reportListItem"><l>2</l><l/></block><block s="reportListItem"><l>3</l><l/></block></list></block></autolambda><list></list></block><block s="reportKeep"><block s="reifyPredicate"><autolambda><block s="reportEquals"><block s="reportListItem"><l>1</l><l/></block><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block var="orderedLines"/></block></block></block></autolambda><list></list></block><block var="orderedLines"/></block></block></block><block s="doSetVar"><l>orderedLines</l><custom-block s="$flash sort %l ordering with %predRing"><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportNewList"><list><custom-block s="Min %n %n"><custom-block s="length of route from point %l to point %l lines %l"><block var="point"/><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><l/></block></block></block><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><l/></block></block></block></list></block><block var="lines"/></custom-block><custom-block s="length of route from point %l to point %l lines %l"><block var="point"/><block s="reportNewList"><list><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><l/></block></block></block><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><l/></block></block></block></list></block><block var="lines"/></custom-block></custom-block><block s="reportListItem"><l>1</l><l/></block><block s="reportListItem"><l>2</l><l/></block></list></block></autolambda><list></list></block><block var="orderedLines"/></block><block s="reifyPredicate"><autolambda><block s="reportLessThan"><block s="reportListItem"><l>1</l><l/></block><block s="reportListItem"><l>1</l><l/></block></block></autolambda><list></list></block></custom-block></block><block s="doSetVar"><l>result</l><block s="reportListItem"><l>3</l><block s="reportListItem"><l>1</l><block var="orderedLines"/></block></block></block><block s="doDeleteFromList"><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="orderedLines"/></block></block><block var="filledLines"/></block></script></block><block s="doDeclareVariables"><list><l>line1Section</l><l>line2Section</l></list></block><block s="doSetVar"><l>line1Section</l><block s="reportRound"><block s="reportQuotient"><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block var="result"/></block></block></block><l>10000</l></block></block></block><block s="doSetVar"><l>line2Section</l><block s="reportRound"><block s="reportQuotient"><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block var="result"/></block></block></block><l>10000</l></block></block></block><block s="doIfElse"><block s="reportEquals"><block var="line1Section"/><block var="line2Section"/></block><script><block s="doIf"><block s="reportLessThan"><custom-block s="length of route from point %l to point %l lines %l"><block var="point"/><block s="reportNewList"><list><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="result"/></block></block><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block var="result"/></block></block></list></block><block var="lines"/></custom-block><custom-block s="length of route from point %l to point %l lines %l"><block var="point"/><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block var="result"/></block></block><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block var="result"/></block></block></list></block><block var="lines"/></custom-block></block><script><block s="doSetVar"><l>result</l><block s="reportNewList"><list><block s="reportNewList"><list><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="result"/></block></block><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block var="result"/></block></block></list></block><block s="reportNewList"><list><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block var="result"/></block></block><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block var="result"/></block></block></list></block></list></block></block></script></block></script><script><block s="doIf"><block s="reportNotEquals"><block var="line1Section"/><block s="reportRound"><block s="reportQuotient"><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block var="point"/></block></block><l>10000</l></block></block></block><script><block s="doSetVar"><l>result</l><block s="reportNewList"><list><block s="reportNewList"><list><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="result"/></block></block><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block var="result"/></block></block></list></block><block s="reportNewList"><list><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block var="result"/></block></block><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block var="result"/></block></block></list></block></list></block></block></script></block></script></block><block s="doReport"><block var="result"/></block></script></block></script></block></script></block-definition><block-definition s="intercepted lines, line %&apos;line&apos; lines %&apos;lines&apos;" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%l"></input><input type="%l"></input></inputs><script><block s="doDeclareVariables"><list><l>crossedlines</l><l>crossedpoints</l><l>interceptedlines</l><l>realpoints</l><l>lastpoint</l></list></block><block s="doWarp"><script><block s="doSetVar"><l>crossedlines</l><custom-block s="lines to cross once line %l lines %l"><block var="line"/><block var="lines"/></custom-block></block><block s="doIfElse"><block s="reportEquals"><custom-block s="direction line %l"><block var="line"/></custom-block><l>90</l></block><script><block s="doSetVar"><l>crossedpoints</l><custom-block s="$flash sort %l ordering with %predRing"><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportNewList"><list><custom-block s="crossPoint of line1 %l and line2 %l"><block var="line"/><block s="reportListItem"><l>2</l><l/></block></custom-block><l></l></list></block></autolambda><list></list></block><block var="crossedlines"/></block><block s="reifyPredicate"><autolambda><block s="reportLessThan"><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><l/></block></block><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><l/></block></block></block></autolambda><list></list></block></custom-block></block></script><script><block s="doSetVar"><l>crossedpoints</l><custom-block s="$flash sort %l ordering with %predRing"><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportNewList"><list><custom-block s="crossPoint of line1 %l and line2 %l"><block var="line"/><block s="reportListItem"><l>2</l><l/></block></custom-block><l></l></list></block></autolambda><list></list></block><block var="crossedlines"/></block><block s="reifyPredicate"><autolambda><block s="reportLessThan"><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><l/></block></block><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><l/></block></block></block></autolambda><list></list></block></custom-block></block></script></block><block s="doSetVar"><l>realpoints</l><block s="reportNewList"><list></list></block></block><block s="doSetVar"><l>lastpoint</l><block s="reportListItem"><l>1</l><block var="crossedpoints"/></block></block><block s="doForEach"><l>项</l><block s="reportCDR"><block var="crossedpoints"/></block><script><block s="doIfElse"><block s="reportEquals"><block s="reportListAttribute"><l><option>length</option></l><block var="lastpoint"/></block><l>0</l></block><script><block s="doSetVar"><l>lastpoint</l><block var="项"/></block></script><script><block s="doIfElse"><block s="reportEquals"><block s="reportListItem"><l>1</l><block var="lastpoint"/></block><block s="reportListItem"><l>1</l><block var="项"/></block></block><script><block s="doIfElse"><block s="reportLessThan"><block s="reportProduct"><block s="reportDifference"><block s="reportModulus"><block s="reportDifference"><custom-block s="direction line %l"><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block var="lastpoint"/></block><custom-block s="far end , point %l line %l"><block s="reportListItem"><l>1</l><block var="lastpoint"/></block><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block var="lastpoint"/></block></block></custom-block></list></block></custom-block><custom-block s="direction line %l"><block var="line"/></custom-block></block><l>360</l></block><l>180</l></block><block s="reportDifference"><block s="reportModulus"><block s="reportDifference"><custom-block s="direction line %l"><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block var="项"/></block><custom-block s="far end , point %l line %l"><block s="reportListItem"><l>1</l><block var="项"/></block><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block var="项"/></block></block></custom-block></list></block></custom-block><custom-block s="direction line %l"><block var="line"/></custom-block></block><l>360</l></block><l>180</l></block></block><l>0</l></block><script><block s="doAddToList"><block var="lastpoint"/><block var="realpoints"/></block></script><script><block s="doAddToList"><block var="lastpoint"/><block var="realpoints"/></block><block s="doAddToList"><block var="项"/><block var="realpoints"/></block></script></block><block s="doSetVar"><l>lastpoint</l><block s="reportNewList"><list></list></block></block></script><script><block s="doIfElse"><custom-block s="lines %l contain line %l"><block var="lines"/><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block var="lastpoint"/></block><block s="reportListItem"><l>1</l><block var="项"/></block></list></block></custom-block><script><block s="doIfElse"><block s="reportLessThan"><block s="reportProduct"><block s="reportDifference"><block s="reportModulus"><block s="reportDifference"><custom-block s="direction line %l"><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block var="lastpoint"/></block><custom-block s="far end , point %l line %l"><block s="reportListItem"><l>1</l><block var="lastpoint"/></block><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block var="lastpoint"/></block></block></custom-block></list></block></custom-block><custom-block s="direction line %l"><block var="line"/></custom-block></block><l>360</l></block><l>180</l></block><block s="reportDifference"><block s="reportModulus"><block s="reportDifference"><custom-block s="direction line %l"><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block var="项"/></block><custom-block s="far end , point %l line %l"><block s="reportListItem"><l>1</l><block var="项"/></block><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block var="项"/></block></block></custom-block></list></block></custom-block><custom-block s="direction line %l"><block var="line"/></custom-block></block><l>360</l></block><l>180</l></block></block><l>0</l></block><script><block s="doIfElse"><block s="reportEquals"><block s="reportModulus"><block s="reportListAttribute"><l><option>length</option></l><block var="realpoints"/></block><l>2</l></block><l>1</l></block><script><block s="doAddToList"><block var="lastpoint"/><block var="realpoints"/></block></script><script><block s="doAddToList"><block var="项"/><block var="realpoints"/></block></script></block></script><script><block s="doAddToList"><block var="lastpoint"/><block var="realpoints"/></block><block s="doAddToList"><block var="项"/><block var="realpoints"/></block></script></block><block s="doSetVar"><l>lastpoint</l><block s="reportNewList"><list></list></block></block></script><script><block s="doAddToList"><block var="lastpoint"/><block var="realpoints"/></block><block s="doSetVar"><l>lastpoint</l><block var="项"/></block></script></block></script></block></script></block></script></block><block s="doIf"><block s="reportNot"><block s="reportListIsEmpty"><block var="lastpoint"/></block></block><script><block s="doAddToList"><block var="lastpoint"/><block var="realpoints"/></block></script></block><block s="doDeclareVariables"><list><l>tmpline</l></list></block><block s="doSetVar"><l>interceptedlines</l><block s="reportNewList"><list></list></block></block><block s="doSetVar"><l>tmpline</l><block s="reportNewList"><list></list></block></block><block s="doForEach"><l>项</l><block var="realpoints"/><script><block s="doIfElse"><block s="reportEquals"><block s="reportListAttribute"><l><option>length</option></l><block var="tmpline"/></block><l>1</l></block><script><block s="doAddToList"><block var="项"/><block var="tmpline"/></block><block s="doIf"><block s="reportGreaterThan"><custom-block s="lineLength %l"><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block var="tmpline"/></block></block><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block var="tmpline"/></block></block></list></block></custom-block><l>2</l></block><script><block s="doAddToList"><block s="reportNewList"><list><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block var="tmpline"/></block></block><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block var="tmpline"/></block></block></list></block><block s="reportNewList"><list><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="tmpline"/></block></block><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block var="tmpline"/></block></block></list></block></list></block><block var="interceptedlines"/></block></script></block><block s="doSetVar"><l>tmpline</l><block s="reportNewList"><list></list></block></block></script><script><block s="doAddToList"><block var="项"/><block var="tmpline"/></block></script></block></script></block></script></block><block s="doReport"><block var="interceptedlines"/></block></script></block-definition><block-definition s="lines %&apos;lines&apos; contain line %&apos;line&apos;" type="predicate" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%l"></input><input type="%l"></input></inputs><script><block s="doWarp"><script><block s="doForEach"><l>项</l><block var="lines"/><script><block s="doIf"><custom-block s="line %l contains line %l"><block var="项"/><block var="line"/></custom-block><script><block s="doReport"><block s="reportBoolean"><l><bool>true</bool></l></block></block></script></block></script></block></script></block><block s="doReport"><block s="reportBoolean"><l><bool>false</bool></l></block></block></script><scripts><script x="383" y="72.33333333333333"><block s="reportOr"><block s="reportEquals"><block var="项"/><block var="line"/></block><block s="reportEquals"><block s="reportNewList"><list><block s="reportListItem"><l>2</l><block var="项"/></block><block s="reportListItem"><l>1</l><block var="项"/></block></list></block><block var="line"/></block></block></script></scripts></block-definition><block-definition s="far end , point %&apos;point&apos; line %&apos;line&apos;" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%l"></input><input type="%l"></input></inputs><script><block s="doIfElse"><block s="reportGreaterThan"><custom-block s="lineLength %l"><block s="reportNewList"><list><block var="point"/><block s="reportListItem"><l>1</l><block var="line"/></block></list></block></custom-block><custom-block s="lineLength %l"><block s="reportNewList"><list><block var="point"/><block s="reportListItem"><l>2</l><block var="line"/></block></list></block></custom-block></block><script><block s="doReport"><block s="reportListItem"><l>1</l><block var="line"/></block></block></script><script><block s="doReport"><block s="reportListItem"><l>2</l><block var="line"/></block></block></script></block></script></block-definition><block-definition s="get filled lines , frame lines %&apos;lines&apos; direction %&apos;direction&apos; dencity %&apos;dencity&apos;" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%l"></input><input type="%n">0</input><input type="%n">3</input></inputs><script><block s="doDeclareVariables"><list><l>realDirection</l><l>cuttingLines</l><l>filledLines</l></list></block><block s="doWarp"><script><block s="doSetVar"><l>realDirection</l><block s="reportModulus"><block var="direction"/><l>360</l></block></block><block s="doIf"><block s="reportAnd"><block s="reportGreaterThanOrEquals"><block var="realDirection"/><l>180</l></block><block s="reportLessThanOrEquals"><block var="realDirection"/><l>270</l></block></block><script><block s="doSetVar"><l>realDirection</l><block s="reportDifference"><block var="realDirection"/><l>180</l></block></block></script></block><block s="doIf"><block s="reportAnd"><block s="reportGreaterThan"><block var="realDirection"/><l>90</l></block><block s="reportLessThan"><block var="realDirection"/><l>180</l></block></block><script><block s="doSetVar"><l>realDirection</l><block s="reportSum"><block var="realDirection"/><l>180</l></block></block></script></block><block s="doSetVar"><l>cuttingLines</l><custom-block s="cutting lines, frame lines %l direction %n dencity %n"><block var="lines"/><block var="realDirection"/><block var="dencity"/></custom-block></block><block s="doSetVar"><l>filledLines</l><block s="reportNewList"><list></list></block></block><block s="doForEach"><l>项</l><block var="cuttingLines"/><script><block s="doSetVar"><l>filledLines</l><block s="reportConcatenatedLists"><list><block var="filledLines"/><custom-block s="intercepted lines, line %l lines %l"><block var="项"/><block var="lines"/></custom-block></list></block></block></script></block></script></block><block s="doReport"><block var="filledLines"/></block></script></block-definition><block-definition s="infinity" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doReport"><block s="evaluate"><block s="reportJSFunction"><list></list><l>return Infinity;</l></block><list></list></block></block></script></block-definition><block-definition s="track to closed lines %&apos;track&apos;" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%l"></input></inputs><script><block s="doDeclareVariables"><list><l>points</l><l>lines</l><l>groupId</l></list></block><block s="doWarp"><script><block s="doSetVar"><l>groupId</l><l>0</l></block><block s="doSetVar"><l>points</l><block s="reportNewList"><list></list></block></block><block s="doSetVar"><l>lines</l><block s="reportNewList"><list></list></block></block><block s="doForEach"><l>项</l><block var="track"/><script><block s="doIfElse"><block s="reportEquals"><block var="项"/><l>!</l></block><script><block s="doIf"><block s="reportNot"><block s="reportListIsEmpty"><block var="points"/></block></block><script><block s="doChangeVar"><l>groupId</l><l>1</l></block><block s="doAddToList"><custom-block s="number the lines group %n lines %l"><block var="groupId"/><custom-block s="combine lines %l"><custom-block s="points to lines %l"><block var="points"/></custom-block></custom-block></custom-block><block var="lines"/></block><block s="doSetVar"><l>points</l><block s="reportNewList"><list></list></block></block></script></block></script><script><block s="doAddToList"><block var="项"/><block var="points"/></block></script></block></script></block><block s="doIf"><block s="reportNot"><block s="reportListIsEmpty"><block var="points"/></block></block><script><block s="doChangeVar"><l>groupId</l><l>1</l></block><block s="doAddToList"><custom-block s="number the lines group %n lines %l"><block var="groupId"/><custom-block s="combine lines %l"><custom-block s="points to lines %l"><block var="points"/></custom-block></custom-block></custom-block><block var="lines"/></block></script></block><block s="doReport"><block var="lines"/></block></script></block></script></block-definition><block-definition s="hasCrossPoint? line1 %&apos;line1&apos; line2 %&apos;line2&apos;" type="predicate" category="sensing"><header></header><code></code><translations>zh_CN:线段1 _ 和线段2 _ 有交点？&#xD;</translations><inputs><input type="%l"></input><input type="%l"></input></inputs><script><block s="doDeclareVariables"><list><l>angle1</l><l>angle2</l><l>point</l><l>direction</l></list></block><block s="doWarp"><script><block s="doSetVar"><l>point</l><block s="reportListItem"><l>1</l><block var="line1"/></block></block><block s="doSetVar"><l>angle1</l><custom-block s="calcAngle start %l end %l"><block var="point"/><block s="reportListItem"><l>1</l><block var="line2"/></block></custom-block></block><block s="doSetVar"><l>angle2</l><custom-block s="calcAngle start %l end %l"><block var="point"/><block s="reportListItem"><l>2</l><block var="line2"/></block></custom-block></block><block s="doSetVar"><l>direction</l><custom-block s="calcAngle start %l end %l"><block var="point"/><block s="reportListItem"><l>2</l><block var="line1"/></block></custom-block></block><block s="doIfElse"><block s="reportGreaterThan"><block var="angle1"/><block var="angle2"/></block><script><block s="doIf"><block s="reportLessThan"><block s="reportDifference"><block var="angle1"/><block var="angle2"/></block><l>180</l></block><script><block s="doIf"><block s="reportOr"><block s="reportGreaterThan"><block var="direction"/><block var="angle1"/></block><block s="reportLessThan"><block var="direction"/><block var="angle2"/></block></block><script><block s="doReport"><block s="reportBoolean"><l><bool>false</bool></l></block></block></script></block></script></block><block s="doIf"><block s="reportGreaterThan"><block s="reportDifference"><block var="angle1"/><block var="angle2"/></block><l>180</l></block><script><block s="doIf"><block s="reportAnd"><block s="reportLessThan"><block var="direction"/><block var="angle1"/></block><block s="reportGreaterThan"><block var="direction"/><block var="angle2"/></block></block><script><block s="doReport"><block s="reportBoolean"><l><bool>false</bool></l></block></block></script></block></script></block></script><script><block s="doIf"><block s="reportLessThan"><block s="reportDifference"><block var="angle2"/><block var="angle1"/></block><l>180</l></block><script><block s="doIf"><block s="reportOr"><block s="reportGreaterThan"><block var="direction"/><block var="angle2"/></block><block s="reportLessThan"><block var="direction"/><block var="angle1"/></block></block><script><block s="doReport"><block s="reportBoolean"><l><bool>false</bool></l></block></block></script></block></script></block><block s="doIf"><block s="reportGreaterThan"><block s="reportDifference"><block var="angle2"/><block var="angle1"/></block><l>180</l></block><script><block s="doIf"><block s="reportAnd"><block s="reportLessThan"><block var="direction"/><block var="angle2"/></block><block s="reportGreaterThan"><block var="direction"/><block var="angle1"/></block></block><script><block s="doReport"><block s="reportBoolean"><l><bool>false</bool></l></block></block></script></block></script></block></script></block><block s="doReport"><block s="reportBoolean"><l><bool>true</bool></l></block></block></script></block></script></block-definition><block-definition s="fill the area %&apos;Track&apos; direction %&apos;direction&apos; dencity %&apos;dencity&apos; goback %&apos;goback&apos;" type="command" category="motion"><header></header><code></code><translations>zh_CN:填充轨迹间区域 _ 方向 _ 间距 _ 回到起点 _&#xD;</translations><inputs><input type="%cs"></input><input type="%n">0</input><input type="%n">3</input><input type="%b">true</input></inputs><script><block s="doDeclareVariables"><list><l>dir</l><l>lines</l><l>allLines</l><l>curFilledLine</l><l>lastFilledLine</l><l>cost</l><l>startPoint</l></list></block><block s="doWarp"><script><block s="doIf"><custom-block s="Is %cmdRing empty?"><block var="Track"/></custom-block><script><block s="doStopThis"><l><option>this block</option></l></block></script></block><block s="doSetVar"><l>direction</l><custom-block s="translate angle %n"><block var="direction"/></custom-block></block><custom-block s="create %s var %mult%txt"><l>global</l><list><l>filledLines</l></list></custom-block><custom-block s="create %s var %mult%txt"><l>global</l><list><l>glblines</l></list></custom-block><block s="doSetVar"><l>filledLines</l><block s="reportNewList"><list></list></block></block><block s="doSetVar"><l>glblines</l><block s="reportNewList"><list></list></block></block><custom-block s="begin tracking"></custom-block><block s="down"></block><block s="doSetVar"><l>startPoint</l><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportQuotient"><block s="reportRound"><block s="reportProduct"><l></l><l>1000</l></block></block><l>1000</l></block></autolambda><list></list></block><block s="reportNewList"><list><block s="xPosition"></block><block s="yPosition"></block></list></block></block></block><block s="doRun"><block var="Track"/><list></list></block><custom-block s="create %s var %mult%txt"><l>global</l><list><l>note:</l></list></custom-block><custom-block s="set var %s to %s"><l>note:</l><l>caculating filled lines...</l></custom-block><custom-block s="show var %s"><l>note:</l></custom-block><block s="doSetVar"><l>lines</l><custom-block s="track to closed lines %l"><custom-block s="my tracks"></custom-block></custom-block></block><block s="doSetVar"><l>glblines</l><custom-block s="copy list %l"><block var="lines"/></custom-block></block><custom-block s="close tracking"></custom-block><block s="doSetVar"><l>dir</l><block s="direction"></block></block><block s="doSetVar"><l>allLines</l><block s="reportNewList"><list></list></block></block><block s="doForEach"><l>项</l><block var="lines"/><script><block s="doSetVar"><l>allLines</l><block s="reportConcatenatedLists"><list><block var="allLines"/><block var="项"/></list></block></block></script></block><block s="doSetVar"><l>filledLines</l><custom-block s="get filled lines , frame lines %l direction %n dencity %n"><block var="allLines"/><block var="direction"/><block var="dencity"/></custom-block></block><custom-block s="delete var %mult%txt"><list><l>note:</l></list></custom-block></script></block><block s="doSetVar"><l>lastFilledLine</l><block s="reportNewList"><list></list></block></block><block s="doSetVar"><l>cost</l><l>0</l></block><block s="doUntil"><block s="reportEquals"><block s="reportListAttribute"><l><option>length</option></l><block var="filledLines"/></block><l>0</l></block><script><block s="doSetVar"><l>curFilledLine</l><custom-block s="seek next filledline point %l filled lines %l lines %l (2)"><block s="reportIfElse"><block s="reportListIsEmpty"><block var="lastFilledLine"/></block><block s="reportNewList"><list><block s="reportNewList"><list><block s="xPosition"></block><block s="yPosition"></block></list></block><block s="reportNewList"><list></list></block></list></block><block s="reportNewList"><list><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="lastFilledLine"/></block></block><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block var="lastFilledLine"/></block></block></list></block></block><block var="filledLines"/><block var="lines"/></custom-block></block><block s="doChangeVar"><l>cost</l><l>1</l></block><block s="doIfElse"><block s="reportListIsEmpty"><block var="curFilledLine"/></block><script><block s="doIfElse"><block s="reportEquals"><block var="cost"/><l>1</l></block><script><block s="doSetVar"><l>lastFilledLine</l><block s="reportNewList"><list><custom-block s="reverse %l"><block s="reportListItem"><l>1</l><block var="lastFilledLine"/></block></custom-block><custom-block s="reverse %l"><block s="reportListItem"><l>2</l><block var="lastFilledLine"/></block></custom-block></list></block></block><block s="up"></block><block s="doGotoObject"><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="lastFilledLine"/></block></block></block><block s="down"></block></script><script><block s="doSetVar"><l>lastFilledLine</l><block s="reportNewList"><list></list></block></block></script></block></script><script><custom-block s="move from filled line %l to filled line %l frame lines %l"><block var="lastFilledLine"/><block var="curFilledLine"/><block var="lines"/></custom-block><block s="doSetVar"><l>lastFilledLine</l><block var="curFilledLine"/></block><block s="doSetVar"><l>cost</l><l>0</l></block></script></block></script></block><block s="doIf"><block var="goback"/><script><custom-block s="go on border from point %l to point %l"><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportQuotient"><block s="reportRound"><block s="reportProduct"><l></l><l>1000</l></block></block><l>1000</l></block></autolambda><list></list></block><block s="reportNewList"><list><block s="xPosition"></block><block s="yPosition"></block></list></block></block><block var="startPoint"/></custom-block></script></block><block s="setHeading"><block var="dir"/></block></script></block-definition><block-definition s="fill the area enclosed by points %&apos;points&apos; direction %&apos;direction&apos; dencity %&apos;dencity&apos;" type="command" category="motion"><header></header><code></code><translations>zh_CN:填充由点集 _ 围成的区域，方向 _ 间距 _&#xD;</translations><inputs><input type="%l"></input><input type="%n">0</input><input type="%n">3</input></inputs><script><block s="doDeclareVariables"><list><l>lines</l><l>allLines</l><l>curFilledLine</l><l>lastFilledLine</l><l>cost</l></list></block><block s="doWarp"><script><block s="doIf"><block s="reportNot"><block s="reportIsA"><block var="points"/><l><option>list</option></l></block></block><script><block s="doStopThis"><l><option>this block</option></l></block></script></block><block s="doIf"><block s="reportLessThan"><block s="reportListAttribute"><l><option>length</option></l><block var="points"/></block><l>3</l></block><script><block s="doStopThis"><l><option>this block</option></l></block></script></block><custom-block s="pause tracking"></custom-block><custom-block s="create %s var %mult%txt"><l>global</l><list><l>note:</l></list></custom-block><custom-block s="set var %s to %s"><l>note:</l><l>caculating filled lines...</l></custom-block><custom-block s="show var %s"><l>note:</l></custom-block><custom-block s="create %s var %mult%txt"><l>global</l><list><l>filledLines</l></list></custom-block><custom-block s="create %s var %mult%txt"><l>global</l><list><l>glblines</l></list></custom-block><block s="doSetVar"><l>filledLines</l><block s="reportNewList"><list></list></block></block><block s="doSetVar"><l>glblines</l><block s="reportNewList"><list></list></block></block><block s="doSetVar"><l>lines</l><custom-block s="track to closed lines %l"><block var="points"/></custom-block></block><block s="doSetVar"><l>glblines</l><custom-block s="copy list %l"><block var="lines"/></custom-block></block><block s="doSetVar"><l>allLines</l><block s="reportNewList"><list></list></block></block><block s="doForEach"><l>项</l><block var="lines"/><script><block s="doSetVar"><l>allLines</l><block s="reportConcatenatedLists"><list><block var="allLines"/><block var="项"/></list></block></block></script></block><block s="doSetVar"><l>filledLines</l><custom-block s="get filled lines , frame lines %l direction %n dencity %n"><block var="allLines"/><block var="direction"/><block var="dencity"/></custom-block></block><custom-block s="delete var %mult%txt"><list><l>note:</l></list></custom-block></script></block><block s="doSetVar"><l>lastFilledLine</l><block s="reportNewList"><list></list></block></block><block s="doSetVar"><l>cost</l><l>0</l></block><block s="doUntil"><block s="reportEquals"><block s="reportListAttribute"><l><option>length</option></l><block var="filledLines"/></block><l>0</l></block><script><block s="doSetVar"><l>curFilledLine</l><custom-block s="seek next filledline point %l filled lines %l lines %l (2)"><block s="reportIfElse"><block s="reportListIsEmpty"><block var="lastFilledLine"/></block><block s="reportNewList"><list><block s="reportNewList"><list><block s="xPosition"></block><block s="yPosition"></block></list></block><block s="reportNewList"><list></list></block></list></block><block s="reportNewList"><list><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="lastFilledLine"/></block></block><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block var="lastFilledLine"/></block></block></list></block></block><block var="filledLines"/><block var="lines"/></custom-block></block><block s="doChangeVar"><l>cost</l><l>1</l></block><block s="doIfElse"><block s="reportListIsEmpty"><block var="curFilledLine"/></block><script><block s="doIfElse"><block s="reportEquals"><block var="cost"/><l>1</l></block><script><block s="doSetVar"><l>lastFilledLine</l><block s="reportNewList"><list><custom-block s="reverse %l"><block s="reportListItem"><l>1</l><block var="lastFilledLine"/></block></custom-block><custom-block s="reverse %l"><block s="reportListItem"><l>2</l><block var="lastFilledLine"/></block></custom-block></list></block></block><custom-block s="go to %l style %cmdRing by %txt"><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="lastFilledLine"/></block></block><block s="reifyScript"><script></script><list></list></block><l></l></custom-block></script><script><block s="doSetVar"><l>lastFilledLine</l><block s="reportNewList"><list></list></block></block></script></block></script><script><custom-block s="move from filled line %l to filled line %l frame lines %l"><block var="lastFilledLine"/><block var="curFilledLine"/><block var="lines"/></custom-block><block s="doSetVar"><l>lastFilledLine</l><block var="curFilledLine"/></block><block s="doSetVar"><l>cost</l><l>0</l></block></script></block></script></block><custom-block s="continue tracking"></custom-block></script></block-definition><block-definition s="length of route from point %&apos;firstPoint&apos; to point %&apos;secondPoint&apos; lines %&apos;lines&apos;" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%l"></input><input type="%l"></input><input type="%l"></input></inputs><script><block s="doDeclareVariables"><list><l>line1</l><l>line2</l><l>point1</l><l>point2</l><l>route1</l><l>route2</l><l>linesInRoute</l><l>closeLine</l><l>length</l><l>lengthOfCloseline</l><l>line1No</l><l>line2No</l><l>lengthRoute1</l></list></block><block s="doWarp"><script><block s="doSetVar"><l>point1</l><block s="reportListItem"><l>1</l><block var="firstPoint"/></block></block><block s="doSetVar"><l>line1</l><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block var="firstPoint"/></block></block></block><block s="doSetVar"><l>line1No</l><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block var="firstPoint"/></block></block></block><block s="doSetVar"><l>point2</l><block s="reportListItem"><l>1</l><block var="secondPoint"/></block></block><block s="doSetVar"><l>line2</l><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block var="secondPoint"/></block></block></block><block s="doSetVar"><l>line2No</l><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block var="secondPoint"/></block></block></block><block s="doIfElse"><block s="reportNotEquals"><block s="reportRound"><block s="reportQuotient"><block var="line1No"/><l>10000</l></block></block><block s="reportRound"><block s="reportQuotient"><block var="line2No"/><l>10000</l></block></block></block><script><block s="doReport"><custom-block s="infinity"></custom-block></block></script><script><block s="doIfElse"><block s="reportEquals"><block var="line1No"/><block var="line2No"/></block><script><block s="doReport"><custom-block s="lineLength %l"><block s="reportNewList"><list><block var="point1"/><block var="point2"/></list></block></custom-block></block></script><script><block s="doSetVar"><l>closeLine</l><block s="reportListItem"><block s="reportRound"><block s="reportQuotient"><block var="line1No"/><l>10000</l></block></block><block var="lines"/></block></block><block s="doSetVar"><l>length</l><block s="reportListAttribute"><l><option>length</option></l><block var="closeLine"/></block></block><block s="doSetVar"><l>lengthOfCloseline</l><block s="reportListItem"><l>3</l><block s="reportCombine"><block var="closeLine"/><block s="reifyReporter"><autolambda><block s="reportSum"><l></l><l></l></block></autolambda><list></list></block></block></block></block><block s="doIfElse"><block s="reportLessThan"><block var="line1No"/><block var="line2No"/></block><script><block s="doSetVar"><l>route1</l><block s="reportNewList"><list></list></block></block><block s="doSetVar"><l>linesInRoute</l><block s="reportKeep"><block s="reifyPredicate"><autolambda><block s="reportAnd"><block s="reportGreaterThan"><block s="reportListItem"><l>1</l><l/></block><block var="line1No"/></block><block s="reportLessThan"><block s="reportListItem"><l>1</l><l/></block><block var="line2No"/></block></block></autolambda><list></list></block><block var="closeLine"/></block></block><block s="doAddToList"><block var="point1"/><block var="route1"/></block><block s="doAddToList"><block s="reportListItem"><l>2</l><block var="line1"/></block><block var="route1"/></block><block s="doForEach"><l>item</l><block var="linesInRoute"/><script><block s="doAddToList"><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block var="item"/></block></block><block var="route1"/></block></script></block><block s="doAddToList"><block var="point2"/><block var="route1"/></block><block s="doSetVar"><l>lengthRoute1</l><block s="reportSum"><block s="reportSum"><custom-block s="lineLength %l"><block s="reportNewList"><list><block var="point1"/><block s="reportListItem"><l>2</l><block var="line1"/></block></list></block></custom-block><block s="reportIfElse"><block s="reportListIsEmpty"><block var="linesInRoute"/></block><l>0</l><block s="reportListItem"><l>3</l><block s="reportCombine"><block var="linesInRoute"/><block s="reifyReporter"><autolambda><block s="reportSum"><l></l><l></l></block></autolambda><list></list></block></block></block></block></block><custom-block s="lineLength %l"><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block var="line2"/></block><block var="point2"/></list></block></custom-block></block></block><block s="doIfElse"><block s="reportLessThan"><block var="lengthRoute1"/><block s="reportDifference"><block var="lengthOfCloseline"/><block var="lengthRoute1"/></block></block><script><block s="doReport"><block var="lengthRoute1"/></block></script><script><block s="doReport"><block s="reportDifference"><block var="lengthOfCloseline"/><block var="lengthRoute1"/></block></block></script></block></script><script><block s="doSetVar"><l>route1</l><block s="reportNewList"><list></list></block></block><block s="doSetVar"><l>linesInRoute</l><custom-block s="reverse %l"><block s="reportKeep"><block s="reifyPredicate"><autolambda><block s="reportAnd"><block s="reportGreaterThan"><block s="reportListItem"><l>1</l><l/></block><block var="line2No"/></block><block s="reportLessThan"><block s="reportListItem"><l>1</l><l/></block><block var="line1No"/></block></block></autolambda><list></list></block><block var="closeLine"/></block></custom-block></block><block s="doAddToList"><block var="point1"/><block var="route1"/></block><block s="doAddToList"><block s="reportListItem"><l>1</l><block var="line1"/></block><block var="route1"/></block><block s="doForEach"><l>item</l><block var="linesInRoute"/><script><block s="doAddToList"><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block var="item"/></block></block><block var="route1"/></block></script></block><block s="doAddToList"><block var="point2"/><block var="route1"/></block><block s="doSetVar"><l>lengthRoute1</l><block s="reportSum"><block s="reportSum"><custom-block s="lineLength %l"><block s="reportNewList"><list><block var="point1"/><block s="reportListItem"><l>1</l><block var="line1"/></block></list></block></custom-block><block s="reportIfElse"><block s="reportListIsEmpty"><block var="linesInRoute"/></block><l>0</l><block s="reportListItem"><l>3</l><block s="reportCombine"><block var="linesInRoute"/><block s="reifyReporter"><autolambda><block s="reportSum"><l></l><l></l></block></autolambda><list></list></block></block></block></block></block><custom-block s="lineLength %l"><block s="reportNewList"><list><block s="reportListItem"><l>2</l><block var="line2"/></block><block var="point2"/></list></block></custom-block></block></block><block s="doIfElse"><block s="reportLessThan"><block var="lengthRoute1"/><block s="reportDifference"><block var="lengthOfCloseline"/><block var="lengthRoute1"/></block></block><script><block s="doReport"><block var="lengthRoute1"/></block></script><script><block s="doReport"><block s="reportDifference"><block var="lengthOfCloseline"/><block var="lengthRoute1"/></block></block></script></block></script></block></script></block></script></block></script></block></script></block-definition><block-definition s="route distance from point %&apos;firstPoint&apos; to point %&apos;secondPoint&apos; lines %&apos;lines&apos;" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%l"></input><input type="%l"></input><input type="%l"></input></inputs><script><block s="doDeclareVariables"><list><l>line1</l><l>line2</l><l>point1</l><l>point2</l><l>route1</l><l>route2</l><l>linesInRoute</l><l>closeLine</l><l>length</l><l>lengthOfCloseline</l><l>line1No</l><l>line2No</l><l>lengthRoute1</l></list></block><block s="doWarp"><script><block s="doSetVar"><l>point1</l><block s="reportListItem"><l>1</l><block var="firstPoint"/></block></block><block s="doSetVar"><l>line1</l><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block var="firstPoint"/></block></block></block><block s="doSetVar"><l>line1No</l><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block var="firstPoint"/></block></block></block><block s="doSetVar"><l>point2</l><block s="reportListItem"><l>1</l><block var="secondPoint"/></block></block><block s="doSetVar"><l>line2</l><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block var="secondPoint"/></block></block></block><block s="doSetVar"><l>line2No</l><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block var="secondPoint"/></block></block></block><block s="doIfElse"><block s="reportNotEquals"><block s="reportRound"><block s="reportQuotient"><block var="line1No"/><l>10000</l></block></block><block s="reportRound"><block s="reportQuotient"><block var="line2No"/><l>10000</l></block></block></block><script><block s="doReport"><custom-block s="infinity"></custom-block></block></script><script><block s="doIfElse"><block s="reportEquals"><block var="line1No"/><block var="line2No"/></block><script><block s="doReport"><l>0</l></block></script><script><block s="doSetVar"><l>closeLine</l><block s="reportListItem"><block s="reportRound"><block s="reportQuotient"><block var="line1No"/><l>10000</l></block></block><block var="lines"/></block></block><block s="doSetVar"><l>length</l><block s="reportListAttribute"><l><option>length</option></l><block var="closeLine"/></block></block><block s="doIfElse"><block s="reportLessThan"><block var="line1No"/><block var="line2No"/></block><script><block s="doSetVar"><l>lengthRoute1</l><block s="reportDifference"><block var="line2No"/><block var="line1No"/></block></block></script><script><block s="doSetVar"><l>lengthRoute1</l><block s="reportDifference"><block var="line1No"/><block var="line2No"/></block></block></script></block><block s="doIfElse"><block s="reportLessThan"><block var="lengthRoute1"/><block s="reportDifference"><block var="length"/><block var="lengthRoute1"/></block></block><script><block s="doReport"><block var="lengthRoute1"/></block></script><script><block s="doReport"><block s="reportDifference"><block var="length"/><block var="lengthRoute1"/></block></block></script></block></script></block></script></block></script></block></script></block-definition><block-definition s="trackToVector %&apos;track&apos;" type="reporter" category="motion"><variables><list struct="atomic" id="4673">trackPoints</list></variables><header></header><code></code><translations>zh_CN:轨迹转换为矢量 _&#xD;</translations><inputs><input type="%cs"></input></inputs><script><custom-block s="begin tracking"></custom-block><custom-block s="reset tracking"></custom-block><block s="doRun"><block var="track"/><list></list></block><block s="doSetVar"><l>trackPoints</l><custom-block s="copy list %l"><custom-block s="my tracks"></custom-block></custom-block></block><custom-block s="close tracking"></custom-block><block s="doReport"><custom-block s="pointsToVector %l"><block var="trackPoints"/></custom-block></block></script></block-definition><block-definition s="set %&apos;x&apos; to points of %&apos;Track&apos;" type="command" category="motion"><header></header><code></code><translations>zh_CN:把 _ 设置为以下程序生成的点集 _&#xD;</translations><inputs><input type="%anyUE"></input><input type="%cs"></input></inputs><script><block s="doWarp"><script><custom-block s="begin tracking"></custom-block><custom-block s="reset tracking"></custom-block><block s="down"></block><block s="doRun"><block var="Track"/><list></list></block><block s="doRun"><block s="reifyScript"><script><block s="doSetVar"><l></l><l></l></block></script><list></list></block><list><block var="x"/><block s="reportMap"><block s="reifyReporter"><script></script><list></list></block><custom-block s="my tracks"></custom-block></block></list></block><custom-block s="close tracking"></custom-block></script></block></script></block-definition><block-definition s="reverse %&apos;data&apos;" type="reporter" category="lists"><comment x="0" y="0" w="222.99999999999997" collapsed="false">Reports a new list containing the items of the input list, but in the opposite order.</comment><header></header><code></code><translations>ca:capgira _&#xD;zh_CN:倒置列表 _&#xD;</translations><inputs><input type="%l"></input></inputs><script><block s="doDeclareVariables"><list><l>helper</l></list></block><block s="doSetVar"><l>helper</l><block s="reifyScript"><script><block s="doIf"><block s="reportEquals"><block var="input"/><block s="reportNewList"><list></list></block></block><script><block s="doReport"><block var="result"/></block></script></block><block s="doReport"><block s="evaluate"><block var="helper"/><list><block s="reportCDR"><block var="input"/></block><block s="reportCONS"><block s="reportListItem"><l>1</l><block var="input"/></block><block var="result"/></block></list></block></block></script><list><l>input</l><l>result</l></list></block></block><block s="doWarp"><script><block s="doReport"><block s="evaluate"><block var="helper"/><list><block var="data"/><block s="reportNewList"><list></list></block></list></block></block></script></block></script></block-definition><block-definition s="continue tracking" type="command" category="motion"><header></header><code></code><translations>zh_CN:继续跟踪&#xD;</translations><inputs></inputs><script><block s="doRun"><block s="reportJSFunction"><list></list><l>if (this.trackingOpened &amp;&amp; !this.tracked) {&#xD;    this.tracked = true;&#xD;}</l></block><list></list></block></script></block-definition><block-definition s="pause tracking" type="command" category="motion"><header></header><code></code><translations>zh_CN:暂停跟踪&#xD;</translations><inputs></inputs><script><block s="doRun"><block s="reportJSFunction"><list></list><l>if (this.trackingOpened &amp;&amp; this.tracked) {&#xD;    this.tracked = false;&#xD;}</l></block><list></list></block></script></block-definition><block-definition s="grouped lines %&apos;lines&apos; contrain point %&apos;point&apos;" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%l"></input><input type="%l"></input></inputs><script><block s="doWarp"><script><block s="doForEach"><l>lineGroup</l><block var="lines"/><script><block s="doForEach"><l>line</l><block var="lineGroup"/><script><block s="doIf"><custom-block s="line %l contains point %l"><block s="reportListItem"><l>2</l><block var="line"/></block><block var="point"/></custom-block><script><block s="doReport"><block var="line"/></block></script></block></script></block></script></block><block s="doReport"><block s="reportNewList"><list></list></block></block></script></block></script></block-definition><block-definition s="route from point %&apos;firstPoint&apos; to point %&apos;secondPoint&apos; lines %&apos;lines&apos;" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%l"></input><input type="%l"></input><input type="%l"></input></inputs><script><block s="doDeclareVariables"><list><l>line1</l><l>line2</l><l>point1</l><l>point2</l><l>route1</l><l>route2</l><l>linesInRoute</l><l>closeLine</l><l>length</l><l>lengthOfCloseline</l><l>line1No</l><l>line2No</l><l>lengthRoute1</l></list></block><block s="doWarp"><script><block s="doSetVar"><l>point1</l><block s="reportListItem"><l>1</l><block var="firstPoint"/></block></block><block s="doSetVar"><l>line1</l><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block var="firstPoint"/></block></block></block><block s="doSetVar"><l>line1No</l><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block var="firstPoint"/></block></block></block><block s="doSetVar"><l>point2</l><block s="reportListItem"><l>1</l><block var="secondPoint"/></block></block><block s="doSetVar"><l>line2</l><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block var="secondPoint"/></block></block></block><block s="doSetVar"><l>line2No</l><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block var="secondPoint"/></block></block></block><block s="doIfElse"><block s="reportNotEquals"><block s="reportRound"><block s="reportQuotient"><block var="line1No"/><l>10000</l></block></block><block s="reportRound"><block s="reportQuotient"><block var="line2No"/><l>10000</l></block></block></block><script><block s="doReport"><block s="reportNewList"><list></list></block></block></script><script><block s="doIfElse"><block s="reportEquals"><block var="line1No"/><block var="line2No"/></block><script><block s="doReport"><block s="reportNewList"><list><block var="point1"/><block var="point2"/></list></block></block></script><script><block s="doSetVar"><l>closeLine</l><block s="reportListItem"><block s="reportRound"><block s="reportQuotient"><block var="line1No"/><l>10000</l></block></block><block var="lines"/></block></block><block s="doSetVar"><l>length</l><block s="reportListAttribute"><l><option>length</option></l><block var="closeLine"/></block></block><block s="doSetVar"><l>lengthOfCloseline</l><block s="reportListItem"><l>3</l><block s="reportCombine"><block var="closeLine"/><block s="reifyReporter"><autolambda><block s="reportSum"><l></l><l></l></block></autolambda><list></list></block></block></block></block><block s="doIfElse"><block s="reportLessThan"><block var="line1No"/><block var="line2No"/></block><script><block s="doSetVar"><l>route1</l><block s="reportNewList"><list></list></block></block><block s="doSetVar"><l>linesInRoute</l><block s="reportKeep"><block s="reifyPredicate"><autolambda><block s="reportAnd"><block s="reportGreaterThan"><block s="reportListItem"><l>1</l><l/></block><block var="line1No"/></block><block s="reportLessThan"><block s="reportListItem"><l>1</l><l/></block><block var="line2No"/></block></block></autolambda><list></list></block><block var="closeLine"/></block></block><block s="doAddToList"><block var="point1"/><block var="route1"/></block><block s="doAddToList"><block s="reportListItem"><l>2</l><block var="line1"/></block><block var="route1"/></block><block s="doForEach"><l>item</l><block var="linesInRoute"/><script><block s="doAddToList"><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block var="item"/></block></block><block var="route1"/></block></script></block><block s="doAddToList"><block var="point2"/><block var="route1"/></block><block s="doSetVar"><l>lengthRoute1</l><block s="reportSum"><block s="reportSum"><custom-block s="lineLength %l"><block s="reportNewList"><list><block var="point1"/><block s="reportListItem"><l>2</l><block var="line1"/></block></list></block></custom-block><block s="reportIfElse"><block s="reportListIsEmpty"><block var="linesInRoute"/></block><l>0</l><block s="reportListItem"><l>3</l><block s="reportCombine"><block var="linesInRoute"/><block s="reifyReporter"><autolambda><block s="reportSum"><l></l><l></l></block></autolambda><list></list></block></block></block></block></block><custom-block s="lineLength %l"><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block var="line2"/></block><block var="point2"/></list></block></custom-block></block></block><block s="doIfElse"><block s="reportLessThan"><block var="lengthRoute1"/><block s="reportDifference"><block var="lengthOfCloseline"/><block var="lengthRoute1"/></block></block><script><block s="doReport"><block var="route1"/></block></script><script><block s="doSetVar"><l>route2</l><block s="reportNewList"><list></list></block></block><block s="doSetVar"><l>linesInRoute</l><block s="reportConcatenatedLists"><list><custom-block s="reverse %l"><block s="reportKeep"><block s="reifyPredicate"><autolambda><block s="reportAnd"><block s="reportGreaterThan"><block s="reportListItem"><l>1</l><l/></block><block s="reportProduct"><block s="reportRound"><block s="reportQuotient"><block var="line1No"/><l>10000</l></block></block><l>10000</l></block></block><block s="reportLessThan"><block s="reportListItem"><l>1</l><l/></block><block var="line1No"/></block></block></autolambda><list></list></block><block var="closeLine"/></block></custom-block><custom-block s="reverse %l"><block s="reportKeep"><block s="reifyPredicate"><autolambda><block s="reportAnd"><block s="reportGreaterThan"><block s="reportListItem"><l>1</l><l/></block><block var="line2No"/></block><block s="reportLessThan"><block s="reportListItem"><l>1</l><l/></block><block s="reportSum"><block s="reportProduct"><block s="reportRound"><block s="reportQuotient"><block var="line1No"/><l>10000</l></block></block><l>10000</l></block><block s="reportSum"><block var="length"/><l>1</l></block></block></block></block></autolambda><list></list></block><block var="closeLine"/></block></custom-block></list></block></block><block s="doAddToList"><block var="point1"/><block var="route2"/></block><block s="doAddToList"><block s="reportListItem"><l>1</l><block var="line1"/></block><block var="route2"/></block><block s="doForEach"><l>item</l><block var="linesInRoute"/><script><block s="doAddToList"><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block var="item"/></block></block><block var="route2"/></block></script></block><block s="doAddToList"><block var="point2"/><block var="route2"/></block><block s="doReport"><block var="route2"/></block></script></block></script><script><block s="doSetVar"><l>route1</l><block s="reportNewList"><list></list></block></block><block s="doSetVar"><l>linesInRoute</l><custom-block s="reverse %l"><block s="reportKeep"><block s="reifyPredicate"><autolambda><block s="reportAnd"><block s="reportGreaterThan"><block s="reportListItem"><l>1</l><l/></block><block var="line2No"/></block><block s="reportLessThan"><block s="reportListItem"><l>1</l><l/></block><block var="line1No"/></block></block></autolambda><list></list></block><block var="closeLine"/></block></custom-block></block><block s="doAddToList"><block var="point1"/><block var="route1"/></block><block s="doAddToList"><block s="reportListItem"><l>1</l><block var="line1"/></block><block var="route1"/></block><block s="doForEach"><l>item</l><block var="linesInRoute"/><script><block s="doAddToList"><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block var="item"/></block></block><block var="route1"/></block></script></block><block s="doAddToList"><block var="point2"/><block var="route1"/></block><block s="doSetVar"><l>lengthRoute1</l><block s="reportSum"><block s="reportSum"><custom-block s="lineLength %l"><block s="reportNewList"><list><block var="point1"/><block s="reportListItem"><l>1</l><block var="line1"/></block></list></block></custom-block><block s="reportIfElse"><block s="reportListIsEmpty"><block var="linesInRoute"/></block><l>0</l><block s="reportListItem"><l>3</l><block s="reportCombine"><block var="linesInRoute"/><block s="reifyReporter"><autolambda><block s="reportSum"><l></l><l></l></block></autolambda><list></list></block></block></block></block></block><custom-block s="lineLength %l"><block s="reportNewList"><list><block s="reportListItem"><l>2</l><block var="line2"/></block><block var="point2"/></list></block></custom-block></block></block><block s="doIfElse"><block s="reportLessThan"><block var="lengthRoute1"/><block s="reportDifference"><block var="lengthOfCloseline"/><block var="lengthRoute1"/></block></block><script><block s="doReport"><block var="route1"/></block></script><script><block s="doSetVar"><l>route2</l><block s="reportNewList"><list></list></block></block><block s="doSetVar"><l>linesInRoute</l><block s="reportConcatenatedLists"><list><block s="reportKeep"><block s="reifyPredicate"><autolambda><block s="reportAnd"><block s="reportGreaterThan"><block s="reportListItem"><l>1</l><l/></block><block var="line1No"/></block><block s="reportLessThan"><block s="reportListItem"><l>1</l><l/></block><block s="reportSum"><block s="reportProduct"><block s="reportRound"><block s="reportQuotient"><block var="line1No"/><l>10000</l></block></block><l>10000</l></block><block s="reportSum"><block var="length"/><l>1</l></block></block></block></block></autolambda><list></list></block><block var="closeLine"/></block><block s="reportKeep"><block s="reifyPredicate"><autolambda><block s="reportAnd"><block s="reportGreaterThan"><block s="reportListItem"><l>1</l><l/></block><block s="reportProduct"><block s="reportRound"><block s="reportQuotient"><block var="line1No"/><l>10000</l></block></block><l>10000</l></block></block><block s="reportLessThan"><block s="reportListItem"><l>1</l><l/></block><block var="line2No"/></block></block></autolambda><list></list></block><block var="closeLine"/></block></list></block></block><block s="doAddToList"><block var="point1"/><block var="route2"/></block><block s="doAddToList"><block s="reportListItem"><l>2</l><block var="line1"/></block><block var="route2"/></block><block s="doForEach"><l>item</l><block var="linesInRoute"/><script><block s="doAddToList"><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block var="item"/></block></block><block var="route2"/></block></script></block><block s="doAddToList"><block var="point2"/><block var="route2"/></block><block s="doReport"><block var="route2"/></block></script></block></script></block></script></block></script></block></script></block></script></block-definition><block-definition s="square stitch length %&apos;length&apos;" type="command" category="embroidery"><header></header><code></code><translations>zh_CN:方形组合针 齿距 _&#xD;</translations><inputs><input type="%n">10</input></inputs><script><block s="doWarp"><script><block s="turnLeft"><l>45</l></block><block s="doRepeat"><l>4</l><script><block s="forward"><block s="reportQuotient"><block var="length"/><block s="reportMonadic"><l><option>sqrt</option></l><l>2</l></block></block></block><block s="turnLeft"><l>90</l></block></script></block><block s="turn"><l>90</l></block><block s="doRepeat"><l>4</l><script><block s="forward"><block s="reportQuotient"><block var="length"/><block s="reportMonadic"><l><option>sqrt</option></l><l>2</l></block></block></block><block s="turn"><l>90</l></block></script></block><block s="turnLeft"><l>45</l></block><block s="forward"><block var="length"/></block></script></block></script></block-definition><block-definition s="theme flat stitch length %&apos;length&apos; width %&apos;width&apos;" type="command" category="embroidery"><header></header><code></code><translations>zh_CN:主题平针 齿距 _ 宽度 _&#xD;</translations><inputs><input type="%n">10</input><input type="%n">12</input></inputs><script><block s="doDeclareVariables"><list><l>a</l><l>l</l></list></block><block s="doWarp"><script><block s="doSetVar"><l>a</l><block s="reportMonadic"><l><option>atan</option></l><block s="reportQuotient"><block s="reportQuotient"><block var="width"/><l>2</l></block><block var="length"/></block></block></block><block s="doSetVar"><l>l</l><block s="reportQuotient"><block var="length"/><block s="reportMonadic"><l><option>cos</option></l><block var="a"/></block></block></block><block s="turnLeft"><l>90</l></block><block s="forward"><block s="reportQuotient"><block var="width"/><l>2</l></block></block><block s="turn"><block s="reportSum"><l>90</l><block var="a"/></block></block><block s="forward"><block var="l"/></block><block s="turn"><block s="reportDifference"><l>180</l><block s="reportProduct"><l>2</l><block var="a"/></block></block></block><block s="forward"><block var="l"/></block><block s="turn"><block s="reportSum"><l>90</l><block var="a"/></block></block><block s="forward"><block s="reportQuotient"><block var="width"/><l>2</l></block></block><block s="turn"><l>90</l></block><block s="forward"><block var="length"/></block></script></block></script></block-definition><block-definition s="choose stitch style %&apos;stitchstyle&apos; width %&apos;width&apos;" type="command" category="embroidery"><header></header><code></code><translations>zh_CN:选择针法 _&#xD;</translations><inputs><input type="%txt"><options>diamond stitch&#xD;square stitch&#xD;zigzag&#xD;theme flat stitch&#xD;wall stitch</options></input><input type="%n"></input></inputs><script><block s="doIfElse"><block s="reportEquals"><block var="stitchstyle"/><l></l></block><script><custom-block s="set stitch style to %cmdRing"><block s="reifyScript"><script></script><list></list></block></custom-block></script><script><block s="doIfElse"><block s="reportEquals"><block var="stitchstyle"/><l>diamond stitch</l></block><script><block s="doIfElse"><block s="reportEquals"><block var="width"/><l>0</l></block><script><custom-block s="set stitch style to %cmdRing"><block s="reifyScript"><script><custom-block s="diamond stitch length %n width %n"><l></l><l></l></custom-block></script><list></list></block></custom-block></script><script><custom-block s="set stitch style to %cmdRing"><block s="reportJoinWords"><block s="reportNewList"><list><block s="reifyScript"><script><custom-block s="diamond stitch length %n width %n"><l></l><l></l></custom-block></script><list></list></block><l></l><block var="width"/></list></block></block></custom-block></script></block></script><script><block s="doIfElse"><block s="reportEquals"><block var="stitchstyle"/><l>square stitch</l></block><script><custom-block s="set stitch style to %cmdRing"><block s="reifyScript"><script><custom-block s="square stitch length %n"><l></l></custom-block></script><list></list></block></custom-block></script><script><block s="doIfElse"><block s="reportEquals"><block var="stitchstyle"/><l>theme flat stitch</l></block><script><block s="doIfElse"><block s="reportEquals"><block var="width"/><l>0</l></block><script><custom-block s="set stitch style to %cmdRing"><block s="reifyScript"><script><custom-block s="theme flat stitch length %n width %n"><l></l><l></l></custom-block></script><list></list></block></custom-block></script><script><custom-block s="set stitch style to %cmdRing"><block s="reportJoinWords"><block s="reportNewList"><list><block s="reifyScript"><script><custom-block s="theme flat stitch length %n width %n"><l></l><l></l></custom-block></script><list></list></block><l></l><block var="width"/></list></block></block></custom-block></script></block></script><script><block s="doIfElse"><block s="reportEquals"><block var="stitchstyle"/><l>wall stitch</l></block><script><custom-block s="set stitch style to %cmdRing"><block s="reportJoinWords"><block s="reportNewList"><list><block s="reifyScript"><script><custom-block s="bar %n width %n direction %txt style %cmdRing"><l></l><l></l><l>middle</l><block s="reifyScript"><script></script><list></list></block></custom-block></script><list></list></block><l></l><block var="width"/><l>middle</l><l></l></list></block></block></custom-block></script><script><block s="doIf"><block s="reportEquals"><block var="stitchstyle"/><l>zigzag</l></block><script><custom-block s="set stitch style to %cmdRing"><block s="reportJoinWords"><block s="reportNewList"><list><block s="reifyScript"><script><custom-block s="fold line %n width %n direction %txt style %cmdRing"><l></l><l></l><l>middle</l><block s="reifyScript"><script></script><list></list></block></custom-block></script><list></list></block><l></l><block var="width"/><l>middle</l><l></l></list></block></block></custom-block></script></block></script></block></script></block></script></block></script></block></script></block></script></block-definition><block-definition s="set stitch style to %&apos;stitchtype&apos;" type="command" category="embroidery"><header></header><code></code><translations>zh_CN:设置针法为 _&#xD;</translations><inputs><input type="%cmdRing"></input></inputs><script><block s="doRun"><block s="reportJSFunction"><list><l>stitchtype</l></list><l>this.stitchstyle = stitchtype;</l></block><list><custom-block s="check custom stitch %cmdRing"><block var="stitchtype"/></custom-block></list></block></script></block-definition><block-definition s="choose filling style %&apos;fillingstyle&apos;" type="command" category="embroidery"><header></header><code></code><translations>zh_CN:选择填充方法 _&#xD;</translations><inputs><input type="%txt"><options>arrows&#xD;bricks&#xD;zigzag&#xD;arcs</options></input></inputs><script><block s="doIfElse"><block s="reportEquals"><block var="fillingstyle"/><l></l></block><script><custom-block s="set filling style to %cmdRing"><block s="reifyScript"><script></script><list></list></block></custom-block></script><script><block s="doIfElse"><block s="reportEquals"><block var="fillingstyle"/><l>arrows</l></block><script><custom-block s="set filling style to %cmdRing"><block s="reifyScript"><script><custom-block s="move %n style %cmdRing by %txt"><l></l><block s="reifyScript"><script><custom-block s="fold line %n width %n direction %txt style %cmdRing"><l></l><l>20</l><l>left</l><block s="reifyScript"><script><custom-block s="arc %n angle %n turn %txt style %cmdRing by %n"><l></l><l>30</l><l>left</l><block s="reifyScript"><script></script><list></list></block><l>6</l></custom-block></script><list></list></block></custom-block></script><list></list></block><l>20</l></custom-block></script><list></list></block></custom-block></script><script><block s="doIfElse"><block s="reportEquals"><block var="fillingstyle"/><l>bricks</l></block><script><custom-block s="set filling style to %cmdRing"><block s="reifyScript"><script><custom-block s="move %n style %cmdRing by %txt"><l></l><block s="reifyScript"><script><custom-block s="bar %n width %n direction %txt style %cmdRing"><l></l><l>10</l><l>middle</l><block s="reifyScript"><script></script><list></list></block></custom-block></script><list></list></block><l>12</l></custom-block></script><list></list></block></custom-block></script><script><block s="doIfElse"><block s="reportEquals"><block var="fillingstyle"/><l>zigzag</l></block><script><custom-block s="set filling style to %cmdRing"><block s="reifyScript"><script><custom-block s="move %n style %cmdRing by %txt"><l></l><block s="reifyScript"><script><custom-block s="fold line %n width %n direction %txt style %cmdRing"><l></l><block s="reportProduct"><l></l><l>1.5</l></block><l>middle</l><block s="reifyScript"><script></script><list></list></block></custom-block></script><list></list></block><l>0</l></custom-block></script><list></list></block></custom-block></script><script><block s="doIf"><block s="reportEquals"><block var="fillingstyle"/><l>arcs</l></block><script><custom-block s="set filling style to %cmdRing"><block s="reifyScript"><script><custom-block s="arc %n angle %n turn %txt style %cmdRing by %n"><l></l><block s="reportRandom"><l>30</l><l>60</l></block><l>right</l><block s="reifyScript"><script></script><list></list></block><l>0</l></custom-block></script><list></list></block></custom-block></script></block></script></block></script></block></script></block></script></block></script></block-definition><block-definition s="go on border from point %&apos;point1&apos; to point %&apos;point2&apos;" type="command" category="motion"><header></header><code></code><translations>zh_CN:在填充区域边界移动 从点 _ 到点 _&#xD;</translations><inputs><input type="%l"></input><input type="%l"></input></inputs><script><block s="doIf"><block s="reportListIsEmpty"><block var="point1"/></block><script><block s="doSetVar"><l>point1</l><block s="reportNewList"><list><block s="xPosition"></block><block s="yPosition"></block></list></block></block></script></block><block s="doSetVar"><l>point2</l><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportQuotient"><block s="reportRound"><block s="reportProduct"><l></l><l>1000</l></block></block><l>1000</l></block></autolambda><list></list></block><block var="point2"/></block></block><block s="doForEach"><l>item</l><block s="reportCDR"><custom-block s="route from point %l to point %l lines %l"><block s="reportNewList"><list><block var="point1"/><custom-block s="grouped lines %l contrain point %l"><block var="glblines"/><block var="point1"/></custom-block></list></block><block s="reportNewList"><list><block var="point2"/><custom-block s="grouped lines %l contrain point %l"><block var="glblines"/><block var="point2"/></custom-block></list></block><block var="glblines"/></custom-block></block><script><block s="doGotoObject"><block var="item"/></block></script></block></script></block-definition><block-definition s="move from filled line %&apos;line1&apos; to filled line %&apos;line2&apos; frame lines %&apos;lines&apos;" type="command" category="motion"><header></header><code></code><translations></translations><inputs><input type="%l"></input><input type="%l"></input><input type="%l"></input></inputs><script><block s="doDeclareVariables"><list><l>tmpLine</l><l>route</l></list></block><block s="doIfElse"><block s="reportListIsEmpty"><block var="line1"/></block><script><block s="doSetVar"><l>tmpLine</l><custom-block s="grouped lines %l contrain point %l"><block var="lines"/><block s="reportNewList"><list><block s="xPosition"></block><block s="yPosition"></block></list></block></custom-block></block><block s="doSetVar"><l>route</l><custom-block s="route from point %l to point %l lines %l"><block s="reportNewList"><list><block s="reportNewList"><list><block s="xPosition"></block><block s="yPosition"></block></list></block><block var="tmpLine"/></list></block><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block var="line2"/></block></block><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block var="line2"/></block></block></list></block><block var="lines"/></custom-block></block><block s="doIfElse"><block s="reportOr"><block s="reportListIsEmpty"><block var="tmpLine"/></block><block s="reportListIsEmpty"><block var="route"/></block></block><script><block s="up"></block><block s="doGotoObject"><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block var="line2"/></block></block></block><block s="down"></block><custom-block s="go to %l style %cmdRing by %txt"><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="line2"/></block></block><custom-block s="filling style"></custom-block><l></l></custom-block></script><script><block s="doForEach"><l>项</l><block s="reportCDR"><block var="route"/></block><script><block s="doGotoObject"><block var="项"/></block></script></block><custom-block s="go to %l style %cmdRing by %txt"><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="line2"/></block></block><custom-block s="filling style"></custom-block><l></l></custom-block></script></block></script><script><block s="doSetVar"><l>route</l><custom-block s="route from point %l to point %l lines %l"><block s="reportNewList"><list><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="line1"/></block></block><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block var="line1"/></block></block></list></block><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block var="line2"/></block></block><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block var="line2"/></block></block></list></block><block var="lines"/></custom-block></block><block s="doIfElse"><custom-block s="avoid jumps while filling"></custom-block><script><block s="doForEach"><l>项</l><block s="reportCDR"><block var="route"/></block><script><block s="doGotoObject"><block var="项"/></block></script></block></script><script><block s="doIfElse"><block s="reportGreaterThan"><block s="reportListAttribute"><l><option>length</option></l><block var="route"/></block><l>2</l></block><script><block s="up"></block><block s="doGotoObject"><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block var="line2"/></block></block></block><block s="down"></block></script><script><block s="doGotoObject"><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block var="line2"/></block></block></block></script></block></script></block><custom-block s="go to %l style %cmdRing by %txt"><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="line2"/></block></block><custom-block s="filling style"></custom-block><l></l></custom-block></script></block></script><scripts><script x="11.974934895833334" y="976.6666666666666"><block s="reportAnd"><l/><block s="reportGreaterThan"><custom-block s="lineLength %l"><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block var="route"/></block><block s="reportListItem"><l><option>last</option></l><block var="route"/></block></list></block></custom-block><l>20</l></block></block></script></scripts></block-definition><block-definition s="go to %&apos;dest&apos; style %&apos;styleScript&apos; by %&apos;stepLength&apos;" type="command" category="motion"><header></header><code></code><translations>zh_CN:移到 _ 方式 _ 步长 _&#xD;</translations><inputs><input type="%l"></input><input type="%cmdRing">no&#xD;        &#xD;        <options>no&#xD;foldLine&#xD;randomFoldLine&#xD;curveLine</options></input><input type="%txt">0</input></inputs><script><block s="doDeclareVariables"><list><l>distance</l><l>orgDir</l></list></block><block s="doWarp"><script><block s="doSetVar"><l>orgDir</l><block s="direction"></block></block><block s="doIf"><block s="reportNot"><block s="reportIsA"><block var="stepLength"/><l><option>number</option></l></block></block><script><block s="doIfElse"><block s="reportEquals"><block var="stepLength"/><l></l></block><script><block s="doSetVar"><l>stepLength</l><custom-block s="lineLength %l"><block var="dest"/></custom-block></block></script><script><block s="doSetVar"><l>stepLength</l><l>0</l></block></script></block></script></block><block s="doSetVar"><l>stepLength</l><block s="reportIfElse"><block s="reportGreaterThan"><block var="stepLength"/><l>0</l></block><block var="stepLength"/><block s="reportIfElse"><block s="reportGreaterThan"><custom-block s="default stitch length"></custom-block><l>0</l></block><custom-block s="default stitch length"></custom-block><l>10</l></block></block></block><block s="doIf"><custom-block s="Is %cmdRing empty?"><block var="styleScript"/></custom-block><script><block s="doSetVar"><l>styleScript</l><custom-block s="stitch style"></custom-block></block></script></block><block s="doSetVar"><l>distance</l><custom-block s="lineLength %l"><block var="dest"/></custom-block></block><block s="doFaceTowards"><block var="dest"/></block><block s="doUntil"><block s="reportLessThan"><block var="distance"/><block s="reportSum"><block var="stepLength"/><l>0.5</l></block></block><script><block s="doRun"><block var="styleScript"/><list><block var="stepLength"/></list></block><block s="doSetVar"><l>distance</l><custom-block s="lineLength %l"><block var="dest"/></custom-block></block></script></block><block s="doRun"><block var="styleScript"/><list><block var="distance"/></list></block><block s="setHeading"><block var="orgDir"/></block></script></block></script></block-definition><block-definition s="arc %&apos;distance&apos; angle %&apos;angle&apos; turn %&apos;direction&apos; style %&apos;styleScript&apos; by %&apos;segmentLength&apos;" type="command" category="motion"><header></header><code></code><translations>zh_CN:圆弧 _ 步 角度 _ 方向 _ 方式 _ 步长 _&#xD;</translations><inputs><input type="%n">50</input><input type="%n">30</input><input type="%txt">right<options>right&#xD;left</options></input><input type="%cmdRing"></input><input type="%n">0</input></inputs><script><block s="doDeclareVariables"><list><l>r</l><l>segLength</l><l>dir</l><l>sections</l></list></block><block s="doWarp"><script><block s="doIf"><block s="reportLessThan"><block var="angle"/><l>360</l></block><script><block s="doIf"><custom-block s="Is %cmdRing empty?"><block var="styleScript"/></custom-block><script><block s="doSetVar"><l>styleScript</l><custom-block s="stitch style"></custom-block></block></script></block><block s="doSetVar"><l>dir</l><block s="direction"></block></block><block s="doSetVar"><l>r</l><block s="reportQuotient"><block s="reportQuotient"><block var="distance"/><l>2</l></block><block s="reportMonadic"><l><option>sin</option></l><block s="reportQuotient"><block var="angle"/><l>2</l></block></block></block></block><block s="doSetVar"><l>sections</l><block s="reportMonadic"><l><option>ceiling</option></l><block s="reportProduct"><block s="reportProduct"><block var="r"/><block s="reportQuotient"><block var="angle"/><l>360</l></block></block><block s="reportQuotient"><l>6.283</l><block s="reportIfElse"><block s="reportGreaterThan"><block var="segmentLength"/><l>0</l></block><block var="segmentLength"/><block s="reportIfElse"><block s="reportGreaterThan"><custom-block s="default stitch length"></custom-block><l>0</l></block><custom-block s="default stitch length"></custom-block><l>10</l></block></block></block></block></block></block><block s="doSetVar"><l>segLength</l><block s="reportMonadic"><l><option>sqrt</option></l><block s="reportProduct"><block s="reportProduct"><block s="reportProduct"><block var="r"/><block var="r"/></block><l>2</l></block><block s="reportDifference"><l>1</l><block s="reportMonadic"><l><option>cos</option></l><block s="reportQuotient"><block var="angle"/><block var="sections"/></block></block></block></block></block></block><block s="doIfElse"><block s="reportEquals"><block var="direction"/><l>right</l></block><script><block s="turnLeft"><block s="reportQuotient"><block s="reportDifference"><block var="angle"/><block s="reportQuotient"><block var="angle"/><block var="sections"/></block></block><l>2</l></block></block><block s="doRepeat"><block var="sections"/><script><block s="doRun"><block var="styleScript"/><list><block var="segLength"/></list></block><block s="turn"><block s="reportQuotient"><block var="angle"/><block var="sections"/></block></block></script></block></script><script><block s="turn"><block s="reportQuotient"><block s="reportDifference"><block var="angle"/><block s="reportQuotient"><block var="angle"/><block var="sections"/></block></block><l>2</l></block></block><block s="doRepeat"><block var="sections"/><script><block s="doRun"><block var="styleScript"/><list><block var="segLength"/></list></block><block s="turnLeft"><block s="reportQuotient"><block var="angle"/><block var="sections"/></block></block></script></block></script></block><block s="setHeading"><block var="dir"/></block></script></block></script></block></script></block-definition><block-definition s="set filling style to %&apos;fillingtype&apos;" type="command" category="embroidery"><header></header><code></code><translations>zh_CN:设置填充方法为 _&#xD;</translations><inputs><input type="%cmdRing"></input></inputs><script><block s="doRun"><block s="reportJSFunction"><list><l>fillingtype</l></list><l>this.fillingstyle = fillingtype;</l></block><list><block var="fillingtype"/></list></block></script></block-definition><block-definition s="avoid jumps %&apos;followOutline&apos; $nl while filling" type="command" category="embroidery"><header></header><code></code><translations>zh_CN:填充时避免跳线 _ _&#xD;</translations><inputs><input type="%b">true</input></inputs><script><block s="doRun"><block s="reportJSFunction"><list><l>followOutline</l></list><l>this.avoidJumps = followOutline;</l></block><list><block var="followOutline"/></list></block></script></block-definition><block-definition s="avoid jumps while filling" type="predicate" category="embroidery"><header></header><code></code><translations>zh_CN:填充时是否避免跳线&#xD;</translations><inputs></inputs><script><block s="doReport"><block s="evaluate"><block s="reportJSFunction"><list></list><l>return this.avoidJumps == undefined?false:this.avoidJumps;</l></block><list></list></block></block></script></block-definition><block-definition s="$flash sort %&apos;data&apos; ordering with %&apos;function&apos;" type="reporter" category="lists"><comment x="0" y="0" w="161.14285714285708" collapsed="false">Reports a sorted version of the list in its first input slot, using the comparison function in the second input slot.  For a list of numbers, using &lt; as the comparison function will sort from low to high; using &gt; will sort from high to low.</comment><header></header><code></code><translations>ca:ordena _ segons criteri _&#xD;</translations><inputs><input type="%l"></input><input type="%predRing"></input></inputs><script><block s="doReport"><block s="reportApplyExtension"><l>lst_sort(list, fn)</l><list><block var="data"/><block var="function"/></list></block></block></script></block-definition><block-definition s="filling style" type="reporter" category="embroidery"><header></header><code></code><translations>zh_CN:默认填充方法&#xD;</translations><inputs></inputs><script><block s="doDeclareVariables"><list><l>fillingtype</l></list></block><block s="doSetVar"><l>fillingtype</l><block s="evaluate"><block s="reportJSFunction"><list></list><l>if (this.fillingstyle) {&#xD;    return this.fillingstyle;&#xD;} else {&#xD;    return &apos;None&apos;;&#xD;}</l></block><list></list></block></block><block s="doReport"><block s="reportIfElse"><block s="reportAnd"><block s="reportIsA"><block var="fillingtype"/><l><option>command</option></l></block><block s="reportNot"><custom-block s="Is %cmdRing empty?"><block var="fillingtype"/></custom-block></block></block><block var="fillingtype"/><block s="reifyScript"><script><custom-block s="move %n style %cmdRing by %txt"><l></l><block s="reifyScript"><script></script><list></list></block><custom-block s="default stitch length"></custom-block></custom-block></script><list></list></block></block></block></script></block-definition><block-definition s="check custom stitch list %&apos;customStitch&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%l"></input></inputs><script><block s="doDeclareVariables"><list><l>move</l></list></block><block s="doSetVar"><l>move</l><block s="reportListItem"><l>3</l><block s="reportTextSplit"><block s="reifyScript"><script><custom-block s="move %n style %cmdRing by %txt"><l></l><block s="reifyScript"><script><block s="forward"><l></l></block></script><list></list></block><l></l></custom-block></script><list></list></block><l><option>blocks</option></l></block></block></block><block s="doWarp"><script><block s="doIfElse"><block s="reportAnd"><block s="reportIsA"><block s="reportListItem"><l>2</l><block var="customStitch"/></block><l><option>list</option></l></block><block s="reportEquals"><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block var="customStitch"/></block></block><block s="reifyScript"><script><block s="forward"><l></l></block></script><list></list></block></block></block><script><block s="doIfElse"><block s="reportEquals"><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block var="customStitch"/></block></block><l></l></block><script><block s="doReport"><block var="customStitch"/></block></script><script><block s="doReplaceInList"><l>2</l><block s="reportListItem"><l>2</l><block var="customStitch"/></block><l></l></block><block s="doReport"><block var="customStitch"/></block></script></block></script><script><block s="doIfElse"><block s="reportEquals"><block s="reportListItem"><l>1</l><block var="customStitch"/></block><block s="reifyScript"><script><custom-block s="fold line %n width %n direction %txt style %cmdRing"><l></l><l></l><l></l><block s="reifyScript"><script></script><list></list></block></custom-block></script><list></list></block></block><script><block s="doIfElse"><block s="reportIsA"><block s="reportListItem"><l>5</l><block var="customStitch"/></block><l><option>list</option></l></block><script><block s="doReplaceInList"><l>2</l><block s="reportListItem"><l>5</l><block var="customStitch"/></block><custom-block s="check custom stitch list %l"><block s="reportListItem"><l>2</l><block s="reportListItem"><l>5</l><block var="customStitch"/></block></block></custom-block></block></script><script><block s="doReplaceInList"><l>5</l><block var="customStitch"/><block var="move"/></block></script></block></script><script><block s="doIfElse"><block s="reportEquals"><block s="reportListItem"><l>1</l><block var="customStitch"/></block><block s="reifyScript"><script><custom-block s="bar %n width %n direction %txt style %cmdRing"><l></l><l></l><l></l><block s="reifyScript"><script></script><list></list></block></custom-block></script><list></list></block></block><script><block s="doIfElse"><block s="reportIsA"><block s="reportListItem"><l>5</l><block var="customStitch"/></block><l><option>list</option></l></block><script><block s="doReplaceInList"><l>2</l><block s="reportListItem"><l>5</l><block var="customStitch"/></block><custom-block s="check custom stitch list %l"><block s="reportListItem"><l>2</l><block s="reportListItem"><l>5</l><block var="customStitch"/></block></block></custom-block></block></script><script><block s="doReplaceInList"><l>5</l><block var="customStitch"/><block var="move"/></block></script></block></script><script><block s="doIfElse"><block s="reportEquals"><block s="reportListItem"><l>1</l><block var="customStitch"/></block><block s="reifyScript"><script><custom-block s="arc %n angle %n turn %txt style %cmdRing by %n"><l></l><l></l><l></l><block s="reifyScript"><script></script><list></list></block><l></l></custom-block></script><list></list></block></block><script><block s="doIfElse"><block s="reportIsA"><block s="reportListItem"><l>5</l><block var="customStitch"/></block><l><option>list</option></l></block><script><block s="doReplaceInList"><l>2</l><block s="reportListItem"><l>5</l><block var="customStitch"/></block><custom-block s="check custom stitch list %l"><block s="reportListItem"><l>2</l><block s="reportListItem"><l>5</l><block var="customStitch"/></block></block></custom-block></block></script><script><block s="doReplaceInList"><l>5</l><block var="customStitch"/><block var="move"/></block></script></block></script><script><block s="doIf"><block s="reportEquals"><block s="reportListItem"><l>1</l><block var="customStitch"/></block><block s="reifyScript"><script><custom-block s="arc %n angle %n in %n turn %txt style %cmdRing"><l></l><l></l><l></l><l></l><block s="reifyScript"><script></script><list></list></block></custom-block></script><list></list></block></block><script><block s="doIfElse"><block s="reportIsA"><block s="reportListItem"><l>6</l><block var="customStitch"/></block><l><option>list</option></l></block><script><block s="doReplaceInList"><l>2</l><block s="reportListItem"><l>6</l><block var="customStitch"/></block><custom-block s="check custom stitch list %l"><block s="reportListItem"><l>2</l><block s="reportListItem"><l>6</l><block var="customStitch"/></block></block></custom-block></block></script><script><block s="doReplaceInList"><l>6</l><block var="customStitch"/><block var="move"/></block></script></block></script></block></script></block></script></block></script></block></script></block><block s="doReport"><block var="customStitch"/></block></script></block></script></block-definition><block-definition s="check custom stitch %&apos;style&apos;" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%cmdRing"></input></inputs><script><block s="doReport"><block s="reportJoinWords"><custom-block s="check custom stitch list %l"><block s="reportTextSplit"><block var="style"/><l><option>blocks</option></l></block></custom-block></block></block></script></block-definition><block-definition s="smallestCloseRegions %&apos;shapes&apos; %&apos;point&apos;" type="reporter" category="sensing"><header></header><code></code><translations>zh_CN:最小包含区域 路径集 _ 点 _&#xD;</translations><inputs><input type="%l"></input><input type="%l"></input></inputs><script><block s="doDeclareVariables"><list><l>target area</l></list></block><block s="doIf"><block s="reportNot"><block s="reportIsA"><block var="shapes"/><l><option>list</option></l></block></block><script><block s="doReport"><block s="reportNewList"><list></list></block></block></script></block><custom-block s="create %s var %mult%txt"><l>global</l><list><l>note:</l></list></custom-block><custom-block s="set var %s to %s"><l>note:</l><l>decide target area...</l></custom-block><custom-block s="show var %s"><l>note:</l></custom-block><block s="doSetVar"><l>target area</l><block s="evaluate"><block s="reportJSFunction"><list><l>shapes</l><l>point</l></list><l>function findSmallestClosedRegion(paths, point) {&#xD;    // caculate to collect all the line segments&#xD;    const { segments, vertices } = splitPathsAtIntersections(paths);&#xD;    &#xD;    // build the graph&#xD;    const graph = buildGraph(segments, vertices);&#xD;    &#xD;    // find all the closed cycles&#xD;    const allCycles = findUniqueCycles(graph).map(cycle =&gt; cycle.map(point =&gt; point.split(&apos;,&apos;).map(Number)));    &#xD;    &#xD;    // find all the cycles containing the specified point&#xD;    const containingCycles = allCycles.filter(cycle =&gt; {&#xD;        return isPointInPolygon(point, [...cycle,cycle[0]]);&#xD;    });&#xD;&#xD;    // find the cycle with the smallest area&#xD;    if (containingCycles.length === 0) return [];&#xD;    &#xD;    let minArea = Infinity;&#xD;    let smallestCycle = null;&#xD;    &#xD;    for (const cycle of containingCycles) {&#xD;        //const polygon = cycleToPolygon(cycle, segments);&#xD;        const polygon = cycle;&#xD;        const area = calculatePolygonArea(polygon);&#xD;        &#xD;        if (area &lt; minArea) {&#xD;            minArea = area;&#xD;            smallestCycle = cycle;&#xD;        }&#xD;    };&#xD;    const containedCyclesAll = allCycles.filter(cycle =&gt; {&#xD;        return isCycleInCycle(cycle,smallestCycle);&#xD;    });    &#xD;    const containedCycles = containedCyclesAll.filter(cycle =&gt; {&#xD;        return !isCycleInCycles(cycle,containedCyclesAll);&#xD;    });&#xD;&#xD;    return [smallestCycle].concat(containedCycles);&#xD;}&#xD;&#xD;function splitPathsAtIntersections(paths) {&#xD;    const segments = [];&#xD;    const vertices = new Map(); &#xD;    const intersections = new Map();&#xD;    const allOriginalSegments = [];&#xD;&#xD;    for (const path of paths) {&#xD;        for (let i = 1; i &lt; path.length; i++) {&#xD;            allOriginalSegments.push([[parseFloat(path[i-1][0]),parseFloat(path[i-1][1])], [parseFloat(path[i][0]),parseFloat(path[i][1])]]);&#xD;        }&#xD;    }&#xD;  &#xD;    for (let i = 0; i &lt; allOriginalSegments.length; i++) {&#xD;        const seg1 = allOriginalSegments[i];&#xD;        &#xD;        for (let j = i+1; j &lt; allOriginalSegments.length; j++) {&#xD;            const seg2 = allOriginalSegments[j];&#xD;            const intersection = getIntersection(seg1, seg2);&#xD;            if (intersection &amp;&amp; !(isEndpoint(intersection, seg1) &amp;&amp; isEndpoint(intersection, seg2))) {&#xD;                if (!intersections.has(i)) intersections.set(i, []);&#xD;                if (!intersections.has(j)) intersections.set(j, []);&#xD;                &#xD;                intersections.get(i).push(intersection);&#xD;                intersections.get(j).push(intersection);&#xD;            }&#xD;        }&#xD;    }&#xD;   &#xD;    for (let i = 0; i &lt; allOriginalSegments.length; i++) {&#xD;        const seg = allOriginalSegments[i];&#xD;        const intPoints = intersections.get(i) || [];&#xD;        &#xD;        &#xD;        intPoints.push(seg[0]);&#xD;        intPoints.push(seg[1]);&#xD;        &#xD;        intPoints.sort((a, b) =&gt; a[0] === b[0] ? a[1] - b[1] : a[0] - b[0]);&#xD;        &#xD;        for (let j = 1; j &lt; intPoints.length; j++) {&#xD;            if (!pointsEqual(intPoints[j-1], intPoints[j])) {&#xD;                const newSeg = [intPoints[j-1], intPoints[j]];&#xD;                const segIndex = segments.length;&#xD;                segments.push(newSeg);&#xD;                &#xD;                for (const pt of newSeg) {&#xD;                    const key = pt.join(&apos;,&apos;);&#xD;                    if (!vertices.has(key)) vertices.set(key, []);&#xD;                    vertices.get(key).push(segIndex);&#xD;                }&#xD;            }&#xD;        }&#xD;    }&#xD;    return { segments, vertices };&#xD;}&#xD;&#xD;function buildGraph(segments, vertices) {&#xD;    const graph = new Map();&#xD;    &#xD;    // create adjacent table for each vertice&#xD;    for (const [pt, segIndices] of vertices.entries()) {&#xD;        const ptCoords = pt.split(&apos;,&apos;).map(Number);&#xD;        const neighbors = new Set();&#xD;        &#xD;        for (const segIndex of segIndices) {&#xD;            const seg = segments[segIndex];&#xD;            const otherPt = pointsEqual(seg[0], ptCoords) ? seg[1] : seg[0];&#xD;            const otherKey = otherPt.join(&apos;,&apos;);&#xD;            neighbors.add(otherKey);&#xD;        }&#xD;        &#xD;        graph.set(pt, Array.from(neighbors));&#xD;    }&#xD;    console.log(&apos;graph:&apos;);&#xD;    console.log(graph);&#xD;    return graph;&#xD;}&#xD;&#xD;function normalizeCycle(cycle) {&#xD;    let minIndex = 0;&#xD;    for (let i = 1; i &lt; cycle.length; i++) {&#xD;        const currentStr = cycle[i].toString();&#xD;        const minStr = cycle[minIndex].toString();&#xD;        if (currentStr &lt; minStr) minIndex = i;&#xD;    }&#xD;    &#xD;    const rearranged = cycle.slice(minIndex, -1).concat(cycle.slice(0, minIndex));&#xD;    const reversed = [...rearranged].reverse();&#xD;    &#xD;    const rearrangedStr = rearranged.toString();&#xD;    const reversedStr = reversed.toString();&#xD;    &#xD;    return rearrangedStr &lt; reversedStr ? rearranged : reversed;&#xD;}&#xD;&#xD;function findAllCycles(graph) {&#xD;    const cycles = [];&#xD;    const visited = new Set();&#xD;    &#xD;    function dfs(node, path, startNode) {&#xD;        visited.add(node);&#xD;        path.push(node);&#xD;        &#xD;        for (const neighbor of graph.get(node) || []) {&#xD;            if (neighbor === startNode &amp;&amp; path.length &gt;= 3) {&#xD;                cycles.push([...path, startNode]);&#xD;            }&#xD;            &#xD;            if (!visited.has(neighbor)) {&#xD;                dfs(neighbor, path, startNode);&#xD;            }&#xD;        }&#xD;        &#xD;        path.pop();&#xD;        visited.delete(node);&#xD;    }&#xD;    &#xD;    for (const node of graph.keys()) {&#xD;        dfs(node, [], node);&#xD;        visited.clear();&#xD;        graph.delete(node);&#xD;    }&#xD;    return cycles;&#xD;}&#xD;&#xD;function findUniqueCycles(graph) {&#xD;    const allCycles = findAllCycles(graph);&#xD;    const cycleMap = new Map();&#xD;&#xD;    for (const cycle of allCycles) {&#xD;        const normalized = normalizeCycle(cycle);&#xD;        const key = normalized.toString();&#xD;        const reversedKey = normalized[0].concat(&apos;,&apos;,normalized.slice(1).reverse().toString());&#xD;        &#xD;        if (!cycleMap.has(key) &amp;&amp; !cycleMap.has(reversedKey)) {&#xD;            cycleMap.set(key, normalized);&#xD;        }&#xD;    }&#xD;    &#xD;    return Array.from(cycleMap.values());&#xD;}&#xD;&#xD;function isPointInPolygon(point, polygon, tolerance=1e-10) {&#xD;    const [x, y] = point;&#xD;    let inside = false;&#xD;  &#xD;    if (polygon.length &gt; 0 &amp;&amp; &#xD;        (polygon[0][0] !== polygon[polygon.length-1][0] || &#xD;         polygon[0][1] !== polygon[polygon.length-1][1])) {&#xD;        polygon = [...polygon, polygon[0]];&#xD;    }&#xD;    &#xD;    for (let i = 0, j = polygon.length - 1; i &lt; polygon.length; j = i++) {&#xD;        const [xi, yi] = polygon[i];&#xD;        const [xj, yj] = polygon[j];&#xD;        &#xD;        if (isPointOnSegment([x, y], [xi, yi], [xj, yj], tolerance)) {&#xD;            return false;&#xD;        }&#xD;        &#xD;        const intersect = ((yi &gt; y) !== (yj &gt; y)) &amp;&amp;&#xD;            (x &lt;= (xj - xi) * (y - yi) / (yj - yi) + xi);&#xD;        &#xD;        if (intersect) inside = !inside;&#xD;    }&#xD;    &#xD;    return inside;&#xD;}&#xD;&#xD;function isPointOnSegment(point, segmentStart, segmentEnd, tolerance=1e-10) {&#xD;    const [x, y] = point;&#xD;    const [x1, y1] = segmentStart;&#xD;    const [x2, y2] = segmentEnd;&#xD;    &#xD;   //check if the point is in the circle&#xD;    if (x &lt; Math.min(x1, x2) || x &gt; Math.max(x1, x2) || &#xD;        y &lt; Math.min(y1, y2) || y &gt; Math.max(y1, y2)) {&#xD;        return false;&#xD;    }&#xD;    &#xD;    // check if the point is on the border&#xD;    return Math.abs((x - x1) * (y2 - y) - (y - y1) * (x2 - x)) &lt; tolerance;&#xD;}&#xD;&#xD;function isPointInPolygons(point,polygons,tolerance=1e-10) {&#xD;    for (const polygon of polygons) {&#xD;        if (isPointInPolygon(point,polygon,tolerance)) {&#xD;            return true;&#xD;        }&#xD;    }&#xD;    return false;	&#xD;}&#xD;&#xD;function isCycleInCycle(cycle1,cycle2) {&#xD;    const key1 = cycle1.toString();&#xD;    const key2 = cycle2.toString();&#xD;    const cycle = [...cycle2,cycle2[0]];&#xD;    if (key1 == key2) {&#xD;        return false;&#xD;    }&#xD;	   let count = 0;&#xD;    for (i=0;i&lt;cycle1.length;i++) {&#xD;        if (!isPointInPolygon(cycle1[i],cycle)) {&#xD;            count++;&#xD;        }&#xD;    }&#xD;	   if (count &lt; 2) {&#xD;        return true;&#xD;	   } else {&#xD;		    return false;&#xD;	   }&#xD;}&#xD;&#xD;function isCycleInCycles(cycle,cycles) {&#xD;    for (let i = 0; i&lt; cycles.length; i++) {&#xD;        if (isCycleInCycle(cycle,cycles[i])) {&#xD;            return true;&#xD;        }  &#xD;    }&#xD;    return false;&#xD;}&#xD;&#xD;function calculatePolygonArea(polygon) {&#xD;    let area = 0;&#xD;    const n = polygon.length;&#xD;    &#xD;    for (let i = 0; i &lt; n; i++) {&#xD;        const [x1, y1] = polygon[i];&#xD;        const [x2, y2] = polygon[(i + 1) % n];&#xD;        area += x1 * y2 - x2 * y1;&#xD;    }&#xD;    &#xD;    return Math.abs(area) / 2;&#xD;}&#xD;&#xD;function findPolygonTrajectoryIntersections(polygon, trajectory) {&#xD;    const intersections = [];&#xD;    &#xD;    if (polygon.length &gt; 0 &amp;&amp; &#xD;        (polygon[0][0] !== polygon[polygon.length-1][0] || &#xD;         polygon[0][1] !== polygon[polygon.length-1][1])) {&#xD;        polygon = [...polygon, polygon[0]];&#xD;    }&#xD;&#xD;    for (let i = 0; i &lt; trajectory.length - 1; i++) {&#xD;        const t1 = trajectory[i];&#xD;        const t2 = trajectory[i+1];&#xD;        &#xD;        for (let j = 0; j &lt; polygon.length - 1; j++) {&#xD;            const p1 = polygon[j];&#xD;            const p2 = polygon[j+1];&#xD;            &#xD;            const intersection = getIntersection(&#xD;                [t1, t2], [p1, p2]&#xD;            );&#xD;            &#xD;            if (intersection) {&#xD;                intersections.push(intersection);&#xD;            }&#xD;        }&#xD;    }&#xD;    &#xD;    return intersections;&#xD;}&#xD;    &#xD;function getIntersection(seg1, seg2) {&#xD;    const [p1, p2] = seg1;&#xD;    const [p3, p4] = seg2;&#xD;    &#xD;    const x1 = p1[0], y1 = p1[1];&#xD;    const x2 = p2[0], y2 = p2[1];&#xD;    const x3 = p3[0], y3 = p3[1];&#xD;    const x4 = p4[0], y4 = p4[1];&#xD;    &#xD;    const denom = (y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1);&#xD;    &#xD;    if (denom === 0) return null; // 平行或共线&#xD;    &#xD;    const ua = ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) / denom;&#xD;    const ub = ((x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3)) / denom;&#xD;    &#xD;    if (ua &gt;= 0 &amp;&amp; ua &lt;= 1 &amp;&amp; ub &gt;= 0 &amp;&amp; ub &lt;= 1) {&#xD;        return [&#xD;            roundToN(x1 + ua * (x2 - x1),10),&#xD;            roundToN(y1 + ua * (y2 - y1),10)&#xD;        ];&#xD;    }&#xD;    &#xD;    return null;&#xD;}&#xD;&#xD;function isEndpoint(point, segment) {&#xD;    return pointsEqual(point, segment[0]) || pointsEqual(point, segment[1]);&#xD;}&#xD;&#xD;function pointsEqual(p1, p2) {&#xD;    return Math.abs(p1[0] - p2[0]) &lt; 1e-10 &amp;&amp; Math.abs(p1[1] - p2[1]) &lt; 1e-10;&#xD;}&#xD;&#xD;function roundToN(num, n) {&#xD;    const factor = Math.pow(10, n);&#xD;    return Math.round(num * factor) / factor;&#xD;}&#xD;&#xD;function isShapeClosed(line) {&#xD;    const start = line[0];&#xD;    const end = line[line.length-1];&#xD;    return  roundToN(start[0],8) === roundToN(end[0],8) &amp;&amp; roundToN(start[1],8) === roundToN(end[1],8);&#xD;}&#xD;&#xD;function splitPathsAtIntersectionsForMergedPolygons(paths) {&#xD;    const segments = [];&#xD;    const vertices = new Map(); &#xD;    const intersections = new Map();&#xD;    const allOriginalSegments = [];&#xD;&#xD;    for (const path of paths) {&#xD;        for (let i = 1; i &lt; path.length; i++) {&#xD;            allOriginalSegments.push([[parseFloat(path[i-1][0]),parseFloat(path[i-1][1])], [parseFloat(path[i][0]),parseFloat(path[i][1])]]);&#xD;        }&#xD;    }&#xD;  &#xD;    for (let i = 0; i &lt; allOriginalSegments.length; i++) {&#xD;        const seg1 = allOriginalSegments[i];&#xD;        &#xD;        for (let j = i+1; j &lt; allOriginalSegments.length; j++) {&#xD;            const seg2 = allOriginalSegments[j];&#xD;            const intersection = getIntersection(seg1, seg2);&#xD;            if (intersection &amp;&amp; !isEndpoint(intersection, seg1) &amp;&amp; !isEndpoint(intersection, seg2)) {&#xD;                if (!intersections.has(i)) intersections.set(i, []);&#xD;                if (!intersections.has(j)) intersections.set(j, []);&#xD;                &#xD;                intersections.get(i).push(intersection);&#xD;                intersections.get(j).push(intersection);&#xD;            }&#xD;        }&#xD;    }&#xD;&#xD;    const removedSegments = [];   &#xD;    for (let i = 0; i &lt; allOriginalSegments.length; i++) {&#xD;        const seg = allOriginalSegments[i];&#xD;        const intPoints = intersections.get(i) || [];&#xD;        &#xD;        &#xD;        intPoints.push(seg[0]);&#xD;        intPoints.push(seg[1]);&#xD;        &#xD;        intPoints.sort((a, b) =&gt; a[0] === b[0] ? a[1] - b[1] : a[0] - b[0]);&#xD; &#xD;        for (let j = 1; j &lt; intPoints.length; j++) {&#xD;            if (!pointsEqual(intPoints[j-1], intPoints[j])) {&#xD;				            if (!(isPointInPolygons(intPoints[j-1],paths)) &amp;&amp; !(isPointInPolygons(intPoints[j],paths))){&#xD;                    const newSeg = [intPoints[j-1], intPoints[j]];&#xD;                    const segIndex = segments.length;&#xD;                    segments.push(newSeg);&#xD;                &#xD;                    for (const pt of newSeg) {&#xD;                        const key = pt.join(&apos;,&apos;);&#xD;                        if (!vertices.has(key)) vertices.set(key, []);&#xD;                        vertices.get(key).push(segIndex);&#xD;                    }&#xD;				            } else {&#xD;                    removedSegments.push([intPoints[j-1], intPoints[j]]);&#xD;                }&#xD;            }&#xD;        }&#xD;    }&#xD;    return { segments, vertices };&#xD;}&#xD;&#xD;function borderOfMergedPolygons(polygons){&#xD;    // caculate to collect all the line segments&#xD;    const { segments, vertices } = splitPathsAtIntersectionsForMergedPolygons(polygons);&#xD;    // build the graph&#xD;    const graph = buildGraph(segments, vertices);	&#xD;	   allCycles = findUniqueCycles(graph).map(cycle =&gt; cycle.map(point =&gt; point.split(&apos;,&apos;).map(Number)));&#xD;    allCycles = allCycles.map(cycle =&gt; [...cycle,cycle[0]]);&#xD;	return allCycles;&#xD;}&#xD;&#xD;function normalizeLine(path) {&#xD;    if (path.length &lt; 2) return [path];&#xD;    const segments = [];&#xD;    const intersections = new Map();&#xD;    const allOriginalSegments = [];&#xD;    let newPoints = [];&#xD;    let result = [];&#xD;&#xD;    for (let i = 1; i &lt; path.length; i++) {&#xD;        allOriginalSegments.push([[parseFloat(path[i-1][0]),parseFloat(path[i-1][1])], [parseFloat(path[i][0]),parseFloat(path[i][1])]]);&#xD;    }&#xD;&#xD;    for (let i = 0; i &lt; allOriginalSegments.length; i++) {&#xD;        const seg1 = allOriginalSegments[i];&#xD;        &#xD;        for (let j = i+1; j &lt; allOriginalSegments.length; j++) {&#xD;            const seg2 = allOriginalSegments[j];&#xD;            const intersection = getIntersection(seg1, seg2);&#xD;            if (intersection &amp;&amp; !(isEndpoint(intersection, seg1) &amp;&amp; isEndpoint(intersection, seg2))) {&#xD;                if (!intersections.has(i)) intersections.set(i, []);&#xD;                if (!intersections.has(j)) intersections.set(j, []);&#xD;                &#xD;                intersections.get(i).push(intersection);&#xD;                intersections.get(j).push(intersection);&#xD;            }&#xD;       }&#xD;    }&#xD;    for (let i = 0; i &lt; allOriginalSegments.length; i++) {&#xD;        const seg = allOriginalSegments[i];&#xD;        const intPoints = intersections.get(i) || [];&#xD;        &#xD;        &#xD;        intPoints.push(seg[0]);&#xD;        intPoints.push(seg[1]);&#xD;        &#xD;        intPoints.sort((a, b) =&gt; {&#xD;            if (seg[0][0] &lt; seg[1][0]) {&#xD;                return a[0] - b[0];&#xD;            } else if (seg[0][0] &gt; seg[1][0]) {&#xD;                return b[0] - a[0];&#xD;            } else if (seg[0][1] &lt; seg[1][1]) {&#xD;                return a[1] - b[1];&#xD;            } else {&#xD;                return b[1] - a[1];&#xD;            } &#xD;        });&#xD;        &#xD;        for (let j = 0; j &lt; intPoints.length-1; j++) {&#xD;            if (!pointsEqual(intPoints[j], intPoints[j+1])) {&#xD;                if (newPoints.length === 0 || !pointsEqual(intPoints[j],newPoints[newPoints.length-1])) {&#xD;                    newPoints.push(intPoints[j]);&#xD;                }&#xD;            }&#xD;        }&#xD;        if (i === allOriginalSegments.length-1){&#xD;            newPoints.push(intPoints[intPoints.length-1]);&#xD;        } &#xD;    }&#xD;&#xD;	   const tolerance = 1e-6; &#xD;    let currentPath = [];&#xD;    for (let i=0;i&lt;newPoints.length;i++) {&#xD;	       const curPoint = newPoints[i];&#xD;		      const pointExists = currentPath.some(p =&gt; JSON.stringify(p) === JSON.stringify(curPoint));&#xD;		      if (pointExists) {&#xD;            const index = currentPath.findIndex(p =&gt; &#xD;                Math.abs(p[0] - curPoint[0]) &lt; tolerance &amp;&amp; &#xD;                Math.abs(p[1] - curPoint[1]) &lt; tolerance&#xD;            );&#xD;            if (index &gt; 0) {&#xD;                result.push(currentPath.slice(0,index+1));&#xD;            }&#xD;			         currentPath.push(curPoint);&#xD;            result.push(currentPath.slice(index));&#xD;            currentPath = [curPoint];&#xD;        } else {&#xD;            currentPath.push(curPoint);&#xD;        }		&#xD;	   }&#xD;	   if (currentPath.length &gt; 1) {&#xD;		      result.push(currentPath);&#xD;   	}&#xD; &#xD;    return result;&#xD;}&#xD;&#xD;if (shapes.length === 0) {&#xD;    return new List([]);&#xD;}&#xD;&#xD;var rawlines = shapes.asArray().map(shape =&gt; shape.asArray().map(p =&gt; p.asArray()));&#xD;var lines = [];&#xD;let lineParts;&#xD;for (const line of rawlines) {&#xD;	   const newline = [line[0]];&#xD;    for (let i=1;i&lt;line.length-1;i++) {&#xD;		      if (!isPointOnSegment(line[i],line[i-1],line[i+1])){&#xD;			        newline.push(line[i]);&#xD;		      }&#xD;	   }&#xD;	   newline.push(line[line.length-1]);&#xD;    if (isShapeClosed(newline) &amp;&amp; newline.length &lt; 10) {&#xD;        lines.push(newline);&#xD;    } else {&#xD;        lineParts = normalizeLine(newline);&#xD;        lines = lines.concat(lineParts);&#xD;    }&#xD;};&#xD;console.log(&apos;lines:&apos;);&#xD;console.log(lines);&#xD;var innerPoint = [parseFloat(point.asArray()[0]),parseFloat(point.asArray()[1])];&#xD;var disclosedLines = lines.filter(line =&gt; !pointsEqual(line[0],line[line.length-1]));&#xD;var closedLines = lines.filter(line =&gt; pointsEqual(line[0],line[line.length-1]));&#xD;var li = 0;&#xD;var closeRegion = findSmallestClosedRegion([lines[0]], innerPoint);&#xD;while (closeRegion.length === 0 &amp;&amp; li &lt; lines.length -1 ) {&#xD;    li++;&#xD;    closeRegion = findSmallestClosedRegion([lines[li]], innerPoint);&#xD;};&#xD;&#xD;if (closeRegion.length !== 0) {&#xD;    var linesRest = lines.filter((_, index) =&gt; index !== li);   &#xD;    var relatedStrokes = linesRest.filter(stroke =&gt; {&#xD;                             let pointIn = stroke.filter(point =&gt; isPointInPolygon(point,closeRegion[0]));&#xD;                             let intersections = findPolygonTrajectoryIntersections(closeRegion[0], stroke);                             &#xD;                             const pointInUni = [&#xD;                                 ...new Map(pointIn.map(p =&gt; [p.join(&apos;,&apos;), p])).values()&#xD;                             ];&#xD;                             const intersectionsUni = [&#xD;                                 ...new Map(intersections.map(p =&gt; [p.join(&apos;,&apos;), p])).values()&#xD;                             ];&#xD;                             if (pointInUni.length &gt; 0 || intersectionsUni.length &gt; 1) {&#xD;                                 return true;&#xD;                             }else{&#xD;                                 return false;&#xD;                             };&#xD;                         });&#xD;&#xD;    let seperatedStrokes = [];&#xD;    var smallestCycle = closeRegion;&#xD;    for (const stroke of relatedStrokes) {&#xD;        let intersections = findPolygonTrajectoryIntersections(smallestCycle[0], stroke);&#xD;        let pointIn = stroke.filter(point =&gt; isPointInPolygon(point,smallestCycle[0]));&#xD;        const pointInUni = [&#xD;            ...new Map(pointIn.map(p =&gt; [p.join(&apos;,&apos;), p])).values()&#xD;        ];&#xD;        const intersectionsUni = [&#xD;            ...new Map(intersections.map(p =&gt; [p.join(&apos;,&apos;), p])).values()&#xD;        ];&#xD;        const pointInCount = pointInUni.length;&#xD;        const intersectionsCount = intersectionsUni.length;&#xD;        const strokeIsClosed = pointsEqual(stroke[0],stroke[stroke.length-1]);&#xD;        if ( intersectionsCount &gt; 1 &amp;&amp; strokeIsClosed){&#xD;            console.log(&apos;stroke:&apos;);&#xD;            console.log(stroke);&#xD;            smallestCycle = smallestCycle.map(cycle =&gt; [...cycle,cycle[0]]);&#xD;            smallestCycle = findSmallestClosedRegion([...smallestCycle,stroke], innerPoint);&#xD;        } else {&#xD;            if (pointInCount &gt; 0) {&#xD;                seperatedStrokes.push(stroke);&#xD;            }&#xD;        }     &#xD;    }&#xD;    if (seperatedStrokes.length &gt; 0){&#xD;        seperatedStrokes = seperatedStrokes.concat(smallestCycle.map(cycle =&gt; [...cycle,cycle[0]]));&#xD;        smallestCycle = findSmallestClosedRegion(seperatedStrokes, innerPoint);&#xD;    }    &#xD;} else {&#xD;	   const bordersOfClosedLines = borderOfMergedPolygons(closedLines);&#xD;    var smallestCycle  = findSmallestClosedRegion(disclosedLines.concat(bordersOfClosedLines), innerPoint);&#xD;};&#xD;&#xD;if (smallestCycle.length === 0) {&#xD;    return new List([]);&#xD;};&#xD;&#xD;&#xD;let result = [];&#xD;for (const cycle of smallestCycle) {&#xD;    for (const point of cycle) {&#xD;        result.push(point);&#xD;    }&#xD;    result.push(cycle[0]);&#xD;    result.push(&apos;!&apos;);&#xD;};&#xD;result.pop();&#xD;&#xD;return new List(result.map(p =&gt; {&#xD;    if (p != &apos;!&apos;) {&#xD;        return new List(p);&#xD;    }else{&#xD;        return &apos;!&apos;;&#xD;    }&#xD;}));&#xD;&#xD;</l></block><list><block var="shapes"/><block var="point"/></list></block></block><custom-block s="delete var %mult%txt"><list><l>note:</l></list></custom-block><block s="doReport"><block var="target area"/></block></script></block-definition><block-definition s="drawVector %&apos;vector&apos; size %&apos;size&apos; style %&apos;styleScript&apos; mirrored %&apos;mirrored&apos; stitch length %&apos;seam&apos;" type="command" category="pen"><header></header><code></code><translations>zh_CN:绘制矢量 _ 比例 _ 方式 _ 镜像 _ 针脚长度 _&#xD;</translations><inputs><input type="%l"></input><input type="%n">1</input><input type="%cmdRing"></input><input type="%b">false</input><input type="%n">6</input></inputs><script><block s="doDeclareVariables"><list><l>dir</l><l>newVector</l></list></block><block s="doIf"><custom-block s="Is %cmdRing empty?"><block var="styleScript"/></custom-block><script><block s="doSetVar"><l>styleScript</l><block s="reifyScript"><script><block s="forward"><l></l></block></script><list></list></block></block></script></block><block s="doSetVar"><l>dir</l><block s="direction"></block></block><block s="doSetVar"><l>newVector</l><custom-block s="convert vector %l scale %n by seam %n"><block var="vector"/><block var="size"/><block var="seam"/></custom-block></block><custom-block s="%upvar for each %upvar of %l %ca"><l>#</l><l>item</l><block var="newVector"/><script><block s="doIfElse"><block s="reportOr"><block s="reportEquals"><block var="item"/><l>!</l></block><block s="reportEquals"><block s="reportListItem"><l>1</l><block var="item"/></block><l>!</l></block></block><script><block s="up"></block></script><script><block s="doIfElse"><block s="reportNot"><block var="mirrored"/></block><script><block s="turn"><block s="reportListItem"><l>1</l><block var="item"/></block></block></script><script><block s="doIfElse"><block s="reportEquals"><block var="#"/><l>1</l></block><script><block s="turn"><block s="reportListItem"><l>1</l><block var="item"/></block></block><block s="setHeading"><block s="reportMonadic"><l><option>neg</option></l><block s="direction"></block></block></block></script><script><block s="turnLeft"><block s="reportListItem"><l>1</l><block var="item"/></block></block></script></block></script></block><block s="doIfElse"><block s="isPenDown"></block><script><custom-block s="move %n style %cmdRing by %txt"><block s="reportListItem"><l>2</l><block var="item"/></block><block var="styleScript"/><block var="seam"/></custom-block></script><script><custom-block s="move %n style %cmdRing by %txt"><block s="reportListItem"><l>2</l><block var="item"/></block><block s="reifyScript"><script></script><list></list></block><l>0</l></custom-block></script></block><block s="doIf"><block s="reportNot"><block s="isPenDown"></block></block><script><block s="down"></block></script></block></script></block></script></custom-block><block s="setHeading"><block var="dir"/></block></script></block-definition><block-definition s="arc %&apos;distance&apos; angle %&apos;angle&apos; in %&apos;sections&apos; turn %&apos;direction&apos; style %&apos;styleScript&apos;" type="command" category="motion"><header></header><code></code><translations>zh_CN:圆弧 _ 步 角度 _ 分段数 _ 方向 _ 方式 _&#xD;</translations><inputs><input type="%n">50</input><input type="%n">30</input><input type="%n">10</input><input type="%txt">right<options>right&#xD;left</options></input><input type="%cmdRing"></input></inputs><script><block s="doDeclareVariables"><list><l>r</l><l>segLength</l><l>dir</l></list></block><block s="doWarp"><script><block s="doIf"><block s="reportLessThan"><block var="angle"/><l>360</l></block><script><block s="doIf"><custom-block s="Is %cmdRing empty?"><block var="styleScript"/></custom-block><script><block s="doSetVar"><l>styleScript</l><custom-block s="stitch style"></custom-block></block></script></block><block s="doSetVar"><l>dir</l><block s="direction"></block></block><block s="doSetVar"><l>r</l><block s="reportQuotient"><block s="reportQuotient"><block var="distance"/><l>2</l></block><block s="reportMonadic"><l><option>sin</option></l><block s="reportQuotient"><block var="angle"/><l>2</l></block></block></block></block><block s="doSetVar"><l>segLength</l><block s="reportMonadic"><l><option>sqrt</option></l><block s="reportProduct"><block s="reportProduct"><block s="reportProduct"><block var="r"/><block var="r"/></block><l>2</l></block><block s="reportDifference"><l>1</l><block s="reportMonadic"><l><option>cos</option></l><block s="reportQuotient"><block var="angle"/><block var="sections"/></block></block></block></block></block></block><block s="doIfElse"><block s="reportEquals"><block var="direction"/><l>right</l></block><script><block s="turnLeft"><block s="reportQuotient"><block s="reportDifference"><block var="angle"/><block s="reportQuotient"><block var="angle"/><block var="sections"/></block></block><l>2</l></block></block><block s="doRepeat"><block var="sections"/><script><block s="doRun"><block var="styleScript"/><list><block var="segLength"/></list></block><block s="turn"><block s="reportQuotient"><block var="angle"/><block var="sections"/></block></block></script></block></script><script><block s="turn"><block s="reportQuotient"><block s="reportDifference"><block var="angle"/><block s="reportQuotient"><block var="angle"/><block var="sections"/></block></block><l>2</l></block></block><block s="doRepeat"><block var="sections"/><script><block s="doRun"><block var="styleScript"/><list><block var="segLength"/></list></block><block s="turnLeft"><block s="reportQuotient"><block var="angle"/><block var="sections"/></block></block></script></block></script></block><block s="setHeading"><block var="dir"/></block></script></block></script></block></script></block-definition><block-definition s="split tracks %&apos;tracks&apos;" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%l"></input></inputs><script><block s="doDeclareVariables"><list><l>strokes</l><l>stroke</l><l>curPoint</l><l>idx</l></list></block><block s="doWarp"><script><block s="doSetVar"><l>strokes</l><block s="reportNewList"><list></list></block></block><block s="doSetVar"><l>stroke</l><block s="reportNewList"><list></list></block></block><block s="doForEach"><l>item</l><block var="tracks"/><script><block s="doIfElse"><block s="reportAnd"><block s="reportIsA"><block var="item"/><l><option>text</option></l></block><block s="reportEquals"><block var="item"/><l>!</l></block></block><script><block s="doIf"><block s="reportGreaterThan"><block s="reportListAttribute"><l><option>length</option></l><block var="stroke"/></block><l>1</l></block><script><block s="doIf"><block s="reportAnd"><block s="reportNotEquals"><block s="reportListItem"><l>1</l><block var="stroke"/></block><block s="reportListItem"><l><option>last</option></l><block var="stroke"/></block></block><block s="reportLessThan"><custom-block s="lineLength %l"><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block var="stroke"/></block><block s="reportListItem"><l><option>last</option></l><block var="stroke"/></block></list></block></custom-block><l>10</l></block></block><script><block s="doAddToList"><block s="reportListItem"><l>1</l><block var="stroke"/></block><block var="stroke"/></block></script></block><block s="doAddToList"><block var="stroke"/><block var="strokes"/></block></script></block><block s="doSetVar"><l>stroke</l><block s="reportNewList"><list></list></block></block></script><script><block s="doSetVar"><l>curPoint</l><block var="item"/></block><block s="doIfElse"><block s="reportListContainsItem"><block var="stroke"/><block var="curPoint"/></block><script><block s="doSetVar"><l>idx</l><block s="reportListIndex"><block var="curPoint"/><block var="stroke"/></block></block><block s="doIf"><block s="reportGreaterThan"><block var="idx"/><l>1</l></block><script><block s="doAddToList"><block s="reportListItem"><block s="reportNumbers"><l>1</l><block var="idx"/></block><block var="stroke"/></block><block var="strokes"/></block></script></block><block s="doAddToList"><block var="curPoint"/><block var="stroke"/></block><block s="doAddToList"><block s="reportListItem"><block s="reportNumbers"><block var="idx"/><block s="reportListAttribute"><l><option>length</option></l><block var="stroke"/></block></block><block var="stroke"/></block><block var="strokes"/></block><block s="doSetVar"><l>stroke</l><block s="reportNewList"><list><block var="curPoint"/></list></block></block></script><script><block s="doAddToList"><block var="curPoint"/><block var="stroke"/></block></script></block></script></block></script></block><block s="doIf"><block s="reportAnd"><block s="reportNot"><block s="reportListIsEmpty"><block var="stroke"/></block></block><block s="reportGreaterThan"><block s="reportListAttribute"><l><option>length</option></l><block var="stroke"/></block><l>1</l></block></block><script><block s="doIf"><block s="reportAnd"><block s="reportGreaterThan"><block s="reportListAttribute"><l><option>length</option></l><block var="stroke"/></block><l>1</l></block><block s="reportAnd"><block s="reportNotEquals"><block s="reportListItem"><l>1</l><block var="stroke"/></block><block s="reportListItem"><l><option>last</option></l><block var="stroke"/></block></block><block s="reportLessThan"><custom-block s="lineLength %l"><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block var="stroke"/></block><block s="reportListItem"><l><option>last</option></l><block var="stroke"/></block></list></block></custom-block><l>10</l></block></block></block><script><block s="doAddToList"><block s="reportListItem"><l>1</l><block var="stroke"/></block><block var="stroke"/></block></script></block><block s="doAddToList"><block var="stroke"/><block var="strokes"/></block><block s="doSetVar"><l>stroke</l><block s="reportNewList"><list></list></block></block></script></block><block s="doReport"><block var="strokes"/></block></script></block></script></block-definition><block-definition s="does var %&apos;_name&apos; exist?" type="predicate" category="variables"><comment x="0" y="0" w="146" collapsed="false">This block reports &quot;true&quot; if there is a variable with this given name (input slot) in that context.&#xD;&#xD;It can be a global, sprite or script variable.&#xD;&#xD;Otherwise it reports &quot;false&quot;.</comment><header></header><code></code><translations>pt:a variável _ existe&#xD;ca:existeix la variable _ ?&#xD;es:existe la variable _ ?&#xD;de:existiert var _ ?&#xD;</translations><inputs><input type="%s"></input></inputs><script><block s="doApplyExtension"><l>err_try(cmd, catch, err)</l><list><block s="reifyScript"><script><block s="doApplyExtension"><l>err_ignore</l><list><block s="reportApplyExtension"><l>var_get(name)</l><list><block var="_name"/></list></block></list></block><block s="doReport"><block s="reportBoolean"><l><bool>true</bool></l></block></block></script><list></list></block><block s="reifyScript"><script><block s="doReport"><block s="reportBoolean"><l><bool>false</bool></l></block></block></script><list></list></block><l></l></list></block><block s="doApplyExtension"><l>err_reset</l><list></list></block></script></block-definition><block-definition s="set var %&apos;_name&apos; to %&apos;_value&apos;" type="command" category="variables"><comment x="0" y="0" w="240.4931640625" collapsed="false">This block sets the given value (last input) to the variable named with the name givent (var input).&#xD;&#xD;It looks for that variable following the scope order &apos;script&apos; -&gt; &apos;sprite&apos; -&gt; &apos;global&apos; (the first match it finds).&#xD;&#xD;If that variable does not exist (in any scope) an error happens, stopping their script. You can check it before using the &quot;does var (name) exists?&quot; block. </comment><header></header><code></code><translations>ca:assigna a _ el valor _&#xD;es:asignar a _ el valor _&#xD;pt:altera _ para _&#xD;de:setze var _ auf _&#xD;</translations><inputs><input type="%s"><options>§_getVarNamesDict</options></input><input type="%s"></input></inputs><script><block s="doApplyExtension"><l>var_set(name, val)</l><list><block var="_name"/><block var="_value"/></list></block></script></block-definition><block-definition s="create %&apos;_scope&apos; var %&apos;_names&apos;" type="command" category="variables"><comment x="0" y="0" w="146" collapsed="false">This block creates  new variables on the selected scope: global (for all sprites), sprite (for this sprite only) or script (only for that blocks stack) with the names given (in &apos;names&apos; list).&#xD;&#xD;If there is already a variable with that name in that scope, it does nothing: no errors and no overwrites.</comment><header></header><code></code><translations>pt:cria as variáveis _ _&#xD;ca:crea les _ variables _&#xD;es:crear las _ variables _&#xD;de:erstellen _ var _&#xD;</translations><inputs><input type="%s" readonly="true">global<options>global&#xD;sprite&#xD;script</options></input><input type="%mult%txt"></input></inputs><script><block s="doWarp"><script><block s="doForEach"><l>_item</l><block var="_names"/><script><block s="doApplyExtension"><l>var_declare(scope, name)</l><list><block var="_scope"/><block var="_item"/></list></block></script></block></script></block></script></block-definition><block-definition s="var %&apos;_name&apos;" type="reporter" category="variables"><comment x="0" y="0" w="178.00000000000003" collapsed="false">This block reports the value of the variable with the name given.&#xD;&#xD;It looks for that variable following the scope order &apos;script&apos; -&gt; &apos;sprite&apos; -&gt; &apos;global&apos; (the first match it finds).&#xD;&#xD;If that variable does not exist (in any scope) an error happens, stopping their script. You can check it before using the &quot;does var (name) exists?&quot; block. </comment><header></header><code></code><translations>pt:o valor de _&#xD;</translations><inputs><input type="%s"><options>§_getVarNamesDict</options></input></inputs><script><block s="doReport"><block s="reportApplyExtension"><l>var_get(name)</l><list><block var="_name"/></list></block></block></script></block-definition><block-definition s="vector to points %&apos;vector&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%l"></input></inputs><script><block s="doDeclareVariables"><list><l>points</l><l>lastPoint</l><l>lastDir</l></list></block><block s="doWarp"><script><block s="doSetVar"><l>points</l><block s="reportNewList"><list></list></block></block><block s="doSetVar"><l>lastPoint</l><block s="reportNewList"><list><block s="xPosition"></block><block s="yPosition"></block></list></block></block><block s="doSetVar"><l>lastDir</l><custom-block s="translate angle %n"><block s="direction"></block></custom-block></block><block s="doAddToList"><block var="lastPoint"/><block var="points"/></block><block s="doForEach"><l>vec</l><block var="vector"/><script><block s="doIfElse"><block s="reportEquals"><block var="vec"/><l>!</l></block><script><block s="doAddToList"><l>!</l><block var="points"/></block></script><script><block s="doSetVar"><l>lastDir</l><block s="reportDifference"><block var="lastDir"/><block s="reportListItem"><l>1</l><block var="vec"/></block></block></block><block s="doSetVar"><l>lastPoint</l><block s="reportNewList"><list><block s="reportSum"><block s="reportListItem"><l>1</l><block var="lastPoint"/></block><block s="reportProduct"><block s="reportMonadic"><l><option>cos</option></l><block var="lastDir"/></block><block s="reportListItem"><l>2</l><block var="vec"/></block></block></block><block s="reportSum"><block s="reportListItem"><l>2</l><block var="lastPoint"/></block><block s="reportProduct"><block s="reportMonadic"><l><option>sin</option></l><block var="lastDir"/></block><block s="reportListItem"><l>2</l><block var="vec"/></block></block></block></list></block></block><block s="doAddToList"><block var="lastPoint"/><block var="points"/></block></script></block></script></block><block s="doReport"><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportNewList"><list><block s="reportQuotient"><block s="reportRound"><block s="reportProduct"><block s="reportListItem"><l>1</l><l/></block><l>1000</l></block></block><l>1000</l></block><block s="reportQuotient"><block s="reportRound"><block s="reportProduct"><block s="reportListItem"><l>2</l><l/></block><l>1000</l></block></block><l>1000</l></block></list></block></autolambda><list></list></block><block var="points"/></block></block></script></block></script></block-definition><block-definition s="translate angle %&apos;direction&apos;" type="reporter" category="sensing"><comment x="0" y="0" w="188.00000000000003" collapsed="false">translate angle to or from polar coordinates</comment><header></header><code></code><translations>zh_CN:角度转换 _&#xD;</translations><inputs><input type="%n">0</input></inputs><script><block s="doReport"><block s="reportModulus"><block s="reportSum"><block s="reportDifference"><l>90</l><block var="direction"/></block><l>360</l></block><l>360</l></block></block></script></block-definition><block-definition s="lineLength %&apos;line&apos;" type="reporter" category="sensing"><header></header><code></code><translations>zh_CN:线段长度 _&#xD;</translations><inputs><input type="%l"></input></inputs><script><block s="doIfElse"><block s="reportLessThan"><block s="reportListAttribute"><l><option>length</option></l><block var="line"/></block><l>2</l></block><script><block s="doReport"><l>-1</l></block></script><script><block s="doIfElse"><block s="reportIsA"><block s="reportListItem"><l>1</l><block var="line"/></block><l><option>number</option></l></block><script><block s="doReport"><block s="reportMonadic"><l><option>sqrt</option></l><block s="reportSum"><block s="reportProduct"><block s="reportDifference"><block s="xPosition"></block><block s="reportListItem"><l>1</l><block var="line"/></block></block><block s="reportDifference"><block s="xPosition"></block><block s="reportListItem"><l>1</l><block var="line"/></block></block></block><block s="reportProduct"><block s="reportDifference"><block s="yPosition"></block><block s="reportListItem"><l>2</l><block var="line"/></block></block><block s="reportDifference"><block s="yPosition"></block><block s="reportListItem"><l>2</l><block var="line"/></block></block></block></block></block></block></script><script><block s="doReport"><block s="reportMonadic"><l><option>sqrt</option></l><block s="reportSum"><block s="reportProduct"><block s="reportDifference"><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block var="line"/></block></block><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block var="line"/></block></block></block><block s="reportDifference"><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block var="line"/></block></block><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block var="line"/></block></block></block></block><block s="reportProduct"><block s="reportDifference"><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="line"/></block></block><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block var="line"/></block></block></block><block s="reportDifference"><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="line"/></block></block><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block var="line"/></block></block></block></block></block></block></block></script></block></script></block></script></block-definition><block-definition s="calcAngle start %&apos;start&apos; end %&apos;end&apos;" type="reporter" category="sensing"><header></header><code></code><translations>zh_CN:倾斜角 起点 _ 终点 _&#xD;</translations><inputs><input type="%l"></input><input type="%l"></input></inputs><script><block s="doDeclareVariables"><list><l>relativeX</l><l>relativeY</l><l>angle</l></list></block><block s="doWarp"><script><block s="doSetVar"><l>relativeY</l><block s="reportDifference"><block s="reportListItem"><l>2</l><block var="end"/></block><block s="reportListItem"><l>2</l><block var="start"/></block></block></block><block s="doSetVar"><l>relativeX</l><block s="reportDifference"><block s="reportListItem"><l>1</l><block var="end"/></block><block s="reportListItem"><l>1</l><block var="start"/></block></block></block><block s="doIf"><block s="reportAnd"><block s="reportEquals"><block var="relativeX"/><l>0</l></block><block s="reportEquals"><block var="relativeY"/><l>0</l></block></block><script><block s="doReport"><l>90</l></block></script></block><block s="doIf"><block s="reportEquals"><block var="relativeX"/><l>0</l></block><script><block s="doIfElse"><block s="reportGreaterThan"><block var="relativeY"/><l>0</l></block><script><block s="doReport"><l>90</l></block></script><script><block s="doReport"><l>270</l></block></script></block></script></block><block s="doSetVar"><l>angle</l><block s="reportMonadic"><l><option>atan</option></l><block s="reportQuotient"><block var="relativeY"/><block var="relativeX"/></block></block></block><block s="doIfElse"><block s="reportGreaterThan"><block var="angle"/><l>0</l></block><script><block s="doIfElse"><block s="reportGreaterThan"><block var="relativeX"/><l>0</l></block><script><block s="doReport"><block var="angle"/></block></script><script><block s="doReport"><block s="reportSum"><l>180</l><block var="angle"/></block></block></script></block></script><script><block s="doIfElse"><block s="reportLessThan"><block var="relativeX"/><l>0</l></block><script><block s="doReport"><block s="reportSum"><l>180</l><block var="angle"/></block></block></script><script><block s="doReport"><block s="reportSum"><l>360</l><block var="angle"/></block></block></script></block></script></block></script></block></script></block-definition><block-definition s="smooth curve points %&apos;points&apos; stitch length %&apos;length&apos;" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%l"></input><input type="%n">10</input></inputs><script><block s="doDeclareVariables"><list><l>distance</l><l>nb</l></list></block><block s="doWarp"><script><block s="doSetVar"><l>distance</l><custom-block s="distance of points %l"><block var="points"/></custom-block></block><block s="doSetVar"><l>nb</l><block s="reportRound"><block s="reportQuotient"><block s="reportProduct"><block var="distance"/><l>1.4</l></block><block var="length"/></block></block></block><block s="doReport"><block s="evaluate"><block s="reportJSFunction"><list><l>points</l><l>nb</l></list><l>function parametricSplineInterpolation(points, numPoints = 100) {&#xD;&#xD;    if (points.length &lt; 2) {&#xD;        throw new Error("Should have at least two pooints");&#xD;    }&#xD;&#xD;&#xD;    const t = points.map((_, i) =&gt; i);&#xD;    const x = points.map(p =&gt; p.asArray()[0]);&#xD;    const y = points.map(p =&gt; p.asArray()[1]);&#xD;&#xD;    // 计算三次样条插值的系数&#xD;    function calculateCoefficients(t, values) {&#xD;        const n = t.length;&#xD;        const h = [];&#xD;        const alpha = [];&#xD;        const l = [];&#xD;        const mu = [];&#xD;        const z = [];&#xD;        const a = values.slice();&#xD;        const b = new Array(n).fill(0);&#xD;        const c = new Array(n).fill(0);&#xD;        const d = new Array(n).fill(0);&#xD;&#xD;        // 计算 h 和 alpha&#xD;        for (let i = 0; i &lt; n - 1; i++) {&#xD;            h[i] = t[i + 1] - t[i];&#xD;            alpha[i] = (3 / h[i]) * (a[i + 1] - a[i]) - (3 / (h[i - 1] || 1)) * (a[i] - a[i - 1] || 0);&#xD;        }&#xD;&#xD;        // 计算 l, mu, z&#xD;        l[0] = 1;&#xD;        mu[0] = 0;&#xD;        z[0] = 0;&#xD;&#xD;        for (let i = 1; i &lt; n - 1; i++) {&#xD;            l[i] = 2 * (t[i + 1] - t[i - 1]) - h[i - 1] * mu[i - 1];&#xD;            mu[i] = h[i] / l[i];&#xD;            z[i] = (alpha[i] - h[i - 1] * z[i - 1]) / l[i];&#xD;        }&#xD;&#xD;        l[n - 1] = 1;&#xD;        z[n - 1] = 0;&#xD;        c[n - 1] = 0;&#xD;&#xD;        // 计算 c, b, d&#xD;        for (let j = n - 2; j &gt;= 0; j--) {&#xD;            c[j] = z[j] - mu[j] * c[j + 1];&#xD;            b[j] = (a[j + 1] - a[j]) / h[j] - h[j] * (c[j + 1] + 2 * c[j]) / 3;&#xD;            d[j] = (c[j + 1] - c[j]) / (3 * h[j]);&#xD;        }&#xD;&#xD;        return { a, b, c, d };&#xD;    }&#xD;&#xD;    // 计算 x 和 y 的插值系数&#xD;    const xCoeff = calculateCoefficients(t, x);&#xD;    const yCoeff = calculateCoefficients(t, y);&#xD;&#xD;    // 生成插值点&#xD;    const result = [];&#xD;    const totalSegments = t.length - 1;&#xD;    const step = totalSegments / numPoints;&#xD;&#xD;    for (let i = 0; i &lt; numPoints; i++) {&#xD;        const ti = i * step;&#xD;&#xD;        // 找到 ti 所在的区间&#xD;        let segmentIndex = 0;&#xD;        for (let j = 0; j &lt; t.length - 1; j++) {&#xD;            if (ti &gt;= t[j] &amp;&amp; ti &lt;= t[j + 1]) {&#xD;                segmentIndex = j;&#xD;                break;&#xD;            }&#xD;        }&#xD;&#xD;        // 计算 x 和 y 的插值值&#xD;        const dt = ti - t[segmentIndex];&#xD;        const xi = xCoeff.a[segmentIndex] * 1 +&#xD;                   xCoeff.b[segmentIndex] * dt +&#xD;                   xCoeff.c[segmentIndex] * dt * dt +&#xD;                   xCoeff.d[segmentIndex] * dt * dt * dt;&#xD;        const yi = yCoeff.a[segmentIndex] * 1 +&#xD;                   yCoeff.b[segmentIndex] * dt +&#xD;                   yCoeff.c[segmentIndex] * dt * dt +&#xD;                   yCoeff.d[segmentIndex] * dt * dt * dt;&#xD;&#xD;        result.push(new List([xi, yi]));&#xD;    }&#xD;&#xD;    return result;&#xD;}&#xD;&#xD;let controlPoints = points.asArray();&#xD;let curvePoints = parametricSplineInterpolation(controlPoints,nb);&#xD;return new List(curvePoints);</l></block><list><block var="points"/><block var="nb"/></list></block></block></script></block></script></block-definition><block-definition s="distance of points %&apos;points&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%l"></input></inputs><script><block s="doDeclareVariables"><list><l>length</l><l>first</l></list></block><block s="doWarp"><script><block s="doIf"><block s="reportLessThanOrEquals"><block s="reportListAttribute"><l><option>length</option></l><block var="points"/></block><l>1</l></block><script><block s="doReport"><l>0</l></block></script></block><block s="doIf"><block s="reportEquals"><block s="reportListAttribute"><l><option>length</option></l><block var="points"/></block><l>2</l></block><script><block s="doReport"><custom-block s="lineLength %l"><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block var="points"/></block><block s="reportListItem"><l>2</l><block var="points"/></block></list></block></custom-block></block></script></block><block s="doSetVar"><l>length</l><l>0</l></block><block s="doSetVar"><l>first</l><block s="reportListItem"><l>1</l><block var="points"/></block></block><block s="doForEach"><l>点</l><block s="reportCDR"><block var="points"/></block><script><block s="doChangeVar"><l>length</l><custom-block s="lineLength %l"><block s="reportNewList"><list><block var="first"/><block var="点"/></list></block></custom-block></block><block s="doSetVar"><l>first</l><block var="点"/></block></script></block><block s="doReport"><block var="length"/></block></script></block></script></block-definition><block-definition s="pointsToVector %&apos;points&apos;" type="reporter" category="operators"><header></header><code></code><translations>zh_CN:点集转换为矢量 _&#xD;</translations><inputs><input type="%l"></input></inputs><script><block s="doDeclareVariables"><list><l>vector</l><l>lastPoint</l><l>lastDir</l><l>thisDir</l></list></block><block s="doWarp"><script><block s="doSetVar"><l>vector</l><block s="reportNewList"><list></list></block></block><block s="doIf"><block s="reportLessThan"><block s="reportListAttribute"><l><option>length</option></l><block var="points"/></block><l>2</l></block><script><block s="doReport"><block s="reportNewList"><list></list></block></block></script></block><block s="doIfElse"><block s="reportEquals"><block s="reportListItem"><l>1</l><block var="points"/></block><l>!</l></block><script><block s="doSetVar"><l>lastDir</l><custom-block s="calcAngle start %l end %l"><block s="reportNewList"><list><l>0</l><l>0</l></list></block><block s="reportListItem"><l>2</l><block var="points"/></block></custom-block></block><block s="doAddToList"><l>!</l><block var="vector"/></block><block s="doAddToList"><block s="reportNewList"><list><block s="reportMonadic"><l><option>neg</option></l><block var="lastDir"/></block><custom-block s="lineLength %l"><block s="reportNewList"><list><block s="reportNewList"><list><l>0</l><l>0</l></list></block><block s="reportListItem"><l>2</l><block var="points"/></block></list></block></custom-block></list></block><block var="vector"/></block></script><script><block s="doSetVar"><l>lastDir</l><custom-block s="calcAngle start %l end %l"><block s="reportListItem"><l>1</l><block var="points"/></block><block s="reportListItem"><l>2</l><block var="points"/></block></custom-block></block><block s="doAddToList"><block s="reportNewList"><list><block s="reportMonadic"><l><option>neg</option></l><block var="lastDir"/></block><custom-block s="lineLength %l"><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block var="points"/></block><block s="reportListItem"><l>2</l><block var="points"/></block></list></block></custom-block></list></block><block var="vector"/></block></script></block><block s="doSetVar"><l>lastPoint</l><block s="reportListItem"><l>2</l><block var="points"/></block></block><block s="doIf"><block s="reportGreaterThan"><block s="reportListAttribute"><l><option>length</option></l><block var="points"/></block><l>2</l></block><script><block s="doFor"><l>i</l><l>3</l><block s="reportListAttribute"><l><option>length</option></l><block var="points"/></block><script><block s="doIfElse"><block s="reportEquals"><block s="reportListItem"><block var="i"/><block var="points"/></block><l>!</l></block><script><block s="doAddToList"><l>!</l><block var="vector"/></block></script><script><block s="doSetVar"><l>thisDir</l><custom-block s="calcAngle start %l end %l"><block var="lastPoint"/><block s="reportListItem"><block var="i"/><block var="points"/></block></custom-block></block><block s="doAddToList"><block s="reportNewList"><list><custom-block s="translate angle %n"><custom-block s="translate angle %n"><block s="reportDifference"><block var="lastDir"/><block var="thisDir"/></block></custom-block></custom-block><custom-block s="lineLength %l"><block s="reportNewList"><list><block var="lastPoint"/><block s="reportListItem"><block var="i"/><block var="points"/></block></list></block></custom-block></list></block><block var="vector"/></block><block s="doSetVar"><l>lastPoint</l><block s="reportListItem"><block var="i"/><block var="points"/></block></block><block s="doSetVar"><l>lastDir</l><block var="thisDir"/></block></script></block></script></block></script></block></script></block><block s="doReport"><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportIfElse"><block s="reportIsA"><l></l><l><option>list</option></l></block><block s="reportNewList"><list><block s="reportQuotient"><block s="reportRound"><block s="reportProduct"><block s="reportListItem"><l>1</l><l/></block><l>100000</l></block></block><l>100000</l></block><block s="reportQuotient"><block s="reportRound"><block s="reportProduct"><block s="reportListItem"><l>2</l><l/></block><l>100000</l></block></block><l>100000</l></block></list></block><l></l></block></autolambda><list></list></block><block var="vector"/></block></block></script></block-definition><block-definition s="convert vector %&apos;vector&apos; scale %&apos;scale&apos; by seam %&apos;seam&apos;" type="reporter" category="operators"><header></header><code></code><translations>zh_CN:转换矢量 _ 比例 _ 针脚长度 _&#xD;</translations><inputs><input type="%l"></input><input type="%n">1</input><input type="%n">6</input></inputs><script><block s="doDeclareVariables"><list><l>newVector</l><l>deflection</l><l>buffer</l><l>length</l><l>tempV</l></list></block><block s="doSetVar"><l>newVector</l><block s="reportNewList"><list></list></block></block><block s="doSetVar"><l>buffer</l><block s="reportNewList"><list></list></block></block><block s="doSetVar"><l>deflection</l><l>0</l></block><block s="doIfElse"><block s="reportEquals"><block var="seam"/><l>0</l></block><script><block s="doWarp"><script><block s="doForEach"><l>item</l><block var="vector"/><script><block s="doIfElse"><block s="reportOr"><block s="reportEquals"><block var="item"/><l>!</l></block><block s="reportEquals"><block s="reportListItem"><l>1</l><block var="item"/></block><l>!</l></block></block><script><block s="doAddToList"><l>!</l><block var="newVector"/></block></script><script><block s="doAddToList"><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block var="item"/></block><block s="reportProduct"><block s="reportListItem"><l>2</l><block var="item"/></block><block var="scale"/></block></list></block><block var="newVector"/></block></script></block></script></block></script></block></script><script><block s="doWarp"><script><custom-block s="%upvar for each %upvar of %l %ca"><l>#</l><l>item</l><block var="vector"/><script><block s="doIfElse"><block s="reportOr"><block s="reportEquals"><block var="item"/><l>!</l></block><block s="reportEquals"><block s="reportListItem"><l>1</l><block var="item"/></block><l>!</l></block></block><script><block s="doIf"><block s="reportNot"><block s="reportListIsEmpty"><block var="buffer"/></block></block><script><block s="doAddToList"><block var="buffer"/><block var="newVector"/></block><block s="doSetVar"><l>buffer</l><block s="reportNewList"><list></list></block></block></script></block><block s="doAddToList"><l>!</l><block var="newVector"/></block></script><script><block s="doSetVar"><l>length</l><block s="reportProduct"><block s="reportListItem"><l>2</l><block var="item"/></block><block var="scale"/></block></block><block s="doIf"><block s="reportAnd"><block s="reportNot"><block s="reportListIsEmpty"><block var="buffer"/></block></block><block s="reportLessThan"><block s="reportMonadic"><l><option>abs</option></l><block s="reportDifference"><l>180</l><block s="reportListItem"><l>1</l><block var="item"/></block></block></block><l>95</l></block></block><script><block s="doAddToList"><block var="buffer"/><block var="newVector"/></block><block s="doSetVar"><l>buffer</l><block s="reportNewList"><list></list></block></block></script></block><block s="doIfElse"><block s="reportListIsEmpty"><block var="buffer"/></block><script><block s="doIfElse"><block s="reportGreaterThan"><block var="length"/><block s="reportProduct"><block var="seam"/><l>0.9</l></block></block><script><block s="doIfElse"><block s="reportEquals"><block var="deflection"/><l>0</l></block><script><block s="doAddToList"><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block var="item"/></block><block var="length"/></list></block><block var="newVector"/></block></script><script><block s="doAddToList"><block s="reportNewList"><list><block s="reportSum"><block s="reportListItem"><l>1</l><block var="item"/></block><block var="deflection"/></block><block var="length"/></list></block><block var="newVector"/></block><block s="doSetVar"><l>deflection</l><l>0</l></block></script></block></script><script><block s="doIfElse"><block s="reportEquals"><block var="deflection"/><l>0</l></block><script><block s="doSetVar"><l>buffer</l><block s="reportNewList"><list><block s="reportListItem"><l>1</l><block var="item"/></block><block var="length"/></list></block></block></script><script><block s="doSetVar"><l>buffer</l><block s="reportNewList"><list><block s="reportSum"><block s="reportListItem"><l>1</l><block var="item"/></block><block var="deflection"/></block><block var="length"/></list></block></block><block s="doSetVar"><l>deflection</l><l>0</l></block></script></block></script></block></script><script><block s="doSetVar"><l>tempV</l><custom-block s="conbine 2 vectors vector1 %l vector2 %l deflection %upvar"><block var="buffer"/><block s="reportNewList"><list><block s="reportSum"><block s="reportListItem"><l>1</l><block var="item"/></block><block var="deflection"/></block><block var="length"/></list></block><l>defl</l></custom-block></block><block s="doIfElse"><block s="reportGreaterThan"><block s="reportListItem"><l>2</l><block var="tempV"/></block><block s="reportProduct"><block var="seam"/><l>0.9</l></block></block><script><block s="doAddToList"><block var="tempV"/><block var="newVector"/></block><block s="doSetVar"><l>buffer</l><block s="reportNewList"><list></list></block></block></script><script><block s="doSetVar"><l>buffer</l><block var="tempV"/></block></script></block><block s="doSetVar"><l>deflection</l><block var="defl"/></block></script></block></script></block></script></custom-block><block s="doIf"><block s="reportNot"><block s="reportListIsEmpty"><block var="buffer"/></block></block><script><block s="doAddToList"><block var="buffer"/><block var="newVector"/></block></script></block></script></block></script></block><block s="doReport"><block var="newVector"/></block></script></block-definition><block-definition s="conbine 2 vectors vector1 %&apos;vector1&apos; vector2 %&apos;vector2&apos; deflection %&apos;deflection&apos;" type="reporter" category="operators"><header></header><code></code><translations>zh_CN:合并矢量 矢量1 _ 矢量2 _ 偏移角度 _&#xD;</translations><inputs><input type="%l"></input><input type="%l"></input><input type="%upvar"></input></inputs><script><block s="doDeclareVariables"><list><l>angleC</l><l>a</l><l>b</l><l>c</l><l>angleB</l><l>angleA</l><l>angleV2</l></list></block><block s="doSetVar"><l>a</l><block s="reportListItem"><l>2</l><block var="vector1"/></block></block><block s="doSetVar"><l>b</l><block s="reportListItem"><l>2</l><block var="vector2"/></block></block><block s="doSetVar"><l>angleV2</l><block s="reportListItem"><l>1</l><block var="vector2"/></block></block><block s="doIf"><block s="reportGreaterThan"><block var="angleV2"/><l>180</l></block><script><block s="doSetVar"><l>angleV2</l><block s="reportDifference"><block var="angleV2"/><l>360</l></block></block></script></block><block s="doIfElse"><block s="reportGreaterThan"><block var="angleV2"/><l>0</l></block><script><block s="doSetVar"><l>angleC</l><block s="reportDifference"><l>180</l><block var="angleV2"/></block></block></script><script><block s="doSetVar"><l>angleC</l><block s="reportSum"><l>180</l><block var="angleV2"/></block></block></script></block><block s="doSetVar"><l>c</l><block s="reportMonadic"><l><option>sqrt</option></l><block s="reportDifference"><block s="reportSum"><block s="reportPower"><block var="a"/><l>2</l></block><block s="reportPower"><block var="b"/><l>2</l></block></block><block s="reportProduct"><block s="reportProduct"><l>2</l><block s="reportProduct"><block var="a"/><block var="b"/></block></block><block s="reportMonadic"><l><option>cos</option></l><block var="angleC"/></block></block></block></block></block><block s="doSetVar"><l>angleA</l><block s="reportMonadic"><l><option>acos</option></l><block s="reportQuotient"><block s="reportDifference"><block s="reportSum"><block s="reportPower"><block var="b"/><l>2</l></block><block s="reportPower"><block var="c"/><l>2</l></block></block><block s="reportPower"><block var="a"/><l>2</l></block></block><block s="reportProduct"><l>2</l><block s="reportProduct"><block var="b"/><block var="c"/></block></block></block></block></block><block s="doSetVar"><l>angleB</l><block s="reportMonadic"><l><option>acos</option></l><block s="reportQuotient"><block s="reportDifference"><block s="reportSum"><block s="reportPower"><block var="a"/><l>2</l></block><block s="reportPower"><block var="c"/><l>2</l></block></block><block s="reportPower"><block var="b"/><l>2</l></block></block><block s="reportProduct"><l>2</l><block s="reportProduct"><block var="a"/><block var="c"/></block></block></block></block></block><block s="doIfElse"><block s="reportGreaterThan"><block var="angleV2"/><l>0</l></block><script><block s="doSetVar"><l>deflection</l><block var="angleA"/></block><block s="doReport"><block s="reportNewList"><list><block s="reportSum"><block s="reportListItem"><l>1</l><block var="vector1"/></block><block var="angleB"/></block><block var="c"/></list></block></block></script><script><block s="doSetVar"><l>deflection</l><block s="reportMonadic"><l><option>neg</option></l><block var="angleA"/></block></block><block s="doReport"><block s="reportNewList"><list><block s="reportDifference"><block s="reportListItem"><l>1</l><block var="vector1"/></block><block var="angleB"/></block><block var="c"/></list></block></block></script></block></script></block-definition><block-definition s="%&apos;#&apos; for each %&apos;item&apos; of %&apos;data&apos; %&apos;action&apos;" type="command" category="lists"><comment x="0" y="0" w="228.57142857142858" collapsed="false">This block carries out the given script for each item of the given list, like the primitive FOR EACH.&#xD;&#xD;What&apos;s different is that it provides the # variable, which will contain the item number in the list of each item in turn, 1 while processing item 1, and so on.</comment><header></header><code></code><translations>ca:_ per cada _ de _ _&#xD;</translations><inputs><input type="%upvar"></input><input type="%upvar"></input><input type="%l"></input><input type="%ca"></input></inputs><script><block s="doForEach"><l>inner item</l><block var="data"/><script><block s="doSetVar"><l>item</l><block var="inner item"/></block><block s="doChangeVar"><l>#</l><l>1</l></block><block s="doRun"><block var="action"/><list></list></block></script></block></script></block-definition><block-definition s="fold line %&apos;distance&apos; width %&apos;range&apos; direction %&apos;direction&apos; style %&apos;styleScript&apos;" type="command" category="motion"><variables><list struct="atomic" id="8889">line1,line2,dir</list></variables><header></header><code></code><translations>zh_CN:折线 _ 步 宽度 _ 方向 _ 方式 _&#xD;</translations><inputs><input type="%n"></input><input type="%n">10</input><input type="%txt">left<options>left&#xD;right&#xD;middle</options></input><input type="%cmdRing"></input></inputs><script><block s="doDeclareVariables"><list><l>angle</l><l>chord</l></list></block><block s="doWarp"><script><block s="doIf"><block s="reportEquals"><block var="distance"/><l>0</l></block><script><block s="doSetVar"><l>distance</l><block s="reportIfElse"><block s="reportGreaterThan"><custom-block s="default stitch length"></custom-block><l>0</l></block><custom-block s="default stitch length"></custom-block><l>10</l></block></block></script></block><block s="doIf"><custom-block s="Is %cmdRing empty?"><block var="styleScript"/></custom-block><script><block s="doSetVar"><l>styleScript</l><custom-block s="stitch style"></custom-block></block></script></block><block s="doSetVar"><l>angle</l><block s="reportMonadic"><l><option>atan</option></l><block s="reportQuotient"><block var="range"/><block s="reportQuotient"><block var="distance"/><l>2</l></block></block></block></block><block s="doSetVar"><l>chord</l><block s="reportQuotient"><block var="range"/><block s="reportMonadic"><l><option>sin</option></l><block var="angle"/></block></block></block><block s="doIfElse"><block s="reportEquals"><block var="direction"/><l>middle</l></block><script><custom-block s="fold line %n width %n direction %txt style %cmdRing"><block s="reportQuotient"><block var="distance"/><l>2</l></block><block s="reportQuotient"><block var="range"/><l>2</l></block><l>left</l><block var="styleScript"/></custom-block><custom-block s="fold line %n width %n direction %txt style %cmdRing"><block s="reportQuotient"><block var="distance"/><l>2</l></block><block s="reportQuotient"><block var="range"/><l>2</l></block><l>right</l><block var="styleScript"/></custom-block></script><script><block s="doIfElse"><block s="reportEquals"><block var="direction"/><l>left</l></block><script><block s="turnLeft"><block var="angle"/></block><block s="doRun"><block var="styleScript"/><list><block var="chord"/></list></block><block s="turn"><block s="reportProduct"><l>2</l><block var="angle"/></block></block><block s="doRun"><block var="styleScript"/><list><block var="chord"/></list></block><block s="turnLeft"><block var="angle"/></block></script><script><block s="turn"><block var="angle"/></block><block s="doRun"><block var="styleScript"/><list><block var="chord"/></list></block><block s="turnLeft"><block s="reportProduct"><l>2</l><block var="angle"/></block></block><block s="doRun"><block var="styleScript"/><list><block var="chord"/></list></block><block s="turn"><block var="angle"/></block></script></block></script></block></script></block></script></block-definition><block-definition s="default stitch length" type="reporter" category="embroidery"><header></header><code></code><translations>zh_CN:默认针脚长度&#xD;</translations><inputs></inputs><script><block s="doReport"><block s="evaluate"><block s="reportJSFunction"><list></list><l>if (this.isRunning) {&#xD;    return this.stitchoptions.length;&#xD;} else {&#xD;    return 0;&#xD;}</l></block><list></list></block></block></script></block-definition><block-definition s="Is %&apos;ring&apos; empty?" type="predicate" category="operators"><header></header><code></code><translations>zh_CN:_ 为空？&#xD;</translations><inputs><input type="%cmdRing"></input></inputs><script><block s="doReport"><block s="evaluate"><block s="reportJSFunction"><list><l>context</l></list><l>return !(context instanceof Context) || context.expression instanceof Array;</l></block><list><block var="ring"/></list></block></block></script></block-definition><block-definition s="stitch style" type="reporter" category="embroidery"><header></header><code></code><translations>zh_CN:默认针法&#xD;</translations><inputs></inputs><script><block s="doDeclareVariables"><list><l>stitchtype</l></list></block><block s="doSetVar"><l>stitchtype</l><block s="evaluate"><block s="reportJSFunction"><list></list><l>if (this.stitchstyle) {&#xD;    return this.stitchstyle;&#xD;} else {&#xD;    return &apos;None&apos;;&#xD;}</l></block><list></list></block></block><block s="doReport"><block s="reportIfElse"><block s="reportAnd"><block s="reportIsA"><block var="stitchtype"/><l><option>command</option></l></block><block s="reportNot"><custom-block s="Is %cmdRing empty?"><block var="stitchtype"/></custom-block></block></block><block var="stitchtype"/><block s="reifyScript"><script><block s="forward"><l></l></block></script><list></list></block></block></block></script></block-definition><block-definition s="bar %&apos;distance&apos; width %&apos;range&apos; direction %&apos;direction&apos; style %&apos;styleScript&apos;" type="command" category="motion"><header></header><code></code><translations>zh_CN:方波 _ 步 宽度 _ 方向 _ 方式 _&#xD;</translations><inputs><input type="%n"></input><input type="%n">20</input><input type="%txt">left<options>left&#xD;right&#xD;middle</options></input><input type="%cmdRing"></input></inputs><script><block s="doWarp"><script><block s="doIf"><block s="reportEquals"><block var="distance"/><l>0</l></block><script><block s="doSetVar"><l>distance</l><block s="reportIfElse"><block s="reportGreaterThan"><custom-block s="default stitch length"></custom-block><l>0</l></block><custom-block s="default stitch length"></custom-block><l>10</l></block></block></script></block><block s="doIf"><custom-block s="Is %cmdRing empty?"><block var="styleScript"/></custom-block><script><block s="doSetVar"><l>styleScript</l><custom-block s="stitch style"></custom-block></block></script></block><block s="doIfElse"><block s="reportEquals"><block var="direction"/><l>left</l></block><script><block s="turnLeft"><l>90</l></block><block s="doRun"><block var="styleScript"/><list><block var="range"/></list></block><block s="turn"><l>90</l></block><block s="doRun"><block var="styleScript"/><list><block s="reportQuotient"><block var="distance"/><l>2</l></block></list></block><block s="turn"><l>90</l></block><block s="doRun"><block var="styleScript"/><list><block var="range"/></list></block><block s="turnLeft"><l>90</l></block><block s="doRun"><block var="styleScript"/><list><block s="reportQuotient"><block var="distance"/><l>2</l></block></list></block></script><script><block s="doIfElse"><block s="reportEquals"><block var="direction"/><l>right</l></block><script><block s="turn"><l>90</l></block><block s="doRun"><block var="styleScript"/><list><block var="range"/></list></block><block s="turnLeft"><l>90</l></block><block s="doRun"><block var="styleScript"/><list><block s="reportQuotient"><block var="distance"/><l>2</l></block></list></block><block s="turnLeft"><l>90</l></block><block s="doRun"><block var="styleScript"/><list><block var="range"/></list></block><block s="turn"><l>90</l></block><block s="doRun"><block var="styleScript"/><list><block s="reportQuotient"><block var="distance"/><l>2</l></block></list></block></script><script><block s="turn"><l>90</l></block><block s="doRun"><block var="styleScript"/><list><block s="reportQuotient"><block var="range"/><l>2</l></block></list></block><block s="turnLeft"><l>90</l></block><block s="doRun"><block var="styleScript"/><list><block s="reportQuotient"><block var="distance"/><l>2</l></block></list></block><block s="turnLeft"><l>90</l></block><block s="doRun"><block var="styleScript"/><list><block s="reportQuotient"><block var="range"/><l>2</l></block></list></block><block s="doRun"><block var="styleScript"/><list><block s="reportQuotient"><block var="range"/><l>2</l></block></list></block><block s="turn"><l>90</l></block><block s="doRun"><block var="styleScript"/><list><block s="reportQuotient"><block var="distance"/><l>2</l></block></list></block><block s="turn"><l>90</l></block><block s="doRun"><block var="styleScript"/><list><block s="reportQuotient"><block var="range"/><l>2</l></block></list></block><block s="turnLeft"><l>90</l></block></script></block></script></block></script></block></script></block-definition><block-definition s="move %&apos;distance&apos; style %&apos;styleScript&apos; by %&apos;stepLength&apos;" type="command" category="motion"><header></header><code></code><translations>zh_CN:移动 _ 步 方式 _ 步长 _&#xD;</translations><inputs><input type="%n">50</input><input type="%cmdRing"></input><input type="%txt">0</input></inputs><script><block s="doDeclareVariables"><list><l>dist</l><l>dir</l></list></block><block s="doWarp"><script><block s="doIf"><block s="reportNot"><block s="reportIsA"><block var="stepLength"/><l><option>number</option></l></block></block><script><block s="doIfElse"><block s="reportEquals"><block var="stepLength"/><l></l></block><script><block s="doSetVar"><l>stepLength</l><block var="distance"/></block></script><script><block s="doSetVar"><l>stepLength</l><l>0</l></block></script></block></script></block><block s="doSetVar"><l>stepLength</l><block s="reportIfElse"><block s="reportGreaterThan"><block var="stepLength"/><l>0</l></block><block var="stepLength"/><block s="reportIfElse"><block s="reportGreaterThan"><custom-block s="default stitch length"></custom-block><l>0</l></block><custom-block s="default stitch length"></custom-block><l>10</l></block></block></block><block s="doSetVar"><l>dir</l><l>1</l></block><block s="doIf"><block s="reportLessThan"><block var="distance"/><l>0</l></block><script><block s="doSetVar"><l>dir</l><l>-1</l></block></script></block><block s="doIf"><custom-block s="Is %cmdRing empty?"><block var="styleScript"/></custom-block><script><block s="doSetVar"><l>styleScript</l><custom-block s="stitch style"></custom-block></block></script></block><block s="doSetVar"><l>dist</l><block s="reportMonadic"><l><option>abs</option></l><block var="distance"/></block></block><block s="doUntil"><block s="reportLessThan"><block var="dist"/><block s="reportProduct"><block var="stepLength"/><l>2</l></block></block><script><block s="doRun"><block var="styleScript"/><list><block s="reportProduct"><block var="dir"/><block var="stepLength"/></block></list></block><block s="doChangeVar"><l>dist</l><block s="reportProduct"><l>-1</l><block var="stepLength"/></block></block></script></block><block s="doIfElse"><block s="reportGreaterThan"><block var="dist"/><block s="reportProduct"><block var="stepLength"/><l>1.5</l></block></block><script><block s="doRun"><block var="styleScript"/><list><block s="reportProduct"><block var="dir"/><block var="stepLength"/></block></list></block><block s="doRun"><block var="styleScript"/><list><block s="reportProduct"><block var="dir"/><block s="reportDifference"><block var="dist"/><block var="stepLength"/></block></block></list></block></script><script><block s="doRun"><block var="styleScript"/><list><block s="reportProduct"><block var="dir"/><block var="dist"/></block></list></block></script></block></script></block></script></block-definition></blocks>
