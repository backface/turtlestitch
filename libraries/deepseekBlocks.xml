<blocks app="Snap! 8.2, https://snap.berkeley.edu" version="2"><palette><category name="deepseek" color="0,75,189,1"/></palette><block-definition s="set API key %&apos;apikey&apos;" type="command" category="deepseek"><header></header><code></code><translations>zh_CN:设置API Key _&#xD;</translations><inputs><input type="%txt"></input></inputs><script><block s="doRun"><block s="reportJSFunction"><list><l>apikey</l></list><l>this.deepseekAPIkey = apikey;</l></block><list><block var="apikey"/></list></block></script></block-definition><block-definition s="answer of %&apos;question&apos;" type="reporter" category="deepseek"><header></header><code></code><translations>zh_CN:DeepSeek 请回答 _&#xD;</translations><inputs><input type="%txt"></input></inputs><script><block s="doReport"><block s="evaluate"><block s="reportJSFunction"><list><l>question</l><l>proc</l></list><l>if (!this.deepseekState) {&#xD;    this.deepseekState = "ready";&#xD;    this.deepseekResult = 0;&#xD;}	&#xD;      if(this.deepseekState == "success") {&#xD;          this.deepseekState = "ready";&#xD;          return this.deepseekResult.choices[0].message.content;&#xD;      }else if(this.deepseekState == "fail") {&#xD;                this.deepseekState = "ready";&#xD;                return "fail";&#xD;            }else if(this.deepseekState == "ready") { &#xD;const me = this;&#xD;const myPromise = new Promise((resolve,reject) =&gt; {&#xD;  // 你的DeepSeek API密钥&#xD;  const apiKey = me.deepseekAPIkey?me.deepseekAPIkey:&apos;sk-847ced61c9df46ddb7d0e7b2c93fa98e&apos;;&#xD;  // DeepSeek API的URL&#xD;  const apiUrl = &apos;https://api.deepseek.com/v1/chat/completions&apos;;&#xD;  // 请求参数&#xD;  const requestData = {&#xD;    &apos;model&apos;: &apos;deepseek-chat&apos;,&#xD;    &apos;messages&apos;: [&#xD;        {&#xD;             &apos;role&apos;: &apos;user&apos;,&#xD;             &apos;content&apos;: question&#xD;        }&#xD;&#xD;    ],&#xD;    max_tokens: 4096,&#xD;    temperature: 0.1,&#xD;    stream: false  &#xD;  };&#xD;  me.deepseekState = "pending";&#xD;  fetch(apiUrl, {&#xD;    method: &apos;POST&apos;, // 通常是POST请求&#xD;    headers: {&#xD;        &apos;Content-Type&apos;: &apos;application/json&apos;,&#xD;        &apos;Authorization&apos;: `Bearer ${apiKey}` // 使用Bearer Token认证&#xD;    },&#xD;    body: JSON.stringify(requestData) // 将请求数据转换为JSON字符串&#xD;  })&#xD;  .then(response =&gt; response.json()) // 解析JSON响应&#xD;  .then(data =&gt; {&#xD;    if (data.code==404 ) {&#xD;        reject(&apos;请求异常:&apos;+data.msg);&#xD;    }else{&#xD;        resolve(data);&#xD;    } &#xD;  })&#xD;  .catch(error =&gt; {&#xD;      console.log(error);&#xD;      me.deepseekState = "fail";// 处理错误&#xD;  });&#xD;});&#xD;myPromise.then((data) =&gt; {&#xD;    me.deepseekResult = data;&#xD;    me.deepseekState = "success";&#xD;});&#xD;    proc.pushContext(&apos;doYield&apos;);&#xD;    proc.pushContext();&#xD;}else if(this.deepseekState == "pending") {&#xD;    proc.pushContext(&apos;doYield&apos;);&#xD;    proc.pushContext();	&#xD;};</l></block><list><block var="question"/></list></block></block></script></block-definition><block-definition s="Logo code of %&apos;promtp&apos;" type="reporter" category="deepseek"><header></header><code></code><translations>zh_CN:_ 的Logo代码&#xD;</translations><inputs><input type="%txt"></input></inputs><script><block s="doDeclareVariables"><list><l>answer</l><l>result</l></list></block><block s="doSetVar"><l>answer</l><custom-block s="answer of %txt"><block s="reportJoinWords"><list><l>请帮我生成一段LOGO代码，</l><block var="promtp"/><l>，</l><l>请只返回LOGO代码行，不要其他任何文字,也不要其他标注</l></list></block></custom-block></block><block s="doWarp"><script><block s="doSetVar"><l>answer</l><block s="reportKeep"><block s="reifyPredicate"><autolambda><block s="reportVariadicNotEquals"><list><block s="reportLetter"><l>1</l><l></l></block><l>`</l></list></block></autolambda><list></list></block><block s="reportTextSplit"><block var="answer"/><l><option>line</option></l></block></block></block><block s="doIfElse"><block s="reportVariadicGreaterThan"><list><block s="reportListAttribute"><l><option>length</option></l><block var="answer"/></block><l>0</l></list></block><script><block s="doSetVar"><l>result</l><block s="reportListItem"><l>1</l><block var="answer"/></block></block><block s="doForEach"><l>项</l><block s="reportCDR"><block var="answer"/></block><script><block s="doSetVar"><l>result</l><block s="reportJoinWords"><list><block var="result"/><block s="reportUnicodeAsLetter"><l>13</l></block><block s="reportUnicodeAsLetter"><l>10</l></block><block var="项"/></list></block></block></script></block><block s="doReport"><block var="result"/></block></script><script><block s="doReport"><l></l></block></script></block></script></block></script></block-definition><block-definition s="Python code of %&apos;promtp&apos;" type="reporter" category="deepseek"><header></header><code></code><translations>zh_CN:_ 的Python代码&#xD;</translations><inputs><input type="%txt"></input></inputs><script><block s="doDeclareVariables"><list><l>answer</l><l>result</l></list></block><block s="doSetVar"><l>answer</l><custom-block s="answer of %txt"><block s="reportJoinWords"><list><l>请帮我生成一段Python代码，</l><block var="promtp"/><l>，</l><l>请只返回Python代码行，不要其他任何文字,也不要其他标注</l></list></block></custom-block></block><block s="doWarp"><script><block s="doSetVar"><l>answer</l><block s="reportKeep"><block s="reifyPredicate"><autolambda><block s="reportVariadicNotEquals"><list><block s="reportLetter"><l>1</l><l></l></block><l>`</l></list></block></autolambda><list></list></block><block s="reportTextSplit"><block var="answer"/><l><option>line</option></l></block></block></block><block s="doIfElse"><block s="reportVariadicGreaterThan"><list><block s="reportListAttribute"><l><option>length</option></l><block var="answer"/></block><l>0</l></list></block><script><block s="doSetVar"><l>result</l><block s="reportListItem"><l>1</l><block var="answer"/></block></block><block s="doForEach"><l>项</l><block s="reportCDR"><block var="answer"/></block><script><block s="doSetVar"><l>result</l><block s="reportJoinWords"><list><block var="result"/><block s="reportUnicodeAsLetter"><l>13</l></block><block s="reportUnicodeAsLetter"><l>10</l></block><block var="项"/></list></block></block></script></block><block s="doReport"><block var="result"/></block></script><script><block s="doReport"><l></l></block></script></block></script></block></script></block-definition><block-definition s="answer in json %&apos;prompt&apos;" type="reporter" category="deepseek"><header></header><code></code><translations>zh_CN:用json回答 _&#xD;</translations><inputs><input type="%txt"></input></inputs><script><block s="doDeclareVariables"><list><l>answer</l><l>result</l></list></block><block s="doSetVar"><l>answer</l><custom-block s="answer of %txt"><block s="reportJoinWords"><list><l>请用json数据格式返回以下问题的答案，</l><block var="prompt"/><l>，请直接返回json数据，不要任何其他标注或文字。</l></list></block></custom-block></block><block s="doWarp"><script><block s="doSetVar"><l>answer</l><block s="reportKeep"><block s="reifyPredicate"><autolambda><block s="reportVariadicNotEquals"><list><block s="reportLetter"><l>1</l><l></l></block><l>`</l></list></block></autolambda><list></list></block><block s="reportTextSplit"><block var="answer"/><l><option>line</option></l></block></block></block><block s="doIfElse"><block s="reportVariadicGreaterThan"><list><block s="reportListAttribute"><l><option>length</option></l><block var="answer"/></block><l>0</l></list></block><script><block s="doSetVar"><l>result</l><block s="reportListItem"><l>1</l><block var="answer"/></block></block><block s="doForEach"><l>项</l><block s="reportCDR"><block var="answer"/></block><script><block s="doSetVar"><l>result</l><block s="reportJoinWords"><list><block var="result"/><block s="reportUnicodeAsLetter"><l>13</l></block><block s="reportUnicodeAsLetter"><l>10</l></block><block var="项"/></list></block></block></script></block><block s="doReport"><block var="result"/></block></script><script><block s="doReport"><l></l></block></script></block></script></block></script></block-definition><block-definition s="position" type="reporter" category="motion"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doReport"><block s="reportNewList"><list><block s="xPosition"></block><block s="yPosition"></block></list></block></block></script></block-definition><block-definition s="register func %&apos;method&apos; %&apos;block&apos;" type="command" category="other"><header></header><code></code><translations></translations><inputs><input type="%txt"></input><input type="%cmdRing"></input></inputs><script><block s="doRun"><block s="reportJSFunction"><list><l>method</l><l>func</l></list><l>this.parent.funcmap[method] = func;</l></block><list><block var="method"/><block var="block"/></list></block></script></block-definition><block-definition s="register reporter %&apos;method&apos; %&apos;block&apos;" type="command" category="other"><header></header><code></code><translations></translations><inputs><input type="%txt"></input><input type="%repRing"></input></inputs><script><block s="doRun"><block s="reportJSFunction"><list><l>method</l><l>func</l></list><l>this.parent.reportmap[method] = func;</l></block><list><block var="method"/><block var="block"/></list></block></script></block-definition><block-definition s="TurtleStitch code of %&apos;promtp&apos;" type="reporter" category="deepseek"><header></header><code></code><translations>zh_CN:_ 的TurtleStitch代码&#xD;</translations><inputs><input type="%txt"></input></inputs><script><block s="doDeclareVariables"><list><l>answer</l><l>result</l><l>blockList</l></list></block><block s="doSetVar"><l>answer</l><custom-block s="answer of %txt"><block s="reportJoinWords"><list><l>请帮我生成一段TurtleStitch代码，程序只能包含forward,right,left,repeat,penup,pendown等简单指令，尽量少用penup，尽量不要有重复3次以上的点，比如旋转时可以移动一下旋转中心点，</l><l>如果要绘制花朵或动物，可以多用弧线，弧线的基本绘制方法时重复多次移动短的距离并旋转小的角度</l><l>，</l><block var="promtp"/><l>，请只返回TurtleStitch代码行，repeat命令控制的代码块请换行输出，用"["和"]"作为repeat控制的代码块的开始和结束标识，不要其他任何文字,也不要其他标注</l></list></block></custom-block></block><block s="doWarp"><script><block s="doSetVar"><l>answer</l><block s="reportKeep"><block s="reifyPredicate"><autolambda><block s="reportVariadicAnd"><list><block s="reportVariadicNotEquals"><list><block s="reportLetter"><l>1</l><l></l></block><l>`</l></list></block><block s="reportVariadicNotEquals"><list><block s="reportLetter"><l>1</l><l></l></block><l>;</l></list></block></list></block></autolambda><list></list></block><block s="reportTextSplit"><block var="answer"/><l><option>line</option></l></block></block></block><block s="doSetVar"><l>blockList</l><custom-block s="codelist %l to blocks"><block var="answer"/></custom-block></block><block s="doIf"><block s="reportVariadicAnd"><list><block s="reportVariadicEquals"><list><block s="reportListAttribute"><l><option>length</option></l><block var="blockList"/></block><l>1</l></list></block><block s="reportIsA"><block s="reportListItem"><l>1</l><block var="blockList"/></block><l><option>list</option></l></block></list></block><script><block s="doSetVar"><l>blockList</l><block s="reportListItem"><l>1</l><block var="blockList"/></block></block></script></block><block s="doReport"><block s="reportJoinWords"><block var="blockList"/></block></block></script></block></script></block-definition><block-definition s="codelist %&apos;codelist&apos; to blocks" type="reporter" category="other"><header></header><code></code><translations></translations><inputs><input type="%l"></input></inputs><script><block s="doDeclareVariables"><list><l>firstline</l><l>startPos</l><l>elements</l><l>result</l><l>i</l><l>restlines</l><l>closelineNo</l></list></block><block s="doWarp"><script><custom-block s="setupFuncmap"></custom-block><block s="doSetVar"><l>result</l><block s="reportNewList"><list></list></block></block><block s="doSetVar"><l>firstline</l><block s="reportListItem"><l>1</l><block var="codelist"/></block></block><block s="doSetVar"><l>startPos</l><l>1</l></block><block s="doUntil"><block s="reportVariadicNotEquals"><list><block s="reportLetter"><block var="startPos"/><block var="firstline"/></block><l> </l></list></block><script><block s="doChangeVar"><l>startPos</l><l>1</l></block></script></block><block s="doSetVar"><l>elements</l><block s="reportKeep"><block s="reifyPredicate"><autolambda><block s="reportVariadicNotEquals"><list><block var="value"/><l></l></list></block></autolambda><list><l>value</l></list></block><block s="reportTextSplit"><block var="firstline"/><l> </l></block></block></block><block s="doIfElse"><block s="reportNot"><block s="reportListContainsItem"><block var="elements"/><l>[</l></block></block><script><block s="doAddToList"><custom-block s="getFuncByName %txt"><block s="reportListItem"><l>1</l><block var="elements"/></block></custom-block><block var="result"/></block><block s="doForEach"><l>项</l><block s="reportCDR"><block var="elements"/></block><script><block s="doAddToList"><block var="项"/><block var="result"/></block></script></block><block s="doSetVar"><l>restlines</l><block s="reportCDR"><block var="codelist"/></block></block></script><script><block s="doAddToList"><custom-block s="getFuncByName %txt"><block s="reportListItem"><l>1</l><block var="elements"/></block></custom-block><block var="result"/></block><block s="doSetVar"><l>closelineNo</l><l>2</l></block><block s="doFor"><l>i</l><l>2</l><block s="reportDifference"><block s="reportListAttribute"><l><option>length</option></l><block var="elements"/></block><l>1</l></block><script><block s="doAddToList"><block s="reportListItem"><block var="i"/><block var="elements"/></block><block var="result"/></block></script></block><block s="doUntil"><block s="reportVariadicEquals"><list><block s="reportLetter"><block var="startPos"/><block s="reportListItem"><block var="closelineNo"/><block var="codelist"/></block></block><l>]</l></list></block><script><block s="doChangeVar"><l>closelineNo</l><l>1</l></block></script></block><block s="doAddToList"><custom-block s="codelist %l to blocks"><block s="reportListItem"><block s="reportNumbers"><l>2</l><block s="reportDifference"><block var="closelineNo"/><l>1</l></block></block><block var="codelist"/></block></custom-block><block var="result"/></block><block s="doIfElse"><block s="reportVariadicLessThan"><list><block var="closelineNo"/><block s="reportListAttribute"><l><option>length</option></l><block var="codelist"/></block></list></block><script><block s="doSetVar"><l>restlines</l><block s="reportListItem"><block s="reportNumbers"><block s="reportVariadicSum"><list><block var="closelineNo"/><l>1</l></list></block><block s="reportListAttribute"><l><option>length</option></l><block var="codelist"/></block></block><block var="codelist"/></block></block></script><script><block s="doSetVar"><l>restlines</l><block s="reportNewList"><list></list></block></block></script></block></script></block><block s="doIfElse"><block s="reportListIsEmpty"><block var="restlines"/></block><script><block s="doReport"><block s="reportNewList"><list><block var="result"/></list></block></block></script><script><block s="doReport"><block s="reportConcatenatedLists"><list><block s="reportNewList"><list><block var="result"/></list></block><custom-block s="codelist %l to blocks"><block var="restlines"/></custom-block></list></block></block></script></block></script></block></script></block-definition><block-definition s="setupFuncmap" type="command" category="other"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doWarp"><script><block s="doIf"><block s="evaluate"><block s="reportJSFunction"><list></list><l>return !this.parent.funcmap;</l></block><list></list></block><script><block s="doRun"><block s="reportJSFunction"><list></list><l>this.parent.funcmap = {};</l></block><list></list></block><custom-block s="register func %txt %cmdRing"><l>goto</l><block s="reifyScript"><script><block s="gotoXY"><l></l><l></l></block></script><list></list></block></custom-block><custom-block s="register func %txt %cmdRing"><l>forward</l><block s="reifyScript"><script><block s="forward"><l></l></block></script><list></list></block></custom-block><custom-block s="register func %txt %cmdRing"><l>clone</l><block s="reifyScript"><script><block s="createClone"><l><option>myself</option></l></block></script><list></list></block></custom-block><custom-block s="register func %txt %cmdRing"><l>right</l><block s="reifyScript"><script><block s="turn"><l></l></block></script><list></list></block></custom-block><custom-block s="register func %txt %cmdRing"><l>left</l><block s="reifyScript"><script><block s="turnLeft"><l></l></block></script><list></list></block></custom-block><custom-block s="register func %txt %cmdRing"><l>fd</l><block s="reifyScript"><script><block s="forward"><l></l></block></script><list></list></block></custom-block><custom-block s="register func %txt %cmdRing"><l>rt</l><block s="reifyScript"><script><block s="turn"><l></l></block></script><list></list></block></custom-block><custom-block s="register func %txt %cmdRing"><l>lt</l><block s="reifyScript"><script><block s="turnLeft"><l></l></block></script><list></list></block></custom-block><custom-block s="register func %txt %cmdRing"><l>seth</l><block s="reifyScript"><script><block s="setHeading"><l></l></block></script><list></list></block></custom-block><custom-block s="register func %txt %cmdRing"><l>setpos</l><block s="reifyScript"><script><block s="gotoXY"><l></l><l></l></block></script><list></list></block></custom-block><custom-block s="register func %txt %cmdRing"><l>setx</l><block s="reifyScript"><script><block s="setXPosition"><l></l></block></script><list></list></block></custom-block><custom-block s="register func %txt %cmdRing"><l>sety</l><block s="reifyScript"><script><block s="setYPosition"><l></l></block></script><list></list></block></custom-block><custom-block s="register func %txt %cmdRing"><l>penup</l><block s="reifyScript"><script><block s="up"></block></script><list></list></block></custom-block><custom-block s="register func %txt %cmdRing"><l>up</l><block s="reifyScript"><script><block s="up"></block></script><list></list></block></custom-block><custom-block s="register func %txt %cmdRing"><l>pu</l><block s="reifyScript"><script><block s="up"></block></script><list></list></block></custom-block><custom-block s="register func %txt %cmdRing"><l>pendown</l><block s="reifyScript"><script><block s="down"></block></script><list></list></block></custom-block><custom-block s="register func %txt %cmdRing"><l>down</l><block s="reifyScript"><script><block s="down"></block></script><list></list></block></custom-block><custom-block s="register func %txt %cmdRing"><l>pd</l><block s="reifyScript"><script><block s="down"></block></script><list></list></block></custom-block><custom-block s="register func %txt %cmdRing"><l>pensize</l><block s="reifyScript"><script><block s="setSize"><l></l></block></script><list></list></block></custom-block><custom-block s="register func %txt %cmdRing"><l>stamp</l><block s="reifyScript"><script><block s="doStamp"></block></script><list></list></block></custom-block><custom-block s="register func %txt %cmdRing"><l>hide</l><block s="reifyScript"><script><block s="hide"></block></script><list></list></block></custom-block><custom-block s="register func %txt %cmdRing"><l>show</l><block s="reifyScript"><script><block s="show"></block></script><list></list></block></custom-block><custom-block s="register func %txt %cmdRing"><l>shape</l><block s="reifyScript"><script><block s="doSwitchToCostume"><l></l></block></script><list></list></block></custom-block><custom-block s="register func %txt %cmdRing"><l>reset</l><block s="reifyScript"><script><block s="up"></block><block s="gotoXY"><l>0</l><l>0</l></block><block s="clear"></block><block s="setHeading"><l>90</l></block></script><list></list></block></custom-block><custom-block s="register func %txt %cmdRing"><l>repeat</l><block s="reifyScript"><script><block s="doRepeat"><l></l><script></script></block></script><list></list></block></custom-block><block s="doRun"><block s="reportJSFunction"><list></list><l>this.parent.reportmap = {};</l></block><list></list></block><custom-block s="register reporter %txt %repRing"><l>position</l><block s="reifyReporter"><autolambda><custom-block s="position"></custom-block></autolambda><list></list></block></custom-block><custom-block s="register reporter %txt %repRing"><l>clone</l><block s="reifyReporter"><autolambda><block s="newClone"><l><option>myself</option></l></block></autolambda><list></list></block></custom-block><custom-block s="register reporter %txt %repRing"><l>pos</l><block s="reifyReporter"><autolambda><custom-block s="position"></custom-block></autolambda><list></list></block></custom-block><custom-block s="register reporter %txt %repRing"><l>xcor</l><block s="reifyReporter"><autolambda><block s="xPosition"></block></autolambda><list></list></block></custom-block><custom-block s="register reporter %txt %repRing"><l>ycor</l><block s="reifyReporter"><autolambda><block s="yPosition"></block></autolambda><list></list></block></custom-block><custom-block s="register reporter %txt %repRing"><l>heading</l><block s="reifyReporter"><autolambda><block s="direction"></block></autolambda><list></list></block></custom-block><custom-block s="register reporter %txt %repRing"><l>distance</l><block s="reifyReporter"><autolambda><block s="reportRelationTo"><l><option>distance</option></l><l></l></block></autolambda><list></list></block></custom-block><custom-block s="register reporter %txt %repRing"><l>costumes</l><block s="reifyReporter"><autolambda><block s="reportGet"><l><option>costumes</option></l></block></autolambda><list></list></block></custom-block><custom-block s="register reporter %txt %repRing"><l>isdown</l><block s="reifyReporter"><autolambda><block s="getPenDown"></block></autolambda><list></list></block></custom-block></script></block></script></block></script></block-definition><block-definition s="getFuncByName %&apos;name&apos;" type="reporter" category="other"><header></header><code></code><translations></translations><inputs><input type="%txt"></input></inputs><script><block s="doDeclareVariables"><list><l>funcblock</l></list></block><block s="doWarp"><script><block s="doSetVar"><l>funcblock</l><block s="evaluate"><block s="reportJSFunction"><list><l>method</l></list><l>if (this.parent.funcmap[method]){&#xD;  return this.parent.funcmap[method];&#xD;}else{&#xD;  return method;&#xD;}</l></block><list><block var="name"/></list></block></block><block s="doReport"><block var="funcblock"/></block></script></block></script></block-definition></blocks>